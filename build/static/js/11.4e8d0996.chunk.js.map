{"version":3,"sources":["components/PDF/ActionChecklistPDF.ts","components/SessionFiles/CheckboxListItem.tsx","components/SessionFiles/FileListing.tsx","components/SessionFiles/__config/constants.ts","components/SessionFiles/__config/styles.ts","pages/session-files.tsx","components/SessionFiles/__config/utilities.ts","components/SnackbarMsg/SnackbarMsg.tsx","components/IfElseLoading/IfElseLoading.tsx","components/Forms/CFC/initialValues.ts","components/Forms/CFC/calculateInitial.ts","components/SectionTitle/_config/styles.ts","components/SectionTitle/SectionTitle.tsx","components/PDF/PDFLib.ts","util/array/arrayFillWith.ts","data/healthChecks/HealthCheckLogic.ts","state/CFC/createCashFlow.tsx","components/PDF/CashFlowCanvasPDF.ts","components/ActionChecklist/ActionContainer/_config/data.ts","components/PDF/HealthCheckPDF.ts"],"names":["pdfMake","vfs","pdfFonts","itemsSection","items","length","text","style","basicTable","map","description","reviewBy","completed","format","title","checklistCollection","notes","priority","a","docDefinition","pageDefaultSettings","content","pageHeading","pagePadding","Object","keys","actionTitleMapping","value","idx","arr","filter","i","actionContainer","note","prior","sortedItems","order","p","findIndex","x","id","v","push","styles","pageHeader","fontSize","bold","fillColor","lightBlue","color","alignment","heading","subHeading","rightAlign","noResult","italics","decoration","defaultStyle","createPdf","React","memo","label","checked","onClick","ListItem","button","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","inputProps","ListItemText","setState","state","data","loading","handleChange","prev","copy","ExpandableNav","IfElseLoading","if","List","component","disablePadding","item","CheckboxListItem","name","staticTitles","changeLevers","actionChecklist","discoverTopics","path","useStyles","makeStyles","theme","dropdownWrapper","marginTop","spacing","useSessionStyles","createStyles","backdrop","zIndex","drawer","SessionFiles","classes","cls","useState","healthChecks","cfc","arrayFillWith","selectedFiles","setSelectedFiles","setHealthChecks","setCfc","HCListing","setHCListing","CFCListing","setCFCListing","assetBaseUrl","process","REACT_APP_ASSETS_URL","fetching","setFetching","exporting","setExporting","useCurrentClient","currentClient","synced","open","msg","snackbar","setSnackbar","showSnackbar","severity","fetchData","useCallback","HealthCheckUseCase","findByClient","hcs","CFCUseCase","cfcs","reduce","acc","cur","concat","createdAt","canvasDisplayTitle","useEffect","changeSingleDownload","getStaticPdf","url","fetchPolyfill","method","then","response","arrayBuffer","buffer","fileName","makeStaticPdf","file","encodeURI","pdf","pdfMakeBlobPromise","filename","Promise","resolve","getBlob","b","blob","generateZip","zip","JSZip","CHPDF","ActionChecklistUseCase","checklists","ActionNotesUseCase","ActionPriorityUseCase","pdfPriority","ActionChecklistPDF","ACPDF","DTPromises","val","HCNames","HCPromises","pdfData","questions","forEach","q","question","answer","answers","options","replace","HealthCheckPDF","CFCNames","CFCPromises","calculated","calculateInitial","questionValues","one","calcQuestionOne","two","calcQuestionTwo","paygWithholding","superAmount","incomeTaxPercentage","three","calcQuestionThree","openingBalance","four","undefined","CashFlowCanvasPDF","all","res","names","blobPromises","res1","doc","hasProperty","generateAsync","type","saveAs","catch","Nav","SingleDownloads","Grid","container","xs","md","Box","className","SectionTitle","Typography","FileListing","Backdrop","CircularProgress","SnackbarMsg","onClose","event","reason","autoHideDuration","anchorOrigin","vertical","horizontal","variant","action","size","children","Loading","initialValues","canvasTitle","canvasType","canvasTimeFrame","canvasStartDate","Date","canvasEndDate","incomeTax","cashToOwner","stock","creditors","debtors","assets","loans","cashInItems","createCashFlowItem","cashOutItems","gstOnPurchases","gstOnSales","values","isGSTValid","calcCashFlowGST","closingBalance","calcClosingBalance","totalNetAssets","calcTotalNetAssets","cashSurplus","calcCashSurplus","availableToSpend","calcAvailableToSpend","calcIncomeTaxPer","useSTStyles","fontWeight","marginBottom","breakpoints","down","typography","h5","props","addPadding","margin","columns","pageSize","pageMargins","footer","frameContent","inner","table","widths","body","layout","len","fill","Array","HealthCheckDB","clientId","this","database","transaction","where","first","equals","toArray","ILogicLayer","amount","gstApplicable","uuidv4","formatDollars","addDollarSign","formatNumber","openingBalanceSection","cashInSection","cashInTotal","line","gstOnSalesSection","cashOutSection","cashOutTotal","gstOnPurchasesSection","cashSurplusSection","incomeSection","availableToSpendSection","closingCashBalanceSection","yourNetAssetPositionSection","dbGSTOnPurchase","dbGSTOnSales","calcCashFlowTotal","calcTotalCashOut","upperFirst","green","yellowBlock","spacer","cashInActions","cashOutActions","planningBusiness","recordKeeping","funding","managing","planningCommitments","tracking","transition","questionElementTop","colSpan","purple","tableHeading","grey","positive","answerTheming","negative","neutral"],"mappings":"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","file":"static/js/11.4e8d0996.chunk.js","sourcesContent":["/* eslint-disable */\nimport pdfMake, { TCreatedPdf } from \"pdfmake/build/pdfmake\"\nimport pdfFonts from \"pdfmake/build/vfs_fonts\"\nimport { format } from \"date-fns\"\nimport { lightBlue } from \"@material-ui/core/colors\"\nimport {\n\tpageHeading,\n\tpagePadding,\n\tpageDefaultSettings,\n\tbasicTable,\n} from \"./PDFLib\"\nimport {\n\tActionChecklistStruct,\n\tActionChecklistNotesStruct,\n\tClientId,\n\tActionChecklistPriorityStruct,\n} from \"../../data/_config/shape\"\nimport { actionTitleMapping } from \"../ActionChecklist/ActionContainer/_config/data\"\nimport { PossibleActionItems } from \"../../state/action-checklist/shape\"\nimport ActionChecklistUseCase from \"../../data/ActionChecklist/ChecklistLogic\"\nimport ActionNotesUseCase from \"../../data/ActionChecklist/NotesLogic\"\nimport ActionPriorityUseCase from \"../../data/ActionChecklist/PriorityLogic\"\n\npdfMake.vfs = pdfFonts.pdfMake.vfs\n\nconst itemsSection = (items: ActionChecklistStruct[]) => {\n\tif (items.length === 0) {\n\t\treturn {\n\t\t\ttext: \"No action items\",\n\t\t\tstyle: \"noResult\",\n\t\t}\n\t}\n\n\treturn basicTable(\n\t\titems.map(({ description, reviewBy, completed }) => [\n\t\t\t{\n\t\t\t\ttext: description || \"No description provided\",\n\t\t\t\tstyle: [\n\t\t\t\t\tdescription === \"\" ? \"noResult\" : \"\",\n\t\t\t\t\tcompleted ? \"completed\" : \"\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: format(reviewBy, \"dd/MM/yyyy\"),\n\t\t\t\tstyle: [completed ? \"completed\" : \"\"],\n\t\t\t},\n\t\t])\n\t)\n}\n\nexport default async (\n\ttitle: string,\n\tchecklistCollection: ActionChecklistStruct[],\n\tnotes: ActionChecklistNotesStruct[],\n\tpriority: ActionChecklistPriorityStruct[]\n): Promise<TCreatedPdf> => {\n\tconst docDefinition: any = {\n\t\t...pageDefaultSettings(),\n\n\t\tcontent: [\n\t\t\tpageHeading(`${title} - Action Checklist`),\n\t\t\tpagePadding([\n\t\t\t\t...(Object.keys(actionTitleMapping) as PossibleActionItems[]).map(\n\t\t\t\t\t(value, idx) => {\n\t\t\t\t\t\tconst arr = []\n\t\t\t\t\t\tconst items = checklistCollection.filter(\n\t\t\t\t\t\t\t(i) => i.actionContainer === value\n\t\t\t\t\t\t)\n\n\t\t\t\t\t\tconst note = notes.filter((i) => i.actionContainer === value)\n\t\t\t\t\t\tconst prior = priority.filter((i) => i.actionContainer === value)\n\n\t\t\t\t\t\tif (items.length === 0 || prior.length < 1) return \"\"\n\n\t\t\t\t\t\tconst sortedItems = prior[0].order\n\t\t\t\t\t\t\t.map((p) => {\n\t\t\t\t\t\t\t\tconst idx = items.findIndex((x) => x?.id === p)\n\t\t\t\t\t\t\t\treturn items[idx]\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.filter((v) => typeof v !== \"undefined\")\n\n\t\t\t\t\t\tif (idx !== 0) arr.push(\" \")\n\t\t\t\t\t\tarr.push({ text: actionTitleMapping[value], style: \"heading\" })\n\t\t\t\t\t\tarr.push(itemsSection(sortedItems))\n\t\t\t\t\t\tif (note.length > 0 && note[0].notes !== \"\") {\n\t\t\t\t\t\t\tarr.push(\" \")\n\t\t\t\t\t\t\tarr.push({ text: \"Notes\", style: \"subHeading\" })\n\t\t\t\t\t\t\tarr.push(note[0].notes)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn arr\n\t\t\t\t\t}\n\t\t\t\t),\n\t\t\t]),\n\t\t],\n\n\t\tstyles: {\n\t\t\tpageHeader: {\n\t\t\t\tfontSize: 20,\n\t\t\t\tbold: true,\n\t\t\t\tfillColor: lightBlue[\"800\"],\n\t\t\t\tcolor: \"white\",\n\t\t\t\talignment: \"center\",\n\t\t\t},\n\t\t\theading: {\n\t\t\t\tfontSize: 16,\n\t\t\t\tbold: true,\n\t\t\t},\n\t\t\tsubHeading: {\n\t\t\t\tfontSize: 14,\n\t\t\t\tbold: true,\n\t\t\t},\n\t\t\trightAlign: {\n\t\t\t\talignment: \"right\",\n\t\t\t},\n\t\t\tnoResult: {\n\t\t\t\titalics: true,\n\t\t\t\tcolor: \"#333\",\n\t\t\t},\n\t\t\tcompleted: {\n\t\t\t\tdecoration: \"lineThrough\",\n\t\t\t},\n\t\t},\n\n\t\tdefaultStyle: {\n\t\t\tfontSize: 15,\n\t\t\tbold: false,\n\t\t},\n\t}\n\treturn pdfMake.createPdf(docDefinition)\n}\n","import React, { ReactElement } from \"react\"\nimport {\n\tListItem,\n\tListItemIcon,\n\tCheckbox,\n\tListItemText,\n} from \"@material-ui/core\"\nimport { CheckboxListItemProps } from \"./__config/shape\"\n\nexport default React.memo(\n\t({ label, checked, onClick }: CheckboxListItemProps): ReactElement => (\n\t\t<ListItem button onClick={onClick}>\n\t\t\t<ListItemIcon>\n\t\t\t\t<Checkbox\n\t\t\t\t\tedge=\"start\"\n\t\t\t\t\tchecked={checked}\n\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\tdisableRipple\n\t\t\t\t\tinputProps={{ \"aria-label\": label }}\n\t\t\t\t/>\n\t\t\t</ListItemIcon>\n\t\t\t<ListItemText>{label}</ListItemText>\n\t\t</ListItem>\n\t)\n)\n","import React, { ReactElement } from \"react\"\nimport { List, ListItem, ListItemText } from \"@material-ui/core\"\nimport ExpandableNav from \"../ExpandableNav\"\nimport IfElseLoading from \"../IfElseLoading\"\nimport { FileListingProps, FileListingStruct } from \"./__config/shape\"\nimport CheckboxListItem from \"./CheckboxListItem\"\n\nexport default React.memo(\n\t({\n\t\ttitle,\n\t\tsetState,\n\t\tstate,\n\t\tdata,\n\t\tid,\n\t\tloading = false,\n\t}: FileListingProps): ReactElement => {\n\t\tconst handleChange = (idx: number) => (): void => {\n\t\t\tsetState((prev) => {\n\t\t\t\tconst copy = [...prev[id]]\n\t\t\t\t// eslint-disable-next-line\n\t\t\tcopy[idx] = !copy[idx]\n\n\t\t\t\treturn {\n\t\t\t\t\t...prev,\n\t\t\t\t\t[id]: copy,\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tfunction mapList(item: FileListingStruct, idx: number): ReactElement {\n\t\t\treturn (\n\t\t\t\t<CheckboxListItem\n\t\t\t\t\tkey={item.id}\n\t\t\t\t\tonClick={handleChange(idx)}\n\t\t\t\t\tchecked={state[idx]}\n\t\t\t\t\tlabel={item.name}\n\t\t\t\t/>\n\t\t\t)\n\t\t}\n\n\t\treturn (\n\t\t\t<ExpandableNav title={title}>\n\t\t\t\t<IfElseLoading if={!loading}>\n\t\t\t\t\t<List component=\"nav\" disablePadding>\n\t\t\t\t\t\t{data.length === 0 ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t\t<ListItemText>No data available to download</ListItemText>\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>{data.map(mapList)}</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</List>\n\t\t\t\t</IfElseLoading>\n\t\t\t</ExpandableNav>\n\t\t)\n\t}\n)\n","import { DiscoverTopicsStruct, SingleDownloadProps } from \"./shape\"\n\nexport const staticTitles: Record<SingleDownloadProps[\"id\"], string> = {\n\tchangeLevers: \"Change Levers\",\n\tactionChecklist: \"Action Checklist\",\n}\n\nexport const discoverTopics: DiscoverTopicsStruct[] = [\n\t{\n\t\tname: \"Planning your business - Quicksnaps\",\n\t\tid: \"Planning your business - Quicksnaps\",\n\t\tpath: \"/pdf/Planning your business - Quicksnaps.pdf\",\n\t},\n\t{\n\t\tname: \"Business Plan - Activity\",\n\t\tid: \"Business Plan - Activity\",\n\t\tpath: \"/pdf/BusinessPlan-Activity.pdf\",\n\t},\n\t{\n\t\tname: \"Record Keeping - Quicksnaps\",\n\t\tid: \"Record Keeping - Quicksnaps\",\n\t\tpath: \"/pdf/Record keeping - Quicksnaps.pdf\",\n\t},\n\t{\n\t\tname: \"Record Keeping - Activity\",\n\t\tid: \"Record Keeping - Activity\",\n\t\tpath: \"/pdf/RecordKeeping-Activity.pdf\",\n\t},\n\t{\n\t\tname: \"Funding your business - Quicksnaps\",\n\t\tid: \"Funding your business - Quicksnaps\",\n\t\tpath: \"/pdf/Funding your business - Quicksnaps.pdf\",\n\t},\n\t{\n\t\tname: \"Funding your business - Activity\",\n\t\tid: \"Funding your business - Activity\",\n\t\tpath: \"/pdf/Funding-Activity.pdf\",\n\t},\n\t{\n\t\tname: \"Managing your cash flow - Quicksnaps\",\n\t\tid: \"Managing your cash flow - Quicksnaps\",\n\t\tpath: \"/pdf/Managing your cash flow - Quicksnaps.pdf\",\n\t},\n\t{\n\t\tname: \"Planning your regular financial commitments - Quicksnaps\",\n\t\tid: \"Planning your regular financial commitments - Quicksnaps\",\n\t\tpath: \"/pdf/Planning your regular financial commitments - Quicksnaps.pdf\",\n\t},\n\t{\n\t\tname: \"Know your commitments - Activity\",\n\t\tid: \"Know your commitments - Activity\",\n\t\tpath: \"/pdf/KnowYourCommitments-Activity.pdf\",\n\t},\n\t{\n\t\tname: \"Tracking your performance - Quicksnaps\",\n\t\tid: \"Tracking your performance - Quicksnaps\",\n\t\tpath: \"/pdf/Tracking your performance - Quicksnaps.pdf\",\n\t},\n\t{\n\t\tname: \"Selling, closing and succession planning - Quicksnaps\",\n\t\tid: \"Selling, closing and succession planning - Quicksnaps\",\n\t\tpath: \"/pdf/Selling, closing and succession planning - Quicksnaps.pdf\",\n\t},\n]\n\nexport const changeLeversPath = \"/pdf/Change levers.pdf\"\n","import { makeStyles } from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme) => ({\n\tdropdownWrapper: {\n\t\tmarginTop: theme.spacing(3),\n\t},\n}))\n\nexport default useStyles\n","import React, { ReactElement, useState, useCallback, useEffect } from \"react\"\nimport {\n\tGrid,\n\tTypography,\n\tList,\n\tListItem,\n\tListItemIcon,\n\tListItemText,\n\tBox,\n\tmakeStyles,\n\tTheme,\n\tcreateStyles,\n\tBackdrop,\n\tCircularProgress,\n} from \"@material-ui/core\"\nimport GetAppIcon from \"@material-ui/icons/GetApp\"\nimport JSZip from \"jszip\"\nimport { fetch as fetchPolyfill } from \"whatwg-fetch\"\nimport { saveAs } from \"file-saver\"\nimport { format } from \"date-fns\"\nimport { HealthCheckDataStruct, CFCStruct } from \"../data/_config/shape\"\nimport HealthCheckUseCase from \"../data/healthChecks/HealthCheckLogic\"\nimport CFCUseCase from \"../data/CFC/CFCLogic\"\nimport arrayFillWith from \"../util/array/arrayFillWith\"\nimport { PageContainer } from \"../components/Layouts\"\nimport ExpandableNav from \"../components/ExpandableNav\"\nimport FileListing from \"../components/SessionFiles/FileListing\"\nimport useCurrentClient from \"../state/client/useCurrentClient\"\nimport {\n\tSelectedFiles,\n\tSingleDownloadProps,\n\tFileListingStruct,\n} from \"../components/SessionFiles/__config/shape\"\nimport {\n\tdiscoverTopics,\n\tstaticTitles,\n\tchangeLeversPath,\n} from \"../components/SessionFiles/__config/constants\"\nimport {\n\thealthCheckToData,\n\tcfcToData,\n} from \"../components/SessionFiles/__config/utilities\"\nimport CheckboxListItem from \"../components/SessionFiles/CheckboxListItem\"\nimport useStyles from \"../components/SessionFiles/__config/styles\"\nimport SectionTitle from \"../components/SectionTitle\"\nimport HealthCheckPDF, {\n\tHealthCheckQuestionSet,\n} from \"../components/PDF/HealthCheckPDF\"\nimport { questions } from \"../components/HealthCheck/_config/data\"\nimport ActionChecklistUseCase from \"../data/ActionChecklist/ChecklistLogic\"\nimport ActionNotesUseCase from \"../data/ActionChecklist/NotesLogic\"\nimport ActionChecklistPDF from \"../components/PDF/ActionChecklistPDF\"\nimport CashFlowCanvasPDF from \"../components/PDF/CashFlowCanvasPDF\"\nimport hasProperty from \"../util/object/hasProperty\"\nimport {\n\tcalcQuestionOne,\n\tcalcQuestionThree,\n\tcalcQuestionTwo,\n\tcanvasDisplayTitle,\n} from \"../components/CFC/__config/utilities\"\nimport SnackbarMsg, {\n\tSnackbarMsgData,\n} from \"../components/SnackbarMsg/SnackbarMsg\"\nimport ActionPriorityUseCase from \"../data/ActionChecklist/PriorityLogic\"\nimport { calculateInitial } from \"../components/Forms/CFC\"\n\nconst useSessionStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\tbackdrop: {\n\t\t\tzIndex: theme.zIndex.drawer + 1,\n\t\t\tcolor: \"#fff\",\n\t\t},\n\t})\n)\n\nconst SessionFiles = (): ReactElement => {\n\tconst classes = useSessionStyles()\n\tconst cls = useStyles()\n\tconst [selectedFiles, setSelectedFiles] = useState<SelectedFiles>({\n\t\tchangeLevers: false,\n\t\tactionChecklist: false,\n\t\thealthChecks: [],\n\t\tcfc: [],\n\t\tdiscoverTopics: arrayFillWith(discoverTopics.length, false),\n\t})\n\tconst [healthChecks, setHealthChecks] = useState<HealthCheckDataStruct[]>([])\n\tconst [cfc, setCfc] = useState<CFCStruct[]>([])\n\tconst [HCListing, setHCListing] = useState<FileListingStruct[]>([])\n\tconst [CFCListing, setCFCListing] = useState<FileListingStruct[]>([])\n\tconst assetBaseUrl = process.env.REACT_APP_ASSETS_URL || \"\"\n\n\tconst [fetching, setFetching] = useState(true)\n\tconst [exporting, setExporting] = useState(false)\n\tconst [currentClient, synced] = useCurrentClient()\n\n\tconst [snackbar, setSnackbar] = useState<SnackbarMsgData>({\n\t\topen: false,\n\t\tmsg: \"\",\n\t})\n\n\tfunction showSnackbar(\n\t\tmsg: SnackbarMsgData[\"msg\"],\n\t\tseverity: SnackbarMsgData[\"severity\"]\n\t): void {\n\t\tsetSnackbar({ ...snackbar, msg, severity, open: true })\n\t}\n\n\tfunction handleClose(event?: React.SyntheticEvent, reason?: string): void {\n\t\tif (reason === \"clickaway\") {\n\t\t\treturn\n\t\t}\n\n\t\tsetSnackbar({ ...snackbar, open: false })\n\t}\n\n\tconst fetchData = useCallback(async () => {\n\t\tif (currentClient?.id) {\n\t\t\tconst hcs = await HealthCheckUseCase.findByClient(currentClient.id)\n\t\t\tconst cfcs = await CFCUseCase.findByClient(currentClient.id)\n\n\t\t\tsetHealthChecks(hcs)\n\t\t\tsetCfc(cfcs)\n\n\t\t\tsetSelectedFiles((prev) => ({\n\t\t\t\t...prev,\n\t\t\t\thealthChecks: arrayFillWith(hcs.length, false),\n\t\t\t\tcfc: arrayFillWith(cfcs.length, false),\n\t\t\t}))\n\n\t\t\tsetHCListing(hcs.reduce(healthCheckToData(), []))\n\t\t\tsetCFCListing(cfcs.reduce(cfcToData(), []))\n\t\t}\n\t\tsetFetching(false)\n\t}, [\n\t\tcurrentClient,\n\t\tsetSelectedFiles,\n\t\tsetHealthChecks,\n\t\tsetCfc,\n\t\tsetFetching,\n\t\tsetHCListing,\n\t\tsetCFCListing,\n\t])\n\n\tuseEffect(() => {\n\t\tif (synced) {\n\t\t\tfetchData()\n\t\t}\n\t}, [fetchData, synced])\n\n\tconst changeSingleDownload = (id: SingleDownloadProps[\"id\"]) => (): void => {\n\t\tsetSelectedFiles((prev) => ({\n\t\t\t...prev,\n\t\t\t[id]: !prev[id],\n\t\t}))\n\t}\n\n\tconst getStaticPdf = (name: string, url: string) =>\n\t\t// IE does not support Fetch response.arrayBuffer().\n\t\t// Use Polyfill Fetch for PDF response buffer.\n\t\tfetchPolyfill(url, {\n\t\t\tmethod: \"GET\",\n\t\t})\n\t\t\t.then((response: any) => response.arrayBuffer()) // eslint-disable-line\n\t\t\t.then((buffer: any) => ({ fileName: name, buffer })) // eslint-disable-line\n\n\t// eslint-disable-next-line\n\tconst makeStaticPdf = async (name: string, path: string): Promise<any> => {\n\t\tconst file = encodeURI(`${assetBaseUrl}${path}`)\n\t\tconst pdf = await getStaticPdf(name, file)\n\t\treturn pdf\n\t}\n\n\tconst pdfMakeBlobPromise = (\n\t\tpdf: pdfMake.TCreatedPdf,\n\t\tfilename: string\n\t): Promise<{ blob: Blob; filename: string }> =>\n\t\tnew Promise((resolve) => {\n\t\t\tpdf.getBlob((b: Blob) => resolve({ blob: b, filename }))\n\t\t})\n\n\tconst generateZip = async (): Promise<void> => {\n\t\tif (currentClient?.id) {\n\t\t\tsetExporting(true)\n\t\t\tconst zip = new JSZip()\n\n\t\t\t// Change Levers document\n\t\t\tif (selectedFiles.changeLevers) {\n\t\t\t\tconst CHPDF = await makeStaticPdf(\"ChangeLevers.pdf\", changeLeversPath)\n\t\t\t\tzip.file(CHPDF.fileName, CHPDF.buffer)\n\t\t\t}\n\n\t\t\t// Action Checklist\n\t\t\tif (selectedFiles.actionChecklist) {\n\t\t\t\tconst checklists = await ActionChecklistUseCase.findByClient(\n\t\t\t\t\tcurrentClient.id\n\t\t\t\t)\n\t\t\t\tconst notes = await ActionNotesUseCase.findByClient(currentClient.id)\n\t\t\t\tconst pdfPriority = await ActionPriorityUseCase.findByClient(\n\t\t\t\t\tcurrentClient.id\n\t\t\t\t)\n\n\t\t\t\tconst ACPDF = await ActionChecklistPDF(\n\t\t\t\t\tcurrentClient?.name ?? \"Client\",\n\t\t\t\t\tchecklists,\n\t\t\t\t\tnotes,\n\t\t\t\t\tpdfPriority\n\t\t\t\t)\n\t\t\t\tconst blob = await pdfMakeBlobPromise(\n\t\t\t\t\tACPDF,\n\t\t\t\t\t\"ActionChecklistSummary.pdf\"\n\t\t\t\t)\n\t\t\t\tzip.file(blob.filename, blob.blob)\n\t\t\t}\n\n\t\t\t// Discover Topics\n\t\t\tconst DTPromises: any = selectedFiles.discoverTopics // eslint-disable-line\n\t\t\t\t.map((val, idx) => {\n\t\t\t\t\tif (val) {\n\t\t\t\t\t\treturn makeStaticPdf(\n\t\t\t\t\t\t\t`${discoverTopics[idx].name}.pdf`,\n\t\t\t\t\t\t\tdiscoverTopics[idx].path\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\treturn undefined\n\t\t\t\t})\n\t\t\t\t.filter((v) => typeof v !== \"undefined\")\n\n\t\t\t// Health Checks\n\t\t\tconst HCNames: string[] = []\n\t\t\tconst HCPromises = selectedFiles.healthChecks\n\t\t\t\t.map((val, idx) => {\n\t\t\t\t\tif (val) {\n\t\t\t\t\t\tconst data = healthChecks[idx]\n\t\t\t\t\t\tif (data) {\n\t\t\t\t\t\t\tconst pdfData: HealthCheckQuestionSet = {}\n\t\t\t\t\t\t\tquestions.forEach((q, i) => {\n\t\t\t\t\t\t\t\tconst { question } = q\n\t\t\t\t\t\t\t\tconst answer = data?.answers[i] || \"positive\"\n\t\t\t\t\t\t\t\tconst text = q.options[answer]\n\t\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\t\tpdfData[i] = { question, answer, text }\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\tHCNames.push(\n\t\t\t\t\t\t\t\t`Completed Health Check ${format(\n\t\t\t\t\t\t\t\t\tdata.createdAt!, // eslint-disable-line\n\t\t\t\t\t\t\t\t\t\"dd/MM/yyyy\"\n\t\t\t\t\t\t\t\t)}.pdf`\n\t\t\t\t\t\t\t\t\t.replace(/ /g, \"-\")\n\t\t\t\t\t\t\t\t\t.replace(/\\//g, \"-\")\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\treturn HealthCheckPDF(currentClient?.name ?? \"Client\", pdfData)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn undefined\n\t\t\t\t})\n\t\t\t\t.filter((v) => typeof v !== \"undefined\")\n\n\t\t\t// CFC\n\t\t\tconst CFCNames: string[] = []\n\t\t\tconst CFCPromises = selectedFiles.cfc\n\t\t\t\t.map((val, idx) => {\n\t\t\t\t\tif (val) {\n\t\t\t\t\t\tconst data = cfc[idx]\n\t\t\t\t\t\tif (data) {\n\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\tCFCNames.push(\n\t\t\t\t\t\t\t\t`${canvasDisplayTitle(data)}.pdf`\n\t\t\t\t\t\t\t\t\t.replace(/ /g, \"-\")\n\t\t\t\t\t\t\t\t\t.replace(/\\//g, \"-\")\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t// build the question as we do not have the CFC provider\n\n\t\t\t\t\t\t\tconst calculated = calculateInitial(data)\n\t\t\t\t\t\t\tconst questionValues = {\n\t\t\t\t\t\t\t\tone: calcQuestionOne(calculated),\n\t\t\t\t\t\t\t\ttwo: calcQuestionTwo(\n\t\t\t\t\t\t\t\t\tcalculated,\n\t\t\t\t\t\t\t\t\tdata.paygWithholding,\n\t\t\t\t\t\t\t\t\tdata.superAmount,\n\t\t\t\t\t\t\t\t\tcalculated.incomeTaxPercentage\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tthree: calcQuestionThree(\n\t\t\t\t\t\t\t\t\tdata.openingBalance,\n\t\t\t\t\t\t\t\t\tcalculated,\n\t\t\t\t\t\t\t\t\tcalculated.incomeTaxPercentage\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tfour: undefined,\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn CashFlowCanvasPDF(\n\t\t\t\t\t\t\t\tcurrentClient?.name ?? \"Client\",\n\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\tquestionValues\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn undefined\n\t\t\t\t})\n\t\t\t\t.filter((v) => typeof v !== \"undefined\")\n\n\t\t\tPromise.all([...HCPromises, ...CFCPromises])\n\t\t\t\t.then((res) => {\n\t\t\t\t\tconst names = [...HCNames, ...CFCNames]\n\n\t\t\t\t\tconst blobPromises = res\n\t\t\t\t\t\t.map((pdf, i) => {\n\t\t\t\t\t\t\tif (pdf) {\n\t\t\t\t\t\t\t\treturn pdfMakeBlobPromise(pdf, names[i])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn undefined\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.filter((v) => typeof v !== \"undefined\")\n\n\t\t\t\t\tPromise.all([...DTPromises, ...blobPromises])\n\t\t\t\t\t\t.then((res1) => {\n\t\t\t\t\t\t\tres1.forEach((doc) => {\n\t\t\t\t\t\t\t\tif (hasProperty(doc, \"fileName\")) {\n\t\t\t\t\t\t\t\t\tzip.file(doc.fileName, doc.buffer)\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tzip.file(doc.filename, doc.blob)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tzip.generateAsync({ type: \"blob\" }).then((content) => {\n\t\t\t\t\t\t\t\t// see FileSaver.js\n\t\t\t\t\t\t\t\tsaveAs(content, `${currentClient.name.replace(/ /g, \"-\")}.zip`)\n\t\t\t\t\t\t\t\tsetExporting(false)\n\t\t\t\t\t\t\t\tshowSnackbar(\n\t\t\t\t\t\t\t\t\t\"The PDFs has been successfully exported\",\n\t\t\t\t\t\t\t\t\t\"success\"\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\t\tsetExporting(false)\n\t\t\t\t\t\t\tshowSnackbar(\"Something went wrong, please try again\", \"error\")\n\t\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tsetExporting(false)\n\t\t\t\t\tshowSnackbar(\"Something went wrong, please try again\", \"error\")\n\t\t\t\t})\n\t\t}\n\t}\n\n\tconst Nav = React.memo(() => (\n\t\t<ExpandableNav>\n\t\t\t<List component=\"nav\" disablePadding>\n\t\t\t\t<ListItem button onClick={generateZip}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<GetAppIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText>Download selected files</ListItemText>\n\t\t\t\t</ListItem>\n\t\t\t</List>\n\t\t</ExpandableNav>\n\t))\n\n\tconst SingleDownloads = ({\n\t\ttitle,\n\t\tid,\n\t}: SingleDownloadProps): ReactElement => (\n\t\t<ExpandableNav title={title}>\n\t\t\t<List component=\"nav\" disablePadding>\n\t\t\t\t<CheckboxListItem\n\t\t\t\t\tonClick={changeSingleDownload(id)}\n\t\t\t\t\tchecked={selectedFiles[id]}\n\t\t\t\t\tlabel={staticTitles[id]}\n\t\t\t\t/>\n\t\t\t</List>\n\t\t</ExpandableNav>\n\t)\n\n\treturn (\n\t\t<>\n\t\t\t<PageContainer>\n\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t<Grid item xs={12} md={9}>\n\t\t\t\t\t\t<Box className=\"content-area\">\n\t\t\t\t\t\t\t<SectionTitle component=\"h1\">Downloads</SectionTitle>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tAll the activities you completed in your session are saved here.\n\t\t\t\t\t\t\t\tDownload and save the files to share and review.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tSelect the items you want to save and download them from the\n\t\t\t\t\t\t\t\tcontrol panel.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box className={cls.dropdownWrapper}>\n\t\t\t\t\t\t\t<SingleDownloads title=\"Change Levers\" id=\"changeLevers\" />\n\t\t\t\t\t\t\t<SingleDownloads title=\"Action Checklist\" id=\"actionChecklist\" />\n\t\t\t\t\t\t\t<FileListing\n\t\t\t\t\t\t\t\ttitle=\"Discover Topics\"\n\t\t\t\t\t\t\t\tstate={selectedFiles.discoverTopics}\n\t\t\t\t\t\t\t\tsetState={setSelectedFiles}\n\t\t\t\t\t\t\t\tdata={discoverTopics}\n\t\t\t\t\t\t\t\tid=\"discoverTopics\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FileListing\n\t\t\t\t\t\t\t\ttitle=\"Health Check\"\n\t\t\t\t\t\t\t\tstate={selectedFiles.healthChecks}\n\t\t\t\t\t\t\t\tsetState={setSelectedFiles}\n\t\t\t\t\t\t\t\tdata={HCListing}\n\t\t\t\t\t\t\t\tid=\"healthChecks\"\n\t\t\t\t\t\t\t\tloading={fetching}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FileListing\n\t\t\t\t\t\t\t\ttitle=\"Cash Flow Canvas\"\n\t\t\t\t\t\t\t\tstate={selectedFiles.cfc}\n\t\t\t\t\t\t\t\tsetState={setSelectedFiles}\n\t\t\t\t\t\t\t\tdata={CFCListing}\n\t\t\t\t\t\t\t\tid=\"cfc\"\n\t\t\t\t\t\t\t\tloading={fetching}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} md={3}>\n\t\t\t\t\t\t<Nav />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</PageContainer>\n\t\t\t<Backdrop className={classes.backdrop} open={exporting}>\n\t\t\t\t<CircularProgress color=\"inherit\" />\n\t\t\t</Backdrop>\n\t\t\t{/* eslint-disable-next-line react/jsx-props-no-spreading */}\n\t\t\t<SnackbarMsg {...snackbar} onClose={handleClose} />\n\t\t</>\n\t)\n}\n\nexport default SessionFiles\n","import { format } from \"date-fns\"\nimport { FileListingStruct } from \"./shape\"\nimport { HealthCheckDataStruct, CFCStruct } from \"../../../data/_config/shape\"\nimport { canvasDisplayTitle } from \"../../CFC/__config/utilities\"\n\nexport function healthCheckToData(): ReducerHOF<\n\tFileListingStruct[],\n\tHealthCheckDataStruct\n> {\n\treturn (acc, cur): FileListingStruct[] =>\n\t\tacc.concat({\n\t\t\tname: `Completed Health Check ${\n\t\t\t\tcur.createdAt && format(cur.createdAt, \"'-' dd/MM/yyyy hh:mm a\")\n\t\t\t}`,\n\t\t\tid: `${cur.id || -1}`,\n\t\t})\n}\n\nexport function cfcToData(): ReducerHOF<FileListingStruct[], CFCStruct> {\n\treturn (acc, cur): FileListingStruct[] =>\n\t\tacc.concat({\n\t\t\tname: canvasDisplayTitle(cur),\n\t\t\tid: `${cur.id || -1}`,\n\t\t})\n}\n","import React, { ReactElement } from \"react\"\nimport Alert, { AlertProps } from \"@material-ui/lab/Alert\"\nimport { Snackbar, IconButton } from \"@material-ui/core\"\nimport CloseIcon from \"@material-ui/icons/Close\"\n\n// #region Interface Definitions\n/**\n * Data required for the snackbar\n * use this interface when defining the state\n *\n * @export\n * @interface SnackbarMsgData\n */\nexport interface SnackbarMsgData {\n\topen: boolean\n\tmsg: string\n\tseverity?: AlertProps[\"severity\"]\n}\n\n/**\n * Props required to be passed to the component\n *\n * @export\n * @interface SnackbarMsgProps\n * @extends {SnackbarMsgData}\n */\nexport interface SnackbarMsgProps extends SnackbarMsgData {\n\tonClose: (\n\t\tevent: React.SyntheticEvent | React.MouseEvent,\n\t\treason?: string\n\t) => void\n}\n// #endregion\n\n/**\n * Snackbar abstraction component, use this for a consistent\n * way to show messages to the user\n *\n * The component who uses this component will need to handle the\n * state of this component and pass down the props.\n *\n * See the README\n *\n * @export\n * @param {SnackbarMsgProps} {\n * \topen,\n * \tmsg,\n * \tonClose,\n * \tseverity = \"info\",\n * }\n * @returns {ReactElement}\n */\nexport default function SnackbarMsg({\n\topen,\n\tmsg,\n\tonClose,\n\tseverity = \"info\",\n}: SnackbarMsgProps): ReactElement {\n\treturn (\n\t\t<Snackbar\n\t\t\topen={open}\n\t\t\tautoHideDuration={2000}\n\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n\t\t\tonClose={onClose}\n\t\t>\n\t\t\t<Alert\n\t\t\t\tseverity={severity}\n\t\t\t\tvariant=\"filled\"\n\t\t\t\taction={\n\t\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\">\n\t\t\t\t\t\t<CloseIcon fontSize=\"small\" />\n\t\t\t\t\t</IconButton>\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{msg}\n\t\t\t</Alert>\n\t\t</Snackbar>\n\t)\n}\n","import React, { ReactElement, ReactNode } from \"react\"\nimport Loading from \"../Loading\"\n\n/**\n * Prop defintion for the `IfElseLoading` component\n *\n * @interface IfElseLoadingProps\n */\ninterface IfElseLoadingProps {\n\tchildren: ReactNode\n\tif: boolean\n}\n\n/**\n * A component to render either the default Loading component\n * or its children based on a conditional\n *\n * @export\n * @param {IfElseLoadingProps} {\n * \tchildren,\n * \tif: check,\n * }\n * @returns {ReactElement}\n */\nexport default function IfElseLoading({\n\tchildren,\n\tif: check,\n}: IfElseLoadingProps): ReactElement {\n\treturn !check ? <Loading /> : <>{children}</>\n}\n","import { BaseCFCStruct } from \"../../../data/_config/shape\"\nimport createCashFlowItem from \"../../../state/CFC/createCashFlow\"\n\nconst initialValues: BaseCFCStruct = {\n\tcanvasTitle: \"\",\n\tcanvasType: \"review\",\n\tcanvasTimeFrame: \"quarterly\",\n\tcanvasStartDate: new Date(),\n\tcanvasEndDate: new Date(),\n\topeningBalance: 0,\n\tpaygWithholding: 0,\n\tsuperAmount: 0,\n\tincomeTax: 25,\n\tcashToOwner: 0,\n\tstock: 0,\n\tcreditors: 0,\n\tdebtors: 0,\n\tassets: 0,\n\tloans: 0,\n\tcashInItems: [createCashFlowItem()],\n\tcashOutItems: [createCashFlowItem()],\n\tgstOnPurchases: undefined,\n\tgstOnSales: undefined,\n}\n\nexport default initialValues\n","import { BaseCFCStruct } from \"../../../data/_config/shape\"\nimport { CalculatedValues } from \"../../../state/CFC/useCalculated\"\nimport {\n\tcalcTotalNetAssets,\n\tcalcAvailableToSpend,\n\tcalcCashSurplus,\n\tcalcCashFlowGST,\n\tcalcClosingBalance,\n\tcalcIncomeTaxPer,\n} from \"../../../state/CFC/accumulators\"\nimport { isGSTValid } from \"../../../util/money/gst\"\n\n/**\n * Calculates the values for the dynamic values\n *\n * @param {BaseCFCStruct} values\n * @returns {CalculatedValues}\n */\nfunction calculateInitial(values: BaseCFCStruct): CalculatedValues {\n\treturn {\n\t\tgstOnSales: isGSTValid(values.gstOnSales)\n\t\t\t? values.gstOnSales! // eslint-disable-line\n\t\t\t: calcCashFlowGST(values.cashInItems),\n\t\tclosingBalance: calcClosingBalance(values),\n\t\tgstOnPurchases: isGSTValid(values.gstOnPurchases)\n\t\t\t? values.gstOnPurchases! // eslint-disable-line\n\t\t\t: calcCashFlowGST(values.cashOutItems),\n\t\ttotalNetAssets: calcTotalNetAssets(values),\n\t\tcashSurplus: calcCashSurplus(values),\n\t\tavailableToSpend: calcAvailableToSpend(values),\n\t\tincomeTaxPercentage: calcIncomeTaxPer(values),\n\t}\n}\n\nexport default calculateInitial\n","import { makeStyles } from \"@material-ui/core\"\n\n// Section title styles\nconst useSTStyles = makeStyles((theme) => ({\n\ttitle: {\n\t\tfontWeight: 500,\n\t\tmarginBottom: theme.spacing(2),\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tfontSize: theme.typography.h5.fontSize,\n\t\t},\n\t},\n}))\n\nexport default useSTStyles\n","import React, { ReactElement } from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport { SectionTitleProps } from \"./_config/shape\"\nimport useSTStyles from \"./_config/styles\"\n\n/**\n * Abstraction for the Typography for a consistent heading for sections\n *\n * @param {SectionTitleProps} props Mimics the props for `<Typography>`\n * @returns ReactElement\n */\nconst SectionTitle = ({\n\tchildren,\n\tclassName,\n\t// eslint-disable-next-line\n\t...props\n}: SectionTitleProps): ReactElement => {\n\tconst styles = useSTStyles()\n\treturn (\n\t\t<Typography\n\t\t\tvariant=\"h4\"\n\t\t\tcolor=\"textPrimary\"\n\t\t\tclassName={`${styles.title} ${className}`}\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t{...props}\n\t\t>\n\t\t\t{children}\n\t\t</Typography>\n\t)\n}\n\nexport default SectionTitle\n","/**\n * Add Padding\n *\n * add white space around some content\n */\n\nimport { format } from \"date-fns\"\n\nexport const addPadding = (\n\tcontent: any, // eslint-disable-line\n\tmargin = 10\n) => ({\n\tmargin,\n\tcolumns: [content],\n})\n\n/**\n * Page and margin defaults\n */\n\nexport const pageDefaultSettings = () => ({\n\t// watermark: {\n\t// \ttext: \"draft\",\n\t// \tcolor: \"blue\",\n\t// \topacity: 0.3,\n\t// \tbold: true,\n\t// \titalics: false,\n\t// },\n\n\tpageSize: \"A4\",\n\tpageMargins: [0, 0, 0, 25],\n\tfooter: {\n\t\tcolumns: [\n\t\t\t{\n\t\t\t\ttext: `Created on the ${format(new Date(), \"do 'of' MMMM yyyy\")}`,\n\t\t\t\talignment: \"center\",\n\t\t\t\tfontSize: 12,\n\t\t\t\tcolor: \"#333\",\n\t\t\t},\n\t\t],\n\t},\n})\n\n/**\n * Frame Content\n *\n * Put content in a table with a border\n */\n\nexport const frameContent = (\n\tinner: any, // eslint-disable-line\n\tstyle: string[] = []\n) => ({\n\ttable: {\n\t\twidths: [\"*\"], // to make it full length\n\t\tbody: [[inner]],\n\t},\n\tstyle,\n})\n\n/**\n * Table with Text in it for top of page\n * Requires a pageHeader style\n */\n\nexport const pageHeading = (text: string) => {\n\tconst content = frameContent(addPadding(text), [\"pageHeader\"])\n\n\treturn {\n\t\t...content,\n\t\tlayout: \"noBorders\",\n\t}\n}\n\n/**\n * Add 20 points of padding on a full page\n */\n\n// eslint-disable-next-line\nexport const pagePadding = (content: any) => addPadding(content, 20)\n\n/**\n * Basic table of key .... value\n */\n\nexport const basicTable = (\n\titems: any, // eslint-disable-line\n\tstyle: string[] = []\n) => ({\n\ttable: {\n\t\twidths: [\"70%\", \"*\"],\n\t\tbody: items,\n\t},\n\tstyle,\n\tlayout: \"noBorders\",\n})\n","/**\n * Creates and fills an array with some data\n *\n * @export\n * @template T\n * @param {number} len\n * @param {T} fill\n * @returns {T[]}\n */\nexport default function arrayFillWith<T>(len: number, fill: T): T[] {\n\treturn new Array(len).fill(fill)\n}\n","import ILogicLayer from \"../_config/logicLayer\"\nimport HealthCheckDB from \"./HealthCheckDatabase\"\nimport {\n\tHealthCheckDataStruct,\n\tBaseHealthCheckStruct,\n\tHealthCheckId,\n\tClientId,\n} from \"../_config/shape\"\n\n/**\n * Logic implementation for the Health check database\n *\n * @class HealthCheckLogic\n * @extends {ILogicLayer<HealthCheckDataStruct, BaseHealthCheckStruct>}\n */\nclass HealthCheckLogic extends ILogicLayer<\n\tHealthCheckDataStruct,\n\tBaseHealthCheckStruct\n> {\n\t/**\n\t * Creates an instance of HealthCheckLogic.\n\t *\n\t * @memberof HealthCheckLogic\n\t */\n\tconstructor() {\n\t\tsuper(HealthCheckDB, HealthCheckDB.healthChecks)\n\t}\n\n\t/**\n\t * Finds a health check by the id and clientId\n\t *\n\t * @param {HealthCheckId} id\n\t * @param {ClientId} clientId\n\t * @returns {Promise<HealthCheckDataStruct>}\n\t * @memberof HealthCheckLogic\n\t */\n\tpublic findByClientId(\n\t\tid: HealthCheckId,\n\t\tclientId: ClientId\n\t): Promise<HealthCheckDataStruct | undefined> {\n\t\treturn this.database.transaction(\"r\", this.table.name, () =>\n\t\t\tthis.table.where({ id, clientId }).first()\n\t\t)\n\t}\n\n\t/**\n\t * Finds all the health checks for a given client\n\t *\n\t * @param {ClientId} clientId\n\t * @returns {Promise<HealthCheckDataStruct[]>}\n\t * @memberof HealthCheckLogic\n\t */\n\tpublic findClientHealthChecks(\n\t\tclientId: ClientId\n\t): Promise<HealthCheckDataStruct[]> {\n\t\treturn this.database.transaction(\"r\", this.table.name, () =>\n\t\t\tthis.table.where(\"clientId\").equals(clientId).toArray()\n\t\t)\n\t}\n}\n\n// Creates a instance of the logic class and exports the instance\nconst HealthCheckUseCase = new HealthCheckLogic()\n\nexport default HealthCheckUseCase\n","import { v4 as uuidv4 } from \"uuid\"\nimport { CashFlow } from \"../../data/_config/shape\"\n\nexport default function createCashFlowItem(\n\tdescription = \"\",\n\tamount = 0,\n\tgstApplicable = true\n): CashFlow {\n\treturn {\n\t\tid: uuidv4(),\n\t\tdescription,\n\t\tamount,\n\t\tgstApplicable,\n\t}\n}\n","import pdfMake from \"pdfmake/build/pdfmake\"\nimport pdfFonts from \"pdfmake/build/vfs_fonts\"\nimport { green } from \"@material-ui/core/colors\"\nimport { format } from \"date-fns\"\nimport {\n\tframeContent,\n\tbasicTable,\n\tpageDefaultSettings,\n\tpageHeading,\n\tpagePadding,\n} from \"./PDFLib\"\nimport { BaseCFCStruct, CashFlow } from \"../../data/_config/shape\"\nimport {\n\tcalcCashFlowTotal,\n\tcalcTotalCashOut,\n\tcalcIncomeTaxPer,\n} from \"../../state/CFC/accumulators\"\nimport { calculateInitial } from \"../Forms/CFC\"\nimport { canvasDisplayTitle } from \"../CFC/__config/utilities\"\nimport upperFirst from \"../../util/strings/upperCaseFirst\"\nimport { addDollarSign, formatNumber } from \"../../util/money/formatting\"\n\npdfMake.vfs = pdfFonts.pdfMake.vfs // eslint-disable-line\n\nconst formatDollars = (value: number) => addDollarSign(formatNumber(`${value}`))\n\nconst openingBalanceSection = (\n\topeningBalance: number\n): any => // eslint-disable-line\n\tframeContent(\n\t\tbasicTable([\n\t\t\t[\n\t\t\t\t\"Opening Balance\",\n\t\t\t\t{ text: formatDollars(openingBalance), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t])\n\t)\n\nconst cashInSection = (\n\tcashInItems: CashFlow[],\n\tcashInTotal: number\n): any => // eslint-disable-line\n\tframeContent([\n\t\t{\n\t\t\ttext: \"Cash IN\",\n\t\t\tbold: true,\n\t\t},\n\t\tbasicTable([\n\t\t\t...cashInItems.map((line) => [\n\t\t\t\tline.description,\n\t\t\t\t{ text: formatDollars(line.amount), style: [\"rightAlign\"] },\n\t\t\t]),\n\t\t\t[\n\t\t\t\t\"Total (Exc GST)\",\n\t\t\t\t{\n\t\t\t\t\ttext: formatDollars(cashInTotal),\n\t\t\t\t\tstyle: [\"rightAlign\"],\n\t\t\t\t},\n\t\t\t],\n\t\t]),\n\t])\n\nconst gstOnSalesSection = (\n\tgstOnSales: number\n): any => // eslint-disable-line\n\tframeContent(\n\t\tbasicTable(\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"GST on Sales\",\n\t\t\t\t\t{ text: formatDollars(gstOnSales), style: [\"rightAlign\"] },\n\t\t\t\t],\n\t\t\t],\n\t\t\t[\"yellowBlock\"]\n\t\t)\n\t)\n\nconst cashOutSection = (\n\tcashOutItems: CashFlow[],\n\tcashOutTotal: number\n): any => // eslint-disable-line\n\tframeContent([\n\t\t{ text: \"Cash OUT\", bold: true },\n\t\tbasicTable([\n\t\t\t...cashOutItems.map((line) => [\n\t\t\t\tline.description,\n\t\t\t\t{ text: formatDollars(line.amount), style: [\"rightAlign\"] },\n\t\t\t]),\n\t\t\t[\n\t\t\t\t\"Total (Exc GST)\",\n\t\t\t\t{\n\t\t\t\t\ttext: formatDollars(cashOutTotal),\n\t\t\t\t\tstyle: [\"rightAlign\"],\n\t\t\t\t},\n\t\t\t],\n\t\t]),\n\t])\n\nconst gstOnPurchasesSection = (\n\tgstOnPurchases: number,\n\tpaygWithholding: number,\n\tsuperAmount: number\n): any => // eslint-disable-line\n\tframeContent(\n\t\tbasicTable(\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"GST on Purchases\",\n\t\t\t\t\t{ text: formatDollars(gstOnPurchases), style: [\"rightAlign\"] },\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"PAYG Withholding\",\n\t\t\t\t\t{ text: formatDollars(paygWithholding), style: [\"rightAlign\"] },\n\t\t\t\t],\n\t\t\t\t[\"Super\", { text: formatDollars(superAmount), style: [\"rightAlign\"] }],\n\t\t\t],\n\t\t\t[\"yellowBlock\"]\n\t\t)\n\t)\n\nconst cashSurplusSection = (\n\tcashSurplus: number\n): any => // eslint-disable-line\n\tframeContent(\n\t\tbasicTable([\n\t\t\t[\n\t\t\t\t\"Cash Surplus\",\n\t\t\t\t{ text: formatDollars(cashSurplus), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t])\n\t)\n\nconst incomeSection = (\n\tvalues: BaseCFCStruct\n): any => // eslint-disable-line\n\tframeContent(\n\t\tbasicTable(\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"Income/Company Tax\",\n\t\t\t\t\t// TODO: Needs to use the new calculations in feature/122 branch\n\t\t\t\t\t{\n\t\t\t\t\t\ttext: formatDollars(calcIncomeTaxPer(values)),\n\t\t\t\t\t\tstyle: [\"rightAlign\"],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t],\n\t\t\t[\"yellowBlock\"]\n\t\t)\n\t)\n\nconst availableToSpendSection = (\n\tavailableToSpend: number\n): any => // eslint-disable-line\n\tframeContent(\n\t\tbasicTable([\n\t\t\t[\n\t\t\t\t\"Available to spend\",\n\t\t\t\t{ text: formatDollars(availableToSpend), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t])\n\t)\n\nconst closingCashBalanceSection = (\n\tcashToOwner: number,\n\tclosingBalance: number\n): any => // eslint-disable-line\n\tframeContent([\n\t\t{ text: \"Your Closing Cash Balance\", bold: true },\n\t\tbasicTable([\n\t\t\t[\n\t\t\t\t\"Cash to owner\",\n\t\t\t\t{ text: formatDollars(cashToOwner), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Closing balance\",\n\t\t\t\t{ text: formatDollars(closingBalance), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t]),\n\t])\n\nconst question2Section = (value: number) =>\n\tframeContent(\n\t\tbasicTable(\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"Have you put enough money aside to meet your regular financial commitments?\",\n\t\t\t\t\t{ text: formatDollars(value), style: [\"rightAlign\"] },\n\t\t\t\t],\n\t\t\t],\n\t\t\t[\"yellowBlock\"]\n\t\t)\n\t)\n\nconst yourNetAssetPositionSection = (\n\tstock: number,\n\tcreditors: number,\n\tdebtors: number,\n\tassets: number,\n\tloans: number,\n\ttotalNetAssets: number\n): any => // eslint-disable-line\n\tframeContent([\n\t\t{ text: \"Your net asset position\", bold: true },\n\t\tbasicTable([\n\t\t\t[\"Stocks\", { text: formatDollars(stock), style: [\"rightAlign\"] }],\n\t\t\t[\"Creditors\", { text: formatDollars(creditors), style: [\"rightAlign\"] }],\n\t\t\t[\"Debtors\", { text: formatDollars(debtors), style: [\"rightAlign\"] }],\n\t\t\t[\"Assets\", { text: formatDollars(assets), style: [\"rightAlign\"] }],\n\t\t\t[\"Loans\", { text: formatDollars(loans), style: [\"rightAlign\"] }],\n\t\t\t[\n\t\t\t\t{ text: \"Total net assets\", bold: true },\n\t\t\t\t{ text: formatDollars(totalNetAssets), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t]),\n\t])\n\nexport default async (\n\ttitle: string,\n\tvalues: BaseCFCStruct,\n\tquestionValues: any // eslint-disable-line\n) => {\n\tconst {\n\t\topeningBalance,\n\t\tcashInItems,\n\t\tcashOutItems,\n\t\tpaygWithholding,\n\t\tsuperAmount,\n\t\tcashToOwner,\n\t\tstock,\n\t\tcreditors,\n\t\tdebtors,\n\t\tassets,\n\t\tloans,\n\t\tgstOnPurchases: dbGSTOnPurchase,\n\t\tgstOnSales: dbGSTOnSales,\n\t} = values\n\n\tconst cashInTotal = calcCashFlowTotal(cashInItems, dbGSTOnSales)\n\tconst cashOutTotal = calcTotalCashOut(values, dbGSTOnPurchase)\n\n\tconst calculated = calculateInitial(values)\n\tconst {\n\t\tcashSurplus,\n\t\tavailableToSpend,\n\t\tclosingBalance,\n\t\ttotalNetAssets,\n\t\tgstOnSales,\n\t\tgstOnPurchases,\n\t} = calculated\n\n\t// eslint-disable-next-line\n\tconst docDefinition: any = {\n\t\t...pageDefaultSettings(),\n\n\t\tcontent: [\n\t\t\tpageHeading(`${title} - CANVAS - ${canvasDisplayTitle(values)}`),\n\t\t\tpagePadding([\n\t\t\t\tframeContent({\n\t\t\t\t\ttable: {\n\t\t\t\t\t\twidths: [\"25%\", \"25%\", \"25%\", \"25%\"],\n\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: \"Canvas Type\", bold: true },\n\t\t\t\t\t\t\t\t\tupperFirst(values.canvasType),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: \"Time-frame\", bold: true },\n\t\t\t\t\t\t\t\t\tupperFirst(values.canvasTimeFrame),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: \"Start date\", bold: true },\n\t\t\t\t\t\t\t\t\t`${format(values.canvasStartDate, \"dd/MM/yyyy\")}`,\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: \"End date\", bold: true },\n\t\t\t\t\t\t\t\t\t`${format(values.canvasEndDate, \"dd/MM/yyyy\")}`,\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\tlayout: \"noBorders\",\n\t\t\t\t}),\n\t\t\t\t\" \",\n\t\t\t\topeningBalanceSection(openingBalance),\n\n\t\t\t\t{\n\t\t\t\t\ttable: {\n\t\t\t\t\t\twidths: [\"55%\", \"*\"],\n\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tcashInSection(cashInItems, cashInTotal),\n\t\t\t\t\t\t\t\tgstOnSalesSection(gstOnSales),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tcashOutSection(cashOutItems, cashOutTotal),\n\t\t\t\t\t\t\t\tgstOnPurchasesSection(\n\t\t\t\t\t\t\t\t\tgstOnPurchases,\n\t\t\t\t\t\t\t\t\tpaygWithholding,\n\t\t\t\t\t\t\t\t\tsuperAmount\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[cashSurplusSection(cashSurplus), incomeSection(values)],\n\t\t\t\t\t\t\t[availableToSpendSection(availableToSpend), {}],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tclosingCashBalanceSection(cashToOwner, closingBalance),\n\t\t\t\t\t\t\t\t\t{ text: \" \", style: [\"spacer\"] },\n\t\t\t\t\t\t\t\t\tyourNetAssetPositionSection(\n\t\t\t\t\t\t\t\t\t\tstock,\n\t\t\t\t\t\t\t\t\t\tcreditors,\n\t\t\t\t\t\t\t\t\t\tdebtors,\n\t\t\t\t\t\t\t\t\t\tassets,\n\t\t\t\t\t\t\t\t\t\tloans,\n\t\t\t\t\t\t\t\t\t\ttotalNetAssets\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tquestion2Section(questionValues.two),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\tlayout: \"noBorders\",\n\t\t\t\t},\n\t\t\t]),\n\t\t],\n\n\t\tstyles: {\n\t\t\tpageHeader: {\n\t\t\t\tfontSize: 20,\n\t\t\t\tbold: true,\n\t\t\t\tfillColor: green[\"800\"],\n\t\t\t\tcolor: \"white\",\n\t\t\t\talignment: \"center\",\n\t\t\t},\n\t\t\trightAlign: {\n\t\t\t\t// fillColor: \"#CCCCCC\",\n\t\t\t\talignment: \"right\",\n\t\t\t},\n\t\t\tyellowBlock: {\n\t\t\t\tfillColor: \"yellow\",\n\t\t\t},\n\t\t\tspacer: {\n\t\t\t\tfontSize: 4, // cheat for a spacer between blocks\n\t\t\t},\n\t\t},\n\n\t\tdefaultStyle: {\n\t\t\tfontSize: 13,\n\t\t\tbold: false,\n\t\t},\n\t}\n\treturn pdfMake.createPdf(docDefinition)\n}\n","/* eslint-disable import/prefer-default-export */\nimport { PossibleActionItems } from \"../../../../state/action-checklist/shape\"\n\n// Action title mapping object\nexport const actionTitleMapping: Record<PossibleActionItems, string> = {\n\tcashInActions: \"Cash IN actions\",\n\tcashOutActions: \"Cash OUT actions\",\n\tplanningBusiness: \"Planning your business actions\",\n\trecordKeeping: \"Record keeping actions\",\n\tfunding: \"Funding your business actions\",\n\tmanaging: \"Managing your cash flow actions\",\n\tplanningCommitments: \"Planning your regular financial commitments actions\",\n\ttracking: \"Tracking your performance actions\",\n\ttransition: \"Selling, closing and succession planning\",\n}\n","import pdfMake from \"pdfmake/build/pdfmake\"\nimport pdfFonts from \"pdfmake/build/vfs_fonts\"\nimport { purple, grey } from \"@material-ui/core/colors\"\nimport {\n\tpageDefaultSettings,\n\tpageHeading,\n\tpagePadding,\n\taddPadding,\n} from \"./PDFLib\"\nimport { answerTheming } from \"../HealthCheck/_config/data\"\n\npdfMake.vfs = pdfFonts.pdfMake.vfs // eslint-disable-line fp/no-mutation\n\nexport interface HealthCheckQuestion {\n\tquestion: string\n\tanswer: string\n\ttext: string\n}\n\nexport interface HealthCheckQuestionSet {\n\t[key: number]: HealthCheckQuestion // 0..9\n}\n\nconst questionElementTop = ({ question, answer, text }: HealthCheckQuestion) =>\n\taddPadding([\n\t\t{ text: question, style: \"question\" },\n\t\t\" \",\n\t\t{ text, style: answer },\n\t])\n\nexport interface HealthCheckParams {\n\ttitle: string\n\tanswers: {\n\t\t[idx: string]: string\n\t}\n}\n\nexport default async (title: string, answers: HealthCheckQuestionSet) => {\n\t// eslint-disable-next-line\n\tconst docDefinition: any = {\n\t\t...pageDefaultSettings(),\n\n\t\tcontent: [\n\t\t\tpageHeading(`${title} - Health Check`),\n\t\t\tpagePadding([\n\t\t\t\t{\n\t\t\t\t\tstyle: \"tableCell\",\n\t\t\t\t\ttable: {\n\t\t\t\t\t\twidths: [\"*\", \"*\"],\n\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttext: \"Four Key Questions\",\n\t\t\t\t\t\t\t\t\tstyle: \"tableHeading\",\n\t\t\t\t\t\t\t\t\tcolSpan: 2,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[questionElementTop(answers[0]), questionElementTop(answers[1])],\n\t\t\t\t\t\t\t[questionElementTop(answers[2]), questionElementTop(answers[3])],\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t\" \",\n\n\t\t\t\t{\n\t\t\t\t\tstyle: \"tableCell\",\n\t\t\t\t\ttable: {\n\t\t\t\t\t\twidths: [\"*\", \"*\"],\n\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t[questionElementTop(answers[4]), questionElementTop(answers[5])],\n\n\t\t\t\t\t\t\t[questionElementTop(answers[6]), questionElementTop(answers[7])],\n\n\t\t\t\t\t\t\t[questionElementTop(answers[8]), questionElementTop(answers[9])],\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t]),\n\t\t],\n\n\t\tstyles: {\n\t\t\tpageHeader: {\n\t\t\t\tfontSize: 20,\n\t\t\t\tbold: true,\n\t\t\t\tfillColor: purple[\"500\"],\n\t\t\t\tcolor: \"white\",\n\t\t\t\talignment: \"center\",\n\t\t\t},\n\t\t\ttableHeading: {\n\t\t\t\tfillColor: grey[\"200\"],\n\t\t\t\talignment: \"center\",\n\t\t\t},\n\t\t\tquestion: {},\n\t\t\tpositive: {\n\t\t\t\tfontSize: 16,\n\t\t\t\tcolor: answerTheming[0].color,\n\t\t\t\tbold: true,\n\t\t\t},\n\t\t\tnegative: {\n\t\t\t\tfontSize: 16,\n\t\t\t\tcolor: answerTheming[1].color,\n\t\t\t\tbold: true,\n\t\t\t},\n\t\t\tneutral: {\n\t\t\t\tfontSize: 16,\n\t\t\t\tcolor: answerTheming[2].color,\n\t\t\t\tbold: true,\n\t\t\t},\n\t\t},\n\n\t\tdefaultStyle: {\n\t\t\tfontSize: 15,\n\t\t\tbold: false,\n\t\t\tcolor: \"#000\",\n\t\t},\n\t}\n\treturn pdfMake.createPdf(docDefinition)\n}\n"],"sourceRoot":""}