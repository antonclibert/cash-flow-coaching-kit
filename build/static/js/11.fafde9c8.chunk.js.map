{"version":3,"sources":["components/SessionFiles/CheckboxListItem.tsx","components/SessionFiles/FileListing.tsx","components/SessionFiles/__config/constants.ts","components/SessionFiles/__config/styles.ts","pages/session-files.tsx","components/SessionFiles/__config/utilities.ts","components/SnackbarMsg/SnackbarMsg.tsx","components/IfElseLoading/IfElseLoading.tsx","components/Forms/CFC/initialValues.ts","components/Forms/CFC/calculateInitial.ts","components/SectionTitle/_config/styles.ts","components/SectionTitle/SectionTitle.tsx","components/PDF/PDFLib.ts","util/array/arrayFillWith.ts","data/healthChecks/HealthCheckLogic.ts","state/CFC/createCashFlow.tsx","components/PDF/CashFlowCanvasPDF.ts","components/ActionChecklist/ActionContainer/_config/data.ts","components/PDF/HealthCheckPDF.ts","components/PDF/ActionChecklistPDF.ts"],"names":["React","memo","label","checked","onClick","ListItem","button","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","inputProps","ListItemText","title","setState","state","data","id","loading","handleChange","idx","prev","copy","ExpandableNav","IfElseLoading","if","List","component","disablePadding","length","map","item","key","name","staticTitles","changeLevers","actionChecklist","discoverTopics","path","useStyles","makeStyles","theme","dropdownWrapper","marginTop","spacing","useSessionStyles","createStyles","backdrop","zIndex","drawer","color","SessionFiles","classes","cls","useState","healthChecks","cfc","arrayFillWith","selectedFiles","setSelectedFiles","setHealthChecks","setCfc","HCListing","setHCListing","CFCListing","setCFCListing","assetBaseUrl","process","REACT_APP_ASSETS_URL","fetching","setFetching","exporting","setExporting","useCurrentClient","currentClient","synced","open","msg","snackbar","setSnackbar","questionValues","useContext","CFCContext","showSnackbar","severity","fetchData","useCallback","a","HealthCheckUseCase","findByClient","hcs","CFCUseCase","cfcs","reduce","acc","cur","concat","createdAt","format","canvasDisplayTitle","useEffect","changeSingleDownload","getStaticPdf","url","fetchPolyfill","method","then","response","arrayBuffer","buffer","fileName","makeStaticPdf","file","encodeURI","pdf","pdfMakeBlobPromise","filename","Promise","resolve","getBlob","b","blob","generateZip","zip","JSZip","CHPDF","ActionChecklistUseCase","checklists","ActionNotesUseCase","notes","ActionPriorityUseCase","pdfPriority","ActionChecklistPDF","ACPDF","DTPromises","val","filter","v","HCNames","HCPromises","pdfData","questions","forEach","q","i","question","answer","answers","text","options","push","replace","HealthCheckPDF","CFCNames","CFCPromises","CashFlowCanvasPDF","all","res","names","blobPromises","res1","doc","hasProperty","generateAsync","type","content","saveAs","catch","Nav","SingleDownloads","Grid","container","xs","md","Box","className","SectionTitle","Typography","Backdrop","CircularProgress","SnackbarMsg","onClose","event","reason","autoHideDuration","anchorOrigin","vertical","horizontal","variant","action","size","aria-label","fontSize","children","Loading","initialValues","canvasTitle","canvasType","canvasTimeFrame","canvasStartDate","Date","canvasEndDate","openingBalance","paygWithholding","superAmount","incomeTax","cashToOwner","stock","creditors","debtors","assets","loans","cashInItems","createCashFlowItem","cashOutItems","gstOnPurchases","undefined","gstOnSales","calculateInitial","values","isGSTValid","calcCashFlowGST","closingBalance","calcClosingBalance","totalNetAssets","calcTotalNetAssets","cashSurplus","calcCashSurplus","availableToSpend","calcAvailableToSpend","incomeTaxPercentage","calcIncomeTaxPer","useSTStyles","fontWeight","marginBottom","breakpoints","down","typography","h5","props","styles","addPadding","margin","columns","pageDefaultSettings","pageSize","pageMargins","footer","alignment","frameContent","inner","style","table","widths","body","pageHeading","layout","pagePadding","basicTable","items","len","fill","Array","HealthCheckDB","clientId","this","database","transaction","where","first","equals","toArray","ILogicLayer","description","amount","gstApplicable","uuidv4","pdfMake","vfs","pdfFonts","formatDollars","value","addDollarSign","formatNumber","openingBalanceSection","cashInSection","cashInTotal","bold","line","gstOnSalesSection","cashOutSection","cashOutTotal","gstOnPurchasesSection","cashSurplusSection","incomeSection","availableToSpendSection","closingCashBalanceSection","yourNetAssetPositionSection","dbGSTOnPurchase","dbGSTOnSales","calcCashFlowTotal","calcTotalCashOut","calculated","docDefinition","upperFirst","two","pageHeader","fillColor","green","rightAlign","yellowBlock","spacer","defaultStyle","createPdf","actionTitleMapping","cashInActions","cashOutActions","planningBusiness","recordKeeping","funding","managing","planningCommitments","tracking","transition","questionElementTop","colSpan","purple","tableHeading","grey","positive","answerTheming","negative","neutral","itemsSection","reviewBy","completed","checklistCollection","priority","Object","keys","arr","actionContainer","note","prior","sortedItems","order","p","findIndex","x","lightBlue","heading","subHeading","noResult","italics","decoration"],"mappings":"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","file":"static/js/11.fafde9c8.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\"\nimport {\n\tListItem,\n\tListItemIcon,\n\tCheckbox,\n\tListItemText,\n} from \"@material-ui/core\"\nimport { CheckboxListItemProps } from \"./__config/shape\"\n\nexport default React.memo(function CheckboxListItem({\n\tlabel,\n\tchecked,\n\tonClick,\n}: CheckboxListItemProps): ReactElement {\n\treturn (\n\t\t<ListItem button onClick={onClick}>\n\t\t\t<ListItemIcon>\n\t\t\t\t<Checkbox\n\t\t\t\t\tedge=\"start\"\n\t\t\t\t\tchecked={checked}\n\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\tdisableRipple\n\t\t\t\t\tinputProps={{ \"aria-label\": label }}\n\t\t\t\t/>\n\t\t\t</ListItemIcon>\n\t\t\t<ListItemText>{label}</ListItemText>\n\t\t</ListItem>\n\t)\n})\n","import React, { ReactElement } from \"react\"\nimport { List, ListItem, ListItemText } from \"@material-ui/core\"\nimport ExpandableNav from \"../ExpandableNav\"\nimport IfElseLoading from \"../IfElseLoading\"\nimport { FileListingProps, FileListingStruct } from \"./__config/shape\"\nimport CheckboxListItem from \"./CheckboxListItem\"\n\nexport default React.memo(function FileListing({\n\ttitle,\n\tsetState,\n\tstate,\n\tdata,\n\tid,\n\tloading = false,\n}: FileListingProps): ReactElement {\n\tconst handleChange = (idx: number) => (): void => {\n\t\tsetState((prev) => {\n\t\t\tconst copy = [...prev[id]]\n\t\t\t// eslint-disable-next-line\n\t\t\tcopy[idx] = !copy[idx]\n\n\t\t\treturn {\n\t\t\t\t...prev,\n\t\t\t\t[id]: copy,\n\t\t\t}\n\t\t})\n\t}\n\n\tfunction mapList(item: FileListingStruct, idx: number): ReactElement {\n\t\treturn (\n\t\t\t<CheckboxListItem\n\t\t\t\tkey={item.id}\n\t\t\t\tonClick={handleChange(idx)}\n\t\t\t\tchecked={state[idx]}\n\t\t\t\tlabel={item.name}\n\t\t\t/>\n\t\t)\n\t}\n\n\treturn (\n\t\t<ExpandableNav title={title}>\n\t\t\t<IfElseLoading if={!loading}>\n\t\t\t\t<List component=\"nav\" disablePadding>\n\t\t\t\t\t{data.length === 0 ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t<ListItemText>No data available to download</ListItemText>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>{data.map(mapList)}</>\n\t\t\t\t\t)}\n\t\t\t\t</List>\n\t\t\t</IfElseLoading>\n\t\t</ExpandableNav>\n\t)\n})\n","import { DiscoverTopicsStruct, SingleDownloadProps } from \"./shape\"\n\nexport const staticTitles: Record<SingleDownloadProps[\"id\"], string> = {\n\tchangeLevers: \"Change Levers\",\n\tactionChecklist: \"Action Checklist\",\n}\n\nexport const discoverTopics: DiscoverTopicsStruct[] = [\n\t{\n\t\tname: \"Planning your business - Quicksnaps\",\n\t\tid: \"Planning your business - Quicksnaps\",\n\t\tpath: \"/pdf/Planning your business - Quicksnaps.pdf\",\n\t},\n\t{\n\t\tname: \"Business Plan - Activity\",\n\t\tid: \"Business Plan - Activity\",\n\t\tpath: \"/pdf/BusinessPlan-Activity.pdf\",\n\t},\n\t{\n\t\tname: \"Record Keeping - Quicksnaps\",\n\t\tid: \"Record Keeping - Quicksnaps\",\n\t\tpath: \"/pdf/Record keeping - Quicksnaps.pdf\",\n\t},\n\t{\n\t\tname: \"Record Keeping - Activity\",\n\t\tid: \"Record Keeping - Activity\",\n\t\tpath: \"/pdf/RecordKeeping-Activity.pdf\",\n\t},\n\t{\n\t\tname: \"Funding your business - Quicksnaps\",\n\t\tid: \"Funding your business - Quicksnaps\",\n\t\tpath: \"/pdf/Funding your business - Quicksnaps.pdf\",\n\t},\n\t{\n\t\tname: \"Funding your business - Activity\",\n\t\tid: \"Funding your business - Activity\",\n\t\tpath: \"/pdf/Funding-Activity.pdf\",\n\t},\n\t{\n\t\tname: \"Managing your cash flow - Quicksnaps\",\n\t\tid: \"Managing your cash flow - Quicksnaps\",\n\t\tpath: \"/pdf/Managing your cash flow - Quicksnaps.pdf\",\n\t},\n\t{\n\t\tname: \"Planning your regular financial commitments - Quicksnaps\",\n\t\tid: \"Planning your regular financial commitments - Quicksnaps\",\n\t\tpath: \"/pdf/Planning your regular financial commitments - Quicksnaps.pdf\",\n\t},\n\t{\n\t\tname: \"Know your commitments - Activity\",\n\t\tid: \"Know your commitments - Activity\",\n\t\tpath: \"/pdf/KnowYourCommitments-Activity.pdf\",\n\t},\n\t{\n\t\tname: \"Tracking your performance - Quicksnaps\",\n\t\tid: \"Tracking your performance - Quicksnaps\",\n\t\tpath: \"/pdf/Tracking your performance - Quicksnaps.pdf\",\n\t},\n\t{\n\t\tname: \"Selling, closing and succession planning - Quicksnaps\",\n\t\tid: \"Selling, closing and succession planning - Quicksnaps\",\n\t\tpath: \"/pdf/Selling, closing and succession planning - Quicksnaps.pdf\",\n\t},\n]\n\nexport const changeLeversPath = \"/pdf/Change levers.pdf\"\n","import { makeStyles } from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme) => ({\n\tdropdownWrapper: {\n\t\tmarginTop: theme.spacing(3),\n\t},\n}))\n\nexport default useStyles\n","import React, {\n\tReactElement,\n\tuseState,\n\tuseCallback,\n\tuseEffect,\n\tuseContext,\n} from \"react\"\nimport {\n\tGrid,\n\tTypography,\n\tList,\n\tListItem,\n\tListItemIcon,\n\tListItemText,\n\tBox,\n\tmakeStyles,\n\tTheme,\n\tcreateStyles,\n\tBackdrop,\n\tCircularProgress,\n} from \"@material-ui/core\"\nimport GetAppIcon from \"@material-ui/icons/GetApp\"\nimport JSZip from \"jszip\"\nimport { fetch as fetchPolyfill } from \"whatwg-fetch\"\nimport { saveAs } from \"file-saver\"\nimport { format } from \"date-fns\"\nimport { HealthCheckDataStruct, CFCStruct } from \"../data/_config/shape\"\nimport HealthCheckUseCase from \"../data/healthChecks/HealthCheckLogic\"\nimport CFCUseCase from \"../data/CFC/CFCLogic\"\nimport arrayFillWith from \"../util/array/arrayFillWith\"\nimport { PageContainer } from \"../components/Layouts\"\nimport ExpandableNav from \"../components/ExpandableNav\"\nimport FileListing from \"../components/SessionFiles/FileListing\"\nimport useCurrentClient from \"../state/client/useCurrentClient\"\nimport {\n\tSelectedFiles,\n\tSingleDownloadProps,\n\tFileListingStruct,\n} from \"../components/SessionFiles/__config/shape\"\nimport {\n\tdiscoverTopics,\n\tstaticTitles,\n\tchangeLeversPath,\n} from \"../components/SessionFiles/__config/constants\"\nimport {\n\thealthCheckToData,\n\tcfcToData,\n} from \"../components/SessionFiles/__config/utilities\"\nimport CheckboxListItem from \"../components/SessionFiles/CheckboxListItem\"\nimport useStyles from \"../components/SessionFiles/__config/styles\"\nimport SectionTitle from \"../components/SectionTitle\"\nimport HealthCheckPDF, {\n\tHealthCheckQuestionSet,\n} from \"../components/PDF/HealthCheckPDF\"\nimport { questions } from \"../components/HealthCheck/_config/data\"\nimport ActionChecklistUseCase from \"../data/ActionChecklist/ChecklistLogic\"\nimport ActionNotesUseCase from \"../data/ActionChecklist/NotesLogic\"\nimport ActionChecklistPDF from \"../components/PDF/ActionChecklistPDF\"\nimport CashFlowCanvasPDF from \"../components/PDF/CashFlowCanvasPDF\"\nimport hasProperty from \"../util/object/hasProperty\"\nimport { canvasDisplayTitle } from \"../components/CFC/__config/utilities\"\nimport SnackbarMsg, {\n\tSnackbarMsgData,\n} from \"../components/SnackbarMsg/SnackbarMsg\"\nimport ActionPriorityUseCase from \"../data/ActionChecklist/PriorityLogic\"\nimport CFCContext from \"../state/CFC/context\"\n\nconst useSessionStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\tbackdrop: {\n\t\t\tzIndex: theme.zIndex.drawer + 1,\n\t\t\tcolor: \"#fff\",\n\t\t},\n\t})\n)\n\nconst SessionFiles = (): ReactElement => {\n\tconst classes = useSessionStyles()\n\tconst cls = useStyles()\n\tconst [selectedFiles, setSelectedFiles] = useState<SelectedFiles>({\n\t\tchangeLevers: false,\n\t\tactionChecklist: false,\n\t\thealthChecks: [],\n\t\tcfc: [],\n\t\tdiscoverTopics: arrayFillWith(discoverTopics.length, false),\n\t})\n\tconst [healthChecks, setHealthChecks] = useState<HealthCheckDataStruct[]>([])\n\tconst [cfc, setCfc] = useState<CFCStruct[]>([])\n\tconst [HCListing, setHCListing] = useState<FileListingStruct[]>([])\n\tconst [CFCListing, setCFCListing] = useState<FileListingStruct[]>([])\n\tconst assetBaseUrl = process.env.REACT_APP_ASSETS_URL || \"\"\n\n\tconst [fetching, setFetching] = useState(true)\n\tconst [exporting, setExporting] = useState(false)\n\tconst [currentClient, synced] = useCurrentClient()\n\n\tconst [snackbar, setSnackbar] = useState<SnackbarMsgData>({\n\t\topen: false,\n\t\tmsg: \"\",\n\t})\n\n\tconst { questionValues } = useContext(CFCContext)\n\n\tfunction showSnackbar(\n\t\tmsg: SnackbarMsgData[\"msg\"],\n\t\tseverity: SnackbarMsgData[\"severity\"]\n\t): void {\n\t\tsetSnackbar({ ...snackbar, msg, severity, open: true })\n\t}\n\n\tfunction handleClose(event?: React.SyntheticEvent, reason?: string): void {\n\t\tif (reason === \"clickaway\") {\n\t\t\treturn\n\t\t}\n\n\t\tsetSnackbar({ ...snackbar, open: false })\n\t}\n\n\tconst fetchData = useCallback(async () => {\n\t\tif (currentClient?.id) {\n\t\t\tconst hcs = await HealthCheckUseCase.findByClient(currentClient.id)\n\t\t\tconst cfcs = await CFCUseCase.findByClient(currentClient.id)\n\n\t\t\tsetHealthChecks(hcs)\n\t\t\tsetCfc(cfcs)\n\n\t\t\tsetSelectedFiles((prev) => ({\n\t\t\t\t...prev,\n\t\t\t\thealthChecks: arrayFillWith(hcs.length, false),\n\t\t\t\tcfc: arrayFillWith(cfcs.length, false),\n\t\t\t}))\n\n\t\t\tsetHCListing(hcs.reduce(healthCheckToData(), []))\n\t\t\tsetCFCListing(cfcs.reduce(cfcToData(), []))\n\t\t}\n\t\tsetFetching(false)\n\t}, [\n\t\tcurrentClient,\n\t\tsetSelectedFiles,\n\t\tsetHealthChecks,\n\t\tsetCfc,\n\t\tsetFetching,\n\t\tsetHCListing,\n\t\tsetCFCListing,\n\t])\n\n\tuseEffect(() => {\n\t\tif (synced) {\n\t\t\tfetchData()\n\t\t}\n\t}, [fetchData, synced])\n\n\tconst changeSingleDownload = (id: SingleDownloadProps[\"id\"]) => (): void => {\n\t\tsetSelectedFiles((prev) => ({\n\t\t\t...prev,\n\t\t\t[id]: !prev[id],\n\t\t}))\n\t}\n\n\tconst getStaticPdf = (name: string, url: string) => {\n\t\t// IE does not support Fetch response.arrayBuffer().\n\t\t// Use Polyfill Fetch for PDF response buffer.\n\t\treturn fetchPolyfill(url, {\n\t\t\tmethod: \"GET\",\n\t\t})\n\t\t\t.then((response: any) => response.arrayBuffer())\n\t\t\t.then((buffer: any) => ({ fileName: name, buffer }))\n\t}\n\n\tconst makeStaticPdf = async (name: string, path: string): Promise<any> => {\n\t\tconst file = encodeURI(`${assetBaseUrl}${path}`)\n\t\tconst pdf = await getStaticPdf(name, file)\n\t\treturn pdf\n\t}\n\n\tconst pdfMakeBlobPromise = (\n\t\tpdf: pdfMake.TCreatedPdf,\n\t\tfilename: string\n\t): Promise<{ blob: Blob; filename: string }> => {\n\t\treturn new Promise((resolve) => {\n\t\t\tpdf.getBlob((b: Blob) => resolve({ blob: b, filename }))\n\t\t})\n\t}\n\n\tconst generateZip = async (): Promise<void> => {\n\t\tif (currentClient?.id) {\n\t\t\tsetExporting(true)\n\t\t\tconst zip = new JSZip()\n\n\t\t\t// Change Levers document\n\t\t\tif (selectedFiles.changeLevers) {\n\t\t\t\tconst CHPDF = await makeStaticPdf(\"ChangeLevers.pdf\", changeLeversPath)\n\t\t\t\tzip.file(CHPDF.fileName, CHPDF.buffer)\n\t\t\t}\n\n\t\t\t// Action Checklist\n\t\t\tif (selectedFiles.actionChecklist) {\n\t\t\t\tconst checklists = await ActionChecklistUseCase.findByClient(\n\t\t\t\t\tcurrentClient.id\n\t\t\t\t)\n\t\t\t\tconst notes = await ActionNotesUseCase.findByClient(currentClient.id)\n\t\t\t\tconst pdfPriority = await ActionPriorityUseCase.findByClient(\n\t\t\t\t\tcurrentClient.id\n\t\t\t\t)\n\n\t\t\t\tconst ACPDF = await ActionChecklistPDF(\n\t\t\t\t\tcurrentClient?.name ?? \"Client\",\n\t\t\t\t\tchecklists,\n\t\t\t\t\tnotes,\n\t\t\t\t\tpdfPriority\n\t\t\t\t)\n\t\t\t\tconst blob = await pdfMakeBlobPromise(\n\t\t\t\t\tACPDF,\n\t\t\t\t\t\"ActionChecklistSummary.pdf\"\n\t\t\t\t)\n\t\t\t\tzip.file(blob.filename, blob.blob)\n\t\t\t}\n\n\t\t\t// Discover Topics\n\t\t\tconst DTPromises: any = selectedFiles.discoverTopics\n\t\t\t\t.map((val, idx) => {\n\t\t\t\t\tif (val) {\n\t\t\t\t\t\treturn makeStaticPdf(\n\t\t\t\t\t\t\t`${discoverTopics[idx].name}.pdf`,\n\t\t\t\t\t\t\tdiscoverTopics[idx].path\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\treturn undefined\n\t\t\t\t})\n\t\t\t\t.filter((v) => typeof v !== \"undefined\")\n\n\t\t\t// Health Checks\n\t\t\tconst HCNames: string[] = []\n\t\t\tconst HCPromises = selectedFiles.healthChecks\n\t\t\t\t.map((val, idx) => {\n\t\t\t\t\tif (val) {\n\t\t\t\t\t\tconst data = healthChecks[idx]\n\t\t\t\t\t\tif (data) {\n\t\t\t\t\t\t\tconst pdfData: HealthCheckQuestionSet = {}\n\t\t\t\t\t\t\tquestions.forEach((q, i) => {\n\t\t\t\t\t\t\t\tconst { question } = q\n\t\t\t\t\t\t\t\tconst answer = data?.answers[i] || \"positive\"\n\t\t\t\t\t\t\t\tconst text = q.options[answer]\n\t\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\t\tpdfData[i] = { question, answer, text }\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\tHCNames.push(\n\t\t\t\t\t\t\t\t`Completed Health Check ${format(\n\t\t\t\t\t\t\t\t\tdata.createdAt!,\n\t\t\t\t\t\t\t\t\t\"dd/MM/yyyy\"\n\t\t\t\t\t\t\t\t)}.pdf`\n\t\t\t\t\t\t\t\t\t.replace(/ /g, \"-\")\n\t\t\t\t\t\t\t\t\t.replace(/\\//g, \"-\")\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\treturn HealthCheckPDF(currentClient?.name ?? \"Client\", pdfData)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn undefined\n\t\t\t\t})\n\t\t\t\t.filter((v) => typeof v !== \"undefined\")\n\n\t\t\t// CFC\n\t\t\tconst CFCNames: string[] = []\n\t\t\tconst CFCPromises = selectedFiles.cfc\n\t\t\t\t.map((val, idx) => {\n\t\t\t\t\tif (val) {\n\t\t\t\t\t\tconst data = cfc[idx]\n\t\t\t\t\t\tif (data) {\n\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\tCFCNames.push(\n\t\t\t\t\t\t\t\t`${canvasDisplayTitle(data)}.pdf`\n\t\t\t\t\t\t\t\t\t.replace(/ /g, \"-\")\n\t\t\t\t\t\t\t\t\t.replace(/\\//g, \"-\")\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\treturn CashFlowCanvasPDF(\n\t\t\t\t\t\t\t\tcurrentClient?.name ?? \"Client\",\n\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\tquestionValues\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn undefined\n\t\t\t\t})\n\t\t\t\t.filter((v) => typeof v !== \"undefined\")\n\n\t\t\tPromise.all([...HCPromises, ...CFCPromises])\n\t\t\t\t.then((res) => {\n\t\t\t\t\tconst names = [...HCNames, ...CFCNames]\n\n\t\t\t\t\tconst blobPromises = res\n\t\t\t\t\t\t.map((pdf, i) => {\n\t\t\t\t\t\t\tif (pdf) {\n\t\t\t\t\t\t\t\treturn pdfMakeBlobPromise(pdf, names[i])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn undefined\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.filter((v) => typeof v !== \"undefined\")\n\n\t\t\t\t\tPromise.all([...DTPromises, ...blobPromises])\n\t\t\t\t\t\t.then((res1) => {\n\t\t\t\t\t\t\tres1.forEach((doc) => {\n\t\t\t\t\t\t\t\tif (hasProperty(doc, \"fileName\")) {\n\t\t\t\t\t\t\t\t\tzip.file(doc.fileName, doc.buffer)\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tzip.file(doc.filename, doc.blob)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tzip.generateAsync({ type: \"blob\" }).then(function (content) {\n\t\t\t\t\t\t\t\t// see FileSaver.js\n\t\t\t\t\t\t\t\tsaveAs(content, `${currentClient.name.replace(/ /g, \"-\")}.zip`)\n\t\t\t\t\t\t\t\tsetExporting(false)\n\t\t\t\t\t\t\t\tshowSnackbar(\n\t\t\t\t\t\t\t\t\t\"The PDFs has been successfully exported\",\n\t\t\t\t\t\t\t\t\t\"success\"\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\t\tsetExporting(false)\n\t\t\t\t\t\t\tshowSnackbar(\"Something went wrong, please try again\", \"error\")\n\t\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tsetExporting(false)\n\t\t\t\t\tshowSnackbar(\"Something went wrong, please try again\", \"error\")\n\t\t\t\t})\n\t\t}\n\t}\n\n\tconst Nav = React.memo(() => {\n\t\treturn (\n\t\t\t<ExpandableNav>\n\t\t\t\t<List component=\"nav\" disablePadding>\n\t\t\t\t\t<ListItem button onClick={generateZip}>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<GetAppIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText>Download selected files</ListItemText>\n\t\t\t\t\t</ListItem>\n\t\t\t\t</List>\n\t\t\t</ExpandableNav>\n\t\t)\n\t})\n\n\tconst SingleDownloads = ({\n\t\ttitle,\n\t\tid,\n\t}: SingleDownloadProps): ReactElement => (\n\t\t<ExpandableNav title={title}>\n\t\t\t<List component=\"nav\" disablePadding>\n\t\t\t\t<CheckboxListItem\n\t\t\t\t\tonClick={changeSingleDownload(id)}\n\t\t\t\t\tchecked={selectedFiles[id]}\n\t\t\t\t\tlabel={staticTitles[id]}\n\t\t\t\t/>\n\t\t\t</List>\n\t\t</ExpandableNav>\n\t)\n\n\treturn (\n\t\t<>\n\t\t\t<PageContainer>\n\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t<Grid item xs={12} md={9}>\n\t\t\t\t\t\t<Box className=\"content-area\">\n\t\t\t\t\t\t\t<SectionTitle component=\"h1\">Downloads</SectionTitle>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tAll the activities you completed in your session are saved here.\n\t\t\t\t\t\t\t\tDownload and save the files to share and review.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tSelect the items you want to save and download them from the\n\t\t\t\t\t\t\t\tcontrol panel.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box className={cls.dropdownWrapper}>\n\t\t\t\t\t\t\t<SingleDownloads title=\"Change Levers\" id=\"changeLevers\" />\n\t\t\t\t\t\t\t<SingleDownloads title=\"Action Checklist\" id=\"actionChecklist\" />\n\t\t\t\t\t\t\t<FileListing\n\t\t\t\t\t\t\t\ttitle=\"Discover Topics\"\n\t\t\t\t\t\t\t\tstate={selectedFiles.discoverTopics}\n\t\t\t\t\t\t\t\tsetState={setSelectedFiles}\n\t\t\t\t\t\t\t\tdata={discoverTopics}\n\t\t\t\t\t\t\t\tid=\"discoverTopics\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FileListing\n\t\t\t\t\t\t\t\ttitle=\"Health Check\"\n\t\t\t\t\t\t\t\tstate={selectedFiles.healthChecks}\n\t\t\t\t\t\t\t\tsetState={setSelectedFiles}\n\t\t\t\t\t\t\t\tdata={HCListing}\n\t\t\t\t\t\t\t\tid=\"healthChecks\"\n\t\t\t\t\t\t\t\tloading={fetching}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FileListing\n\t\t\t\t\t\t\t\ttitle=\"Cash Flow Canvas\"\n\t\t\t\t\t\t\t\tstate={selectedFiles.cfc}\n\t\t\t\t\t\t\t\tsetState={setSelectedFiles}\n\t\t\t\t\t\t\t\tdata={CFCListing}\n\t\t\t\t\t\t\t\tid=\"cfc\"\n\t\t\t\t\t\t\t\tloading={fetching}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} md={3}>\n\t\t\t\t\t\t<Nav />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</PageContainer>\n\t\t\t<Backdrop className={classes.backdrop} open={exporting}>\n\t\t\t\t<CircularProgress color=\"inherit\" />\n\t\t\t</Backdrop>\n\t\t\t{/* eslint-disable-next-line react/jsx-props-no-spreading */}\n\t\t\t<SnackbarMsg {...snackbar} onClose={handleClose} />\n\t\t</>\n\t)\n}\n\nexport default SessionFiles\n","import { format } from \"date-fns\"\nimport { FileListingStruct } from \"./shape\"\nimport { HealthCheckDataStruct, CFCStruct } from \"../../../data/_config/shape\"\nimport { canvasDisplayTitle } from \"../../CFC/__config/utilities\"\n\nexport function healthCheckToData(): ReducerHOF<\n\tFileListingStruct[],\n\tHealthCheckDataStruct\n> {\n\treturn (acc, cur): FileListingStruct[] =>\n\t\tacc.concat({\n\t\t\tname: `Completed Health Check ${\n\t\t\t\tcur.createdAt && format(cur.createdAt, \"'-' dd/MM/yyyy hh:mm a\")\n\t\t\t}`,\n\t\t\tid: `${cur.id || -1}`,\n\t\t})\n}\n\nexport function cfcToData(): ReducerHOF<FileListingStruct[], CFCStruct> {\n\treturn (acc, cur): FileListingStruct[] =>\n\t\tacc.concat({\n\t\t\tname: canvasDisplayTitle(cur),\n\t\t\tid: `${cur.id || -1}`,\n\t\t})\n}\n","import React, { ReactElement } from \"react\"\nimport Alert, { AlertProps } from \"@material-ui/lab/Alert\"\nimport { Snackbar, IconButton } from \"@material-ui/core\"\nimport CloseIcon from \"@material-ui/icons/Close\"\n\n// #region Interface Definitions\n/**\n * Data required for the snackbar\n * use this interface when defining the state\n *\n * @export\n * @interface SnackbarMsgData\n */\nexport interface SnackbarMsgData {\n\topen: boolean\n\tmsg: string\n\tseverity?: AlertProps[\"severity\"]\n}\n\n/**\n * Props required to be passed to the component\n *\n * @export\n * @interface SnackbarMsgProps\n * @extends {SnackbarMsgData}\n */\nexport interface SnackbarMsgProps extends SnackbarMsgData {\n\tonClose: (\n\t\tevent: React.SyntheticEvent | React.MouseEvent,\n\t\treason?: string\n\t) => void\n}\n// #endregion\n\n/**\n * Snackbar abstraction component, use this for a consistent\n * way to show messages to the user\n *\n * The component who uses this component will need to handle the\n * state of this component and pass down the props.\n *\n * See the README\n *\n * @export\n * @param {SnackbarMsgProps} {\n * \topen,\n * \tmsg,\n * \tonClose,\n * \tseverity = \"info\",\n * }\n * @returns {ReactElement}\n */\nexport default function SnackbarMsg({\n\topen,\n\tmsg,\n\tonClose,\n\tseverity = \"info\",\n}: SnackbarMsgProps): ReactElement {\n\treturn (\n\t\t<Snackbar\n\t\t\topen={open}\n\t\t\tautoHideDuration={2000}\n\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n\t\t\tonClose={onClose}\n\t\t>\n\t\t\t<Alert\n\t\t\t\tseverity={severity}\n\t\t\t\tvariant=\"filled\"\n\t\t\t\taction={\n\t\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\">\n\t\t\t\t\t\t<CloseIcon fontSize=\"small\" />\n\t\t\t\t\t</IconButton>\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{msg}\n\t\t\t</Alert>\n\t\t</Snackbar>\n\t)\n}\n","import React, { ReactElement, ReactNode } from \"react\"\nimport Loading from \"../Loading\"\n\n/**\n * Prop defintion for the `IfElseLoading` component\n *\n * @interface IfElseLoadingProps\n */\ninterface IfElseLoadingProps {\n\tchildren: ReactNode\n\tif: boolean\n}\n\n/**\n * A component to render either the default Loading component\n * or its children based on a conditional\n *\n * @export\n * @param {IfElseLoadingProps} {\n * \tchildren,\n * \tif: check,\n * }\n * @returns {ReactElement}\n */\nexport default function IfElseLoading({\n\tchildren,\n\tif: check,\n}: IfElseLoadingProps): ReactElement {\n\treturn !check ? <Loading /> : <>{children}</>\n}\n","import { BaseCFCStruct } from \"../../../data/_config/shape\"\nimport createCashFlowItem from \"../../../state/CFC/createCashFlow\"\n\nconst initialValues: BaseCFCStruct = {\n\tcanvasTitle: \"\",\n\tcanvasType: \"review\",\n\tcanvasTimeFrame: \"quarterly\",\n\tcanvasStartDate: new Date(),\n\tcanvasEndDate: new Date(),\n\topeningBalance: 0,\n\tpaygWithholding: 0,\n\tsuperAmount: 0,\n\tincomeTax: 25,\n\tcashToOwner: 0,\n\tstock: 0,\n\tcreditors: 0,\n\tdebtors: 0,\n\tassets: 0,\n\tloans: 0,\n\tcashInItems: [createCashFlowItem()],\n\tcashOutItems: [createCashFlowItem()],\n\tgstOnPurchases: undefined,\n\tgstOnSales: undefined,\n}\n\nexport default initialValues\n","import { BaseCFCStruct } from \"../../../data/_config/shape\"\nimport { CalculatedValues } from \"../../../state/CFC/useCalculated\"\nimport {\n\tcalcTotalNetAssets,\n\tcalcAvailableToSpend,\n\tcalcCashSurplus,\n\tcalcCashFlowGST,\n\tcalcClosingBalance,\n\tcalcIncomeTaxPer,\n} from \"../../../state/CFC/accumulators\"\nimport { isGSTValid } from \"../../../util/money/gst\"\n\n/**\n * Calculates the values for the dynamic values\n *\n * @param {BaseCFCStruct} values\n * @returns {CalculatedValues}\n */\nfunction calculateInitial(values: BaseCFCStruct): CalculatedValues {\n\treturn {\n\t\tgstOnSales: isGSTValid(values.gstOnSales)\n\t\t\t? values.gstOnSales!\n\t\t\t: calcCashFlowGST(values.cashInItems),\n\t\tclosingBalance: calcClosingBalance(values),\n\t\tgstOnPurchases: isGSTValid(values.gstOnPurchases)\n\t\t\t? values.gstOnPurchases!\n\t\t\t: calcCashFlowGST(values.cashOutItems),\n\t\ttotalNetAssets: calcTotalNetAssets(values),\n\t\tcashSurplus: calcCashSurplus(values),\n\t\tavailableToSpend: calcAvailableToSpend(values),\n\t\tincomeTaxPercentage: calcIncomeTaxPer(values),\n\t}\n}\n\nexport default calculateInitial\n","import { makeStyles } from \"@material-ui/core\"\n\n// Section title styles\nconst useSTStyles = makeStyles((theme) => ({\n\ttitle: {\n\t\tfontWeight: 500,\n\t\tmarginBottom: theme.spacing(2),\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tfontSize: theme.typography.h5.fontSize,\n\t\t},\n\t},\n}))\n\nexport default useSTStyles\n","import React, { ReactElement } from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport { SectionTitleProps } from \"./_config/shape\"\nimport useSTStyles from \"./_config/styles\"\n\n/**\n * Abstraction for the Typography for a consistent heading for sections\n *\n * @param {SectionTitleProps} props Mimics the props for `<Typography>`\n * @returns ReactElement\n */\nconst SectionTitle = ({\n\tchildren,\n\tclassName,\n\t...props\n}: SectionTitleProps): ReactElement => {\n\tconst styles = useSTStyles()\n\treturn (\n\t\t<Typography\n\t\t\tvariant=\"h4\"\n\t\t\tcolor=\"textPrimary\"\n\t\t\tclassName={`${styles.title} ${className}`}\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t{...props}\n\t\t>\n\t\t\t{children}\n\t\t</Typography>\n\t)\n}\n\nexport default SectionTitle\n","/**\n * Add Padding\n *\n * add white space around some content\n */\n\nimport { format } from \"date-fns\"\n\nexport const addPadding = (content: any, margin = 10) => {\n\treturn {\n\t\tmargin,\n\t\tcolumns: [content],\n\t}\n}\n\n/**\n * Page and margin defaults\n */\n\nexport const pageDefaultSettings = () => {\n\treturn {\n\t\t// watermark: {\n\t\t// \ttext: \"draft\",\n\t\t// \tcolor: \"blue\",\n\t\t// \topacity: 0.3,\n\t\t// \tbold: true,\n\t\t// \titalics: false,\n\t\t// },\n\n\t\tpageSize: \"A4\",\n\t\tpageMargins: [0, 0, 0, 25],\n\t\tfooter: {\n\t\t\tcolumns: [\n\t\t\t\t{\n\t\t\t\t\ttext: `Created on the ${format(new Date(), \"do 'of' MMMM yyyy\")}`,\n\t\t\t\t\talignment: \"center\",\n\t\t\t\t\tfontSize: 12,\n\t\t\t\t\tcolor: \"#333\",\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t}\n}\n\n/**\n * Frame Content\n *\n * Put content in a table with a border\n */\n\nexport const frameContent = (inner: any, style: string[] = []) => {\n\treturn {\n\t\ttable: {\n\t\t\twidths: [\"*\"], // to make it full length\n\t\t\tbody: [[inner]],\n\t\t},\n\t\tstyle,\n\t}\n}\n\n/**\n * Table with Text in it for top of page\n * Requires a pageHeader style\n */\n\nexport const pageHeading = (text: string) => {\n\tconst content = frameContent(addPadding(text), [\"pageHeader\"])\n\n\treturn {\n\t\t...content,\n\t\tlayout: \"noBorders\",\n\t}\n}\n\n/**\n * Add 20 points of padding on a full page\n */\n\nexport const pagePadding = (content: any) => addPadding(content, 20)\n\n/**\n * Basic table of key .... value\n */\n\nexport const basicTable = (items: any, style: string[] = []) => {\n\treturn {\n\t\ttable: {\n\t\t\twidths: [\"70%\", \"*\"],\n\t\t\tbody: items,\n\t\t},\n\t\tstyle,\n\t\tlayout: \"noBorders\",\n\t}\n}\n","/**\n * Creates and fills an array with some data\n *\n * @export\n * @template T\n * @param {number} len\n * @param {T} fill\n * @returns {T[]}\n */\nexport default function arrayFillWith<T>(len: number, fill: T): T[] {\n\treturn new Array(len).fill(fill)\n}\n","import ILogicLayer from \"../_config/logicLayer\"\nimport HealthCheckDB from \"./HealthCheckDatabase\"\nimport {\n\tHealthCheckDataStruct,\n\tBaseHealthCheckStruct,\n\tHealthCheckId,\n\tClientId,\n} from \"../_config/shape\"\n\n/**\n * Logic implementation for the Health check database\n *\n * @class HealthCheckLogic\n * @extends {ILogicLayer<HealthCheckDataStruct, BaseHealthCheckStruct>}\n */\nclass HealthCheckLogic extends ILogicLayer<\n\tHealthCheckDataStruct,\n\tBaseHealthCheckStruct\n> {\n\t/**\n\t * Creates an instance of HealthCheckLogic.\n\t *\n\t * @memberof HealthCheckLogic\n\t */\n\tconstructor() {\n\t\tsuper(HealthCheckDB, HealthCheckDB.healthChecks)\n\t}\n\n\t/**\n\t * Finds a health check by the id and clientId\n\t *\n\t * @param {HealthCheckId} id\n\t * @param {ClientId} clientId\n\t * @returns {Promise<HealthCheckDataStruct>}\n\t * @memberof HealthCheckLogic\n\t */\n\tpublic findByClientId(\n\t\tid: HealthCheckId,\n\t\tclientId: ClientId\n\t): Promise<HealthCheckDataStruct | undefined> {\n\t\treturn this.database.transaction(\"r\", this.table.name, () => {\n\t\t\treturn this.table.where({ id, clientId }).first()\n\t\t})\n\t}\n\n\t/**\n\t * Finds all the health checks for a given client\n\t *\n\t * @param {ClientId} clientId\n\t * @returns {Promise<HealthCheckDataStruct[]>}\n\t * @memberof HealthCheckLogic\n\t */\n\tpublic findClientHealthChecks(\n\t\tclientId: ClientId\n\t): Promise<HealthCheckDataStruct[]> {\n\t\treturn this.database.transaction(\"r\", this.table.name, () => {\n\t\t\treturn this.table.where(\"clientId\").equals(clientId).toArray()\n\t\t})\n\t}\n}\n\n// Creates a instance of the logic class and exports the instance\nconst HealthCheckUseCase = new HealthCheckLogic()\n\nexport default HealthCheckUseCase\n","import { v4 as uuidv4 } from \"uuid\"\nimport { CashFlow } from \"../../data/_config/shape\"\n\nexport default function createCashFlowItem(\n\tdescription = \"\",\n\tamount = 0,\n\tgstApplicable = true\n): CashFlow {\n\treturn {\n\t\tid: uuidv4(),\n\t\tdescription,\n\t\tamount,\n\t\tgstApplicable,\n\t}\n}\n","import pdfMake from \"pdfmake/build/pdfmake\"\nimport pdfFonts from \"pdfmake/build/vfs_fonts\"\nimport { green } from \"@material-ui/core/colors\"\nimport { format } from \"date-fns\"\nimport {\n\tframeContent,\n\tbasicTable,\n\tpageDefaultSettings,\n\tpageHeading,\n\tpagePadding,\n} from \"./PDFLib\"\nimport { BaseCFCStruct, CashFlow } from \"../../data/_config/shape\"\nimport {\n\tcalcCashFlowTotal,\n\tcalcTotalCashOut,\n\tcalcIncomeTaxPer,\n} from \"../../state/CFC/accumulators\"\nimport { calculateInitial } from \"../Forms/CFC\"\nimport { canvasDisplayTitle } from \"../CFC/__config/utilities\"\nimport upperFirst from \"../../util/strings/upperCaseFirst\"\nimport { addDollarSign, formatNumber } from \"../../util/money/formatting\"\n\npdfMake.vfs = pdfFonts.pdfMake.vfs\n\nconst formatDollars = (value: number) => addDollarSign(formatNumber(`${value}`))\n\nconst openingBalanceSection = (openingBalance: number): any => {\n\treturn frameContent(\n\t\tbasicTable([\n\t\t\t[\n\t\t\t\t\"Opening Balance\",\n\t\t\t\t{ text: formatDollars(openingBalance), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t])\n\t)\n}\n\nconst cashInSection = (cashInItems: CashFlow[], cashInTotal: number): any => {\n\treturn frameContent([\n\t\t{\n\t\t\ttext: \"Cash IN\",\n\t\t\tbold: true,\n\t\t},\n\t\tbasicTable([\n\t\t\t...cashInItems.map((line) => [\n\t\t\t\tline.description,\n\t\t\t\t{ text: formatDollars(line.amount), style: [\"rightAlign\"] },\n\t\t\t]),\n\t\t\t[\n\t\t\t\t\"Total (Exc GST)\",\n\t\t\t\t{\n\t\t\t\t\ttext: formatDollars(cashInTotal),\n\t\t\t\t\tstyle: [\"rightAlign\"],\n\t\t\t\t},\n\t\t\t],\n\t\t]),\n\t])\n}\n\nconst gstOnSalesSection = (gstOnSales: number): any => {\n\treturn frameContent(\n\t\tbasicTable(\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"GST on Sales\",\n\t\t\t\t\t{ text: formatDollars(gstOnSales), style: [\"rightAlign\"] },\n\t\t\t\t],\n\t\t\t],\n\t\t\t[\"yellowBlock\"]\n\t\t)\n\t)\n}\n\nconst cashOutSection = (\n\tcashOutItems: CashFlow[],\n\tcashOutTotal: number\n): any => {\n\treturn frameContent([\n\t\t{ text: \"Cash OUT\", bold: true },\n\t\tbasicTable([\n\t\t\t...cashOutItems.map((line) => [\n\t\t\t\tline.description,\n\t\t\t\t{ text: formatDollars(line.amount), style: [\"rightAlign\"] },\n\t\t\t]),\n\t\t\t[\n\t\t\t\t\"Total (Exc GST)\",\n\t\t\t\t{\n\t\t\t\t\ttext: formatDollars(cashOutTotal),\n\t\t\t\t\tstyle: [\"rightAlign\"],\n\t\t\t\t},\n\t\t\t],\n\t\t]),\n\t])\n}\n\nconst gstOnPurchasesSection = (\n\tgstOnPurchases: number,\n\tpaygWithholding: number,\n\tsuperAmount: number\n): any => {\n\treturn frameContent(\n\t\tbasicTable(\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"GST on Purchases\",\n\t\t\t\t\t{ text: formatDollars(gstOnPurchases), style: [\"rightAlign\"] },\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"PAYG Withholding\",\n\t\t\t\t\t{ text: formatDollars(paygWithholding), style: [\"rightAlign\"] },\n\t\t\t\t],\n\t\t\t\t[\"Super\", { text: formatDollars(superAmount), style: [\"rightAlign\"] }],\n\t\t\t],\n\t\t\t[\"yellowBlock\"]\n\t\t)\n\t)\n}\n\nconst cashSurplusSection = (cashSurplus: number): any => {\n\treturn frameContent(\n\t\tbasicTable([\n\t\t\t[\n\t\t\t\t\"Cash Surplus\",\n\t\t\t\t{ text: formatDollars(cashSurplus), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t])\n\t)\n}\n\nconst incomeSection = (values: BaseCFCStruct): any => {\n\treturn frameContent(\n\t\tbasicTable(\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"Income/Company Tax\",\n\t\t\t\t\t// TODO: Needs to use the new calculations in feature/122 branch\n\t\t\t\t\t{\n\t\t\t\t\t\ttext: formatDollars(calcIncomeTaxPer(values)),\n\t\t\t\t\t\tstyle: [\"rightAlign\"],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t],\n\t\t\t[\"yellowBlock\"]\n\t\t)\n\t)\n}\n\nconst availableToSpendSection = (availableToSpend: number): any => {\n\treturn frameContent(\n\t\tbasicTable([\n\t\t\t[\n\t\t\t\t\"Available to spend\",\n\t\t\t\t{ text: formatDollars(availableToSpend), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t])\n\t)\n}\n\nconst closingCashBalanceSection = (\n\tcashToOwner: number,\n\tclosingBalance: number\n): any => {\n\treturn frameContent([\n\t\t{ text: \"Your Closing Cash Balance\", bold: true },\n\t\tbasicTable([\n\t\t\t[\n\t\t\t\t\"Cash to owner\",\n\t\t\t\t{ text: formatDollars(cashToOwner), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Closing balance\",\n\t\t\t\t{ text: formatDollars(closingBalance), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t]),\n\t])\n}\n\nconst question2Section = (value: number) => {\n\treturn frameContent(\n\t\tbasicTable(\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"Have you put enough money aside to meet your regular financial commitments?\",\n\t\t\t\t\t{ text: formatDollars(value), style: [\"rightAlign\"] },\n\t\t\t\t],\n\t\t\t],\n\t\t\t[\"yellowBlock\"]\n\t\t)\n\t)\n}\n\nconst yourNetAssetPositionSection = (\n\tstock: number,\n\tcreditors: number,\n\tdebtors: number,\n\tassets: number,\n\tloans: number,\n\ttotalNetAssets: number\n): any => {\n\treturn frameContent([\n\t\t{ text: \"Your net asset position\", bold: true },\n\t\tbasicTable([\n\t\t\t[\"Stocks\", { text: formatDollars(stock), style: [\"rightAlign\"] }],\n\t\t\t[\"Creditors\", { text: formatDollars(creditors), style: [\"rightAlign\"] }],\n\t\t\t[\"Debtors\", { text: formatDollars(debtors), style: [\"rightAlign\"] }],\n\t\t\t[\"Assets\", { text: formatDollars(assets), style: [\"rightAlign\"] }],\n\t\t\t[\"Loans\", { text: formatDollars(loans), style: [\"rightAlign\"] }],\n\t\t\t[\n\t\t\t\t{ text: \"Total net assets\", bold: true },\n\t\t\t\t{ text: formatDollars(totalNetAssets), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t]),\n\t])\n}\n\nexport default async (\n\ttitle: string,\n\tvalues: BaseCFCStruct,\n\tquestionValues: any // QuestionValues\n) => {\n\tconst {\n\t\topeningBalance,\n\t\tcashInItems,\n\t\tcashOutItems,\n\t\tpaygWithholding,\n\t\tsuperAmount,\n\t\tcashToOwner,\n\t\tstock,\n\t\tcreditors,\n\t\tdebtors,\n\t\tassets,\n\t\tloans,\n\t\tgstOnPurchases: dbGSTOnPurchase,\n\t\tgstOnSales: dbGSTOnSales,\n\t} = values\n\n\tconst cashInTotal = calcCashFlowTotal(cashInItems, dbGSTOnSales)\n\tconst cashOutTotal = calcTotalCashOut(values, dbGSTOnPurchase)\n\n\tconst calculated = calculateInitial(values)\n\tconst {\n\t\tcashSurplus,\n\t\tavailableToSpend,\n\t\tclosingBalance,\n\t\ttotalNetAssets,\n\t\tgstOnSales,\n\t\tgstOnPurchases,\n\t} = calculated\n\n\tconst docDefinition: any = {\n\t\t...pageDefaultSettings(),\n\n\t\tcontent: [\n\t\t\tpageHeading(`${title} - CANVAS - ${canvasDisplayTitle(values)}`),\n\t\t\tpagePadding([\n\t\t\t\tframeContent({\n\t\t\t\t\ttable: {\n\t\t\t\t\t\twidths: [\"25%\", \"25%\", \"25%\", \"25%\"],\n\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: \"Canvas Type\", bold: true },\n\t\t\t\t\t\t\t\t\tupperFirst(values.canvasType),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: \"Time-frame\", bold: true },\n\t\t\t\t\t\t\t\t\tupperFirst(values.canvasTimeFrame),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: \"Start date\", bold: true },\n\t\t\t\t\t\t\t\t\t`${format(values.canvasStartDate, \"dd/MM/yyyy\")}`,\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: \"End date\", bold: true },\n\t\t\t\t\t\t\t\t\t`${format(values.canvasEndDate, \"dd/MM/yyyy\")}`,\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\tlayout: \"noBorders\",\n\t\t\t\t}),\n\t\t\t\t\" \",\n\t\t\t\topeningBalanceSection(openingBalance),\n\n\t\t\t\t{\n\t\t\t\t\ttable: {\n\t\t\t\t\t\twidths: [\"55%\", \"*\"],\n\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tcashInSection(cashInItems, cashInTotal),\n\t\t\t\t\t\t\t\tgstOnSalesSection(gstOnSales),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tcashOutSection(cashOutItems, cashOutTotal),\n\t\t\t\t\t\t\t\tgstOnPurchasesSection(\n\t\t\t\t\t\t\t\t\tgstOnPurchases,\n\t\t\t\t\t\t\t\t\tpaygWithholding,\n\t\t\t\t\t\t\t\t\tsuperAmount\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[cashSurplusSection(cashSurplus), incomeSection(values)],\n\t\t\t\t\t\t\t[availableToSpendSection(availableToSpend), {}],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tclosingCashBalanceSection(cashToOwner, closingBalance),\n\t\t\t\t\t\t\t\t\t{ text: \" \", style: [\"spacer\"] },\n\t\t\t\t\t\t\t\t\tyourNetAssetPositionSection(\n\t\t\t\t\t\t\t\t\t\tstock,\n\t\t\t\t\t\t\t\t\t\tcreditors,\n\t\t\t\t\t\t\t\t\t\tdebtors,\n\t\t\t\t\t\t\t\t\t\tassets,\n\t\t\t\t\t\t\t\t\t\tloans,\n\t\t\t\t\t\t\t\t\t\ttotalNetAssets\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tquestion2Section(questionValues.two),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\tlayout: \"noBorders\",\n\t\t\t\t},\n\t\t\t]),\n\t\t],\n\n\t\tstyles: {\n\t\t\tpageHeader: {\n\t\t\t\tfontSize: 20,\n\t\t\t\tbold: true,\n\t\t\t\tfillColor: green[\"800\"],\n\t\t\t\tcolor: \"white\",\n\t\t\t\talignment: \"center\",\n\t\t\t},\n\t\t\trightAlign: {\n\t\t\t\t// fillColor: \"#CCCCCC\",\n\t\t\t\talignment: \"right\",\n\t\t\t},\n\t\t\tyellowBlock: {\n\t\t\t\tfillColor: \"yellow\",\n\t\t\t},\n\t\t\tspacer: {\n\t\t\t\tfontSize: 4, // cheat for a spacer between blocks\n\t\t\t},\n\t\t},\n\n\t\tdefaultStyle: {\n\t\t\tfontSize: 13,\n\t\t\tbold: false,\n\t\t},\n\t}\n\treturn pdfMake.createPdf(docDefinition)\n}\n","/* eslint-disable import/prefer-default-export */\nimport { PossibleActionItems } from \"../../../../state/action-checklist/shape\"\n\n// Action title mapping object\nexport const actionTitleMapping: Record<PossibleActionItems, string> = {\n\tcashInActions: \"Cash IN actions\",\n\tcashOutActions: \"Cash OUT actions\",\n\tplanningBusiness: \"Planning your business actions\",\n\trecordKeeping: \"Record keeping actions\",\n\tfunding: \"Funding your business actions\",\n\tmanaging: \"Managing your cash flow actions\",\n\tplanningCommitments: \"Planning your regular financial commitments actions\",\n\ttracking: \"Tracking your performance actions\",\n\ttransition: \"Selling, closing and succession planning\",\n}\n","import pdfMake from \"pdfmake/build/pdfmake\"\nimport pdfFonts from \"pdfmake/build/vfs_fonts\"\nimport { purple, grey } from \"@material-ui/core/colors\"\nimport {\n\tpageDefaultSettings,\n\tpageHeading,\n\tpagePadding,\n\taddPadding,\n} from \"./PDFLib\"\nimport { answerTheming } from \"../HealthCheck/_config/data\"\n\npdfMake.vfs = pdfFonts.pdfMake.vfs\n\nexport interface HealthCheckQuestion {\n\tquestion: string\n\tanswer: string\n\ttext: string\n}\n\nexport interface HealthCheckQuestionSet {\n\t[key: number]: HealthCheckQuestion // 0..9\n}\n\nconst questionElementTop = ({\n\tquestion,\n\tanswer,\n\ttext,\n}: HealthCheckQuestion) => {\n\treturn addPadding([\n\t\t{ text: question, style: \"question\" },\n\t\t\" \",\n\t\t{ text, style: answer },\n\t])\n}\n\nexport interface HealthCheckParams {\n\ttitle: string\n\tanswers: {\n\t\t[idx: string]: string\n\t}\n}\n\nexport default async (title: string, answers: HealthCheckQuestionSet) => {\n\tconst docDefinition: any = {\n\t\t...pageDefaultSettings(),\n\n\t\tcontent: [\n\t\t\tpageHeading(`${title} - Health Check`),\n\t\t\tpagePadding([\n\t\t\t\t{\n\t\t\t\t\tstyle: \"tableCell\",\n\t\t\t\t\ttable: {\n\t\t\t\t\t\twidths: [\"*\", \"*\"],\n\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttext: \"Four Key Questions\",\n\t\t\t\t\t\t\t\t\tstyle: \"tableHeading\",\n\t\t\t\t\t\t\t\t\tcolSpan: 2,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[questionElementTop(answers[0]), questionElementTop(answers[1])],\n\t\t\t\t\t\t\t[questionElementTop(answers[2]), questionElementTop(answers[3])],\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t\" \",\n\n\t\t\t\t{\n\t\t\t\t\tstyle: \"tableCell\",\n\t\t\t\t\ttable: {\n\t\t\t\t\t\twidths: [\"*\", \"*\"],\n\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t[questionElementTop(answers[4]), questionElementTop(answers[5])],\n\n\t\t\t\t\t\t\t[questionElementTop(answers[6]), questionElementTop(answers[7])],\n\n\t\t\t\t\t\t\t[questionElementTop(answers[8]), questionElementTop(answers[9])],\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t]),\n\t\t],\n\n\t\tstyles: {\n\t\t\tpageHeader: {\n\t\t\t\tfontSize: 20,\n\t\t\t\tbold: true,\n\t\t\t\tfillColor: purple[\"500\"],\n\t\t\t\tcolor: \"white\",\n\t\t\t\talignment: \"center\",\n\t\t\t},\n\t\t\ttableHeading: {\n\t\t\t\tfillColor: grey[\"200\"],\n\t\t\t\talignment: \"center\",\n\t\t\t},\n\t\t\tquestion: {},\n\t\t\tpositive: {\n\t\t\t\tfontSize: 16,\n\t\t\t\tcolor: answerTheming[0].color,\n\t\t\t\tbold: true,\n\t\t\t},\n\t\t\tnegative: {\n\t\t\t\tfontSize: 16,\n\t\t\t\tcolor: answerTheming[1].color,\n\t\t\t\tbold: true,\n\t\t\t},\n\t\t\tneutral: {\n\t\t\t\tfontSize: 16,\n\t\t\t\tcolor: answerTheming[2].color,\n\t\t\t\tbold: true,\n\t\t\t},\n\t\t},\n\n\t\tdefaultStyle: {\n\t\t\tfontSize: 15,\n\t\t\tbold: false,\n\t\t\tcolor: \"#000\",\n\t\t},\n\t}\n\treturn pdfMake.createPdf(docDefinition)\n}\n","/* eslint-disable */\nimport pdfMake, { TCreatedPdf } from \"pdfmake/build/pdfmake\"\nimport pdfFonts from \"pdfmake/build/vfs_fonts\"\nimport { format } from \"date-fns\"\nimport { lightBlue } from \"@material-ui/core/colors\"\nimport {\n\tpageHeading,\n\tpagePadding,\n\tpageDefaultSettings,\n\tbasicTable,\n} from \"./PDFLib\"\nimport {\n\tActionChecklistStruct,\n\tActionChecklistNotesStruct,\n\tClientId,\n\tActionChecklistPriorityStruct,\n} from \"../../data/_config/shape\"\nimport { actionTitleMapping } from \"../ActionChecklist/ActionContainer/_config/data\"\nimport { PossibleActionItems } from \"../../state/action-checklist/shape\"\nimport ActionChecklistUseCase from \"../../data/ActionChecklist/ChecklistLogic\"\nimport ActionNotesUseCase from \"../../data/ActionChecklist/NotesLogic\"\nimport ActionPriorityUseCase from \"../../data/ActionChecklist/PriorityLogic\"\n\npdfMake.vfs = pdfFonts.pdfMake.vfs\n\nconst itemsSection = (items: ActionChecklistStruct[]) => {\n\tif (items.length === 0) {\n\t\treturn {\n\t\t\ttext: \"No action items\",\n\t\t\tstyle: \"noResult\",\n\t\t}\n\t}\n\n\treturn basicTable(\n\t\titems.map(({ description, reviewBy, completed }) => [\n\t\t\t{\n\t\t\t\ttext: description || \"No description provided\",\n\t\t\t\tstyle: [\n\t\t\t\t\tdescription === \"\" ? \"noResult\" : \"\",\n\t\t\t\t\tcompleted ? \"completed\" : \"\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: format(reviewBy, \"dd/MM/yyyy\"),\n\t\t\t\tstyle: [completed ? \"completed\" : \"\"],\n\t\t\t},\n\t\t])\n\t)\n}\n\nexport default async (\n\ttitle: string,\n\tchecklistCollection: ActionChecklistStruct[],\n\tnotes: ActionChecklistNotesStruct[],\n\tpriority: ActionChecklistPriorityStruct[]\n): Promise<TCreatedPdf> => {\n\tconst docDefinition: any = {\n\t\t...pageDefaultSettings(),\n\n\t\tcontent: [\n\t\t\tpageHeading(`${title} - Action Checklist`),\n\t\t\tpagePadding([\n\t\t\t\t...(Object.keys(actionTitleMapping) as PossibleActionItems[]).map(\n\t\t\t\t\t(value, idx) => {\n\t\t\t\t\t\tconst arr = []\n\t\t\t\t\t\tconst items = checklistCollection.filter(\n\t\t\t\t\t\t\t(i) => i.actionContainer === value\n\t\t\t\t\t\t)\n\n\t\t\t\t\t\tconst note = notes.filter((i) => i.actionContainer === value)\n\t\t\t\t\t\tconst prior = priority.filter((i) => i.actionContainer === value)\n\n\t\t\t\t\t\tif (items.length === 0 || prior.length < 1) return \"\"\n\n\t\t\t\t\t\tconst sortedItems = prior[0].order\n\t\t\t\t\t\t\t.map((p) => {\n\t\t\t\t\t\t\t\tconst idx = items.findIndex((x) => x?.id === p)\n\t\t\t\t\t\t\t\treturn items[idx]\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.filter((v) => typeof v !== \"undefined\")\n\n\t\t\t\t\t\tif (idx !== 0) arr.push(\" \")\n\t\t\t\t\t\tarr.push({ text: actionTitleMapping[value], style: \"heading\" })\n\t\t\t\t\t\tarr.push(itemsSection(sortedItems))\n\t\t\t\t\t\tif (note.length > 0 && note[0].notes !== \"\") {\n\t\t\t\t\t\t\tarr.push(\" \")\n\t\t\t\t\t\t\tarr.push({ text: \"Notes\", style: \"subHeading\" })\n\t\t\t\t\t\t\tarr.push(note[0].notes)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn arr\n\t\t\t\t\t}\n\t\t\t\t),\n\t\t\t]),\n\t\t],\n\n\t\tstyles: {\n\t\t\tpageHeader: {\n\t\t\t\tfontSize: 20,\n\t\t\t\tbold: true,\n\t\t\t\tfillColor: lightBlue[\"800\"],\n\t\t\t\tcolor: \"white\",\n\t\t\t\talignment: \"center\",\n\t\t\t},\n\t\t\theading: {\n\t\t\t\tfontSize: 16,\n\t\t\t\tbold: true,\n\t\t\t},\n\t\t\tsubHeading: {\n\t\t\t\tfontSize: 14,\n\t\t\t\tbold: true,\n\t\t\t},\n\t\t\trightAlign: {\n\t\t\t\talignment: \"right\",\n\t\t\t},\n\t\t\tnoResult: {\n\t\t\t\titalics: true,\n\t\t\t\tcolor: \"#333\",\n\t\t\t},\n\t\t\tcompleted: {\n\t\t\t\tdecoration: \"lineThrough\",\n\t\t\t},\n\t\t},\n\n\t\tdefaultStyle: {\n\t\t\tfontSize: 15,\n\t\t\tbold: false,\n\t\t},\n\t}\n\treturn pdfMake.createPdf(docDefinition)\n}\n"],"sourceRoot":""}