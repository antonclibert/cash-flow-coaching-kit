{"version":3,"sources":["components/PDF/ActionChecklistPDF.ts","components/ActionChecklist/ActionHeader/_config/style.ts","components/ActionChecklist/ActionHeader/ActionHeader.tsx","components/ActionChecklist/ActionContainer/_config/styles.ts","components/ActionChecklist/ActionContainer/_partials/Actions.tsx","components/ActionChecklist/ActionContainer/_partials/ActionItem.tsx","components/ActionChecklist/ActionContainer/_partials/ActionNotes.tsx","components/ActionChecklist/ActionContainer/_config/utilities.ts","util/array/lastInArray.ts","util/array/arraySwap.ts","components/ActionChecklist/ActionContainer/ActionContainer.tsx","components/ActionChecklist/_config/data.ts","data/ActionChecklist/_config/machine.ts","content/tips/ActionChecklistTips.tsx","pages/action-items.tsx","content/tips/style.ts","components/PageTip/_config/style.ts","components/PageTip/PageTip.tsx","components/SectionTitle/_config/styles.ts","components/SectionTitle/SectionTitle.tsx","components/PDF/PDFLib.ts","components/PDF/servePDF.ts","components/HealthCheck/FourQuestions/_config/utilities.tsx","components/HealthCheck/FourQuestions/FourQuestions.tsx","components/ActionChecklist/ActionContainer/_config/data.ts"],"names":["pdfMake","vfs","pdfFonts","itemsSection","items","length","text","style","basicTable","map","description","reviewBy","completed","format","title","checklistCollection","notes","priority","a","docDefinition","pageDefaultSettings","content","pageHeading","pagePadding","Object","keys","actionTitleMapping","value","idx","arr","filter","i","actionContainer","note","prior","sortedItems","order","p","findIndex","x","id","v","push","styles","pageHeader","fontSize","bold","fillColor","lightBlue","color","alignment","heading","subHeading","rightAlign","noResult","italics","decoration","defaultStyle","createPdf","useActionHeaderStyles","makeStyles","theme","root","marginBottom","spacing","box","flexGrow","display","justifyContent","ActionHeader","useContext","ActionChecklistContext","hideCompleted","dispatch","Box","className","FormControlLabel","control","Checkbox","checked","onChange","event","type","ActionChecklistActionTypes","ChangeHideCompleted","payload","target","name","label","useActionContainerStyles","dropdownBody","paddingRight","paddingLeft","useActionsStyles","actionsWrapper","marginTop","alignItems","breakpoints","down","flexDirection","saveIndicator","userSelect","up","marginLeft","useActionItemStyles","gridRoot","margin","width","background","paddingTop","paddingBottom","hide","height","palette","grey","textfield","actions","dragIcon","cursor","completedText","padding","lineHeight","textDecoration","datepicker","useActionNotesStyles","gridActions","Actions","addNewAction","disabled","saving","lastSaved","Button","variant","startIcon","onClick","Typography","ActionItem","index","draggableId","data","deleteAction","lastItemInList","globalHide","useState","cacheDescription","setCacheDescription","dialogueOpen","setDialogueOpen","datepickerOpen","setDatepickerOpen","triggerDispatch","newData","UpdateActionItem","onDialogueClose","onDialogueConfirm","Date","onDescriptionChange","e","onDescriptionBlur","handleDateChange","date","canComplete","handleCheckboxChange","handleDelete","preventDefault","provided","draggableProps","ref","innerRef","Grid","container","item","xs","sm","md","Tooltip","inputProps","indeterminate","TextField","onBlur","utils","DateFnsUtils","disableToolbar","inputVariant","KeyboardButtonProps","open","onOpen","onClose","fullWidth","IconButton","ConfirmDialogue","onCancel","onConfirm","dragHandleProps","ActionNotes","currentClient","setContent","handleContentBlur","UpdateNotes","ActionNotesUseCase","update","addNotesToContainer","newNotesItem","create","AddNotes","removeNote","RemoveNote","delete","multiline","rows","actionItemKeyTitleMapping","key","lastInArray","arraySwap","source","destination","replace","copy","splice","ActionContainer","identfier","generateKey","setSaving","shouldSave","setShouldSave","setLastSaved","useEffect","setInterval","ActionChecklistUseCase","findByClientAndContainer","DB","ActionPriorityUseCase","PRIOR","isEqual","bulkUpdate","clearInterval","identifier","newActionItem","newChecklistItem","dbKey","AddNewActionItem","checklist","RemoveActionItem","targetId","priorityId","mapThroughPriorityOrder","findObjectIndexByValue","constructKey","checklistItem","ExpandableNav","onDragEnd","results","droppableId","UpdatePriorityOrder","droppableProps","placeholder","indexOf","React","memo","ActionItemMapping","cashInActions","cashOutActions","planningBusiness","recordKeeping","funding","managing","planningCommitments","tracking","transition","ActionChecklistMachine","Machine","initial","states","loading","on","HAS_CONTENT","ActionChecklistTips","useSharedTipStyling","List","list","component","ActionChecklist","useMachine","state","send","databaseSyced","ClientContext","printPDF","clientId","findByClient","pdfChecklists","pdfNotes","pdfPriority","ActionChecklistPDF","pdf","servePDF","role","SectionTitle","Spacer","Divider","filterByActionContainer","Loading","FourQuestions","disablePadding","ListItem","button","ListItemIcon","ListItemText","PageTip","tip","listStyle","usePageTipStyles","position","left","bottom","icon","marginRight","drawer","maxWidth","closeBox","borderBottom","borderBottomColor","borderBottomStyle","drawerOpen","setDrawerOpen","toggleDrawer","KeyboardEvent","Fab","Drawer","anchor","classes","paper","createElement","useSTStyles","fontWeight","typography","h5","children","props","addPadding","columns","pageSize","pageMargins","footer","frameContent","inner","table","widths","body","layout","browser","detect","download","answerText","answers","getOptionByAnswer","answerTheming","questions","options","useFourQsStyles","getIcon","answer","opt","Icon","reactourLabel","fourQuestionsContent","listItem","listItemFirst","listItemText","answerIconRoot"],"mappings":"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","file":"static/js/19.5c7d87ae.chunk.js","sourcesContent":["/* eslint-disable */\nimport pdfMake, { TCreatedPdf } from \"pdfmake/build/pdfmake\"\nimport pdfFonts from \"pdfmake/build/vfs_fonts\"\nimport { format } from \"date-fns\"\nimport { lightBlue } from \"@material-ui/core/colors\"\nimport {\n\tpageHeading,\n\tpagePadding,\n\tpageDefaultSettings,\n\tbasicTable,\n} from \"./PDFLib\"\nimport {\n\tActionChecklistStruct,\n\tActionChecklistNotesStruct,\n\tClientId,\n\tActionChecklistPriorityStruct,\n} from \"../../data/_config/shape\"\nimport { actionTitleMapping } from \"../ActionChecklist/ActionContainer/_config/data\"\nimport { PossibleActionItems } from \"../../state/action-checklist/shape\"\nimport ActionChecklistUseCase from \"../../data/ActionChecklist/ChecklistLogic\"\nimport ActionNotesUseCase from \"../../data/ActionChecklist/NotesLogic\"\nimport ActionPriorityUseCase from \"../../data/ActionChecklist/PriorityLogic\"\n\npdfMake.vfs = pdfFonts.pdfMake.vfs\n\nconst itemsSection = (items: ActionChecklistStruct[]) => {\n\tif (items.length === 0) {\n\t\treturn {\n\t\t\ttext: \"No action items\",\n\t\t\tstyle: \"noResult\",\n\t\t}\n\t}\n\n\treturn basicTable(\n\t\titems.map(({ description, reviewBy, completed }) => [\n\t\t\t{\n\t\t\t\ttext: description || \"No description provided\",\n\t\t\t\tstyle: [\n\t\t\t\t\tdescription === \"\" ? \"noResult\" : \"\",\n\t\t\t\t\tcompleted ? \"completed\" : \"\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: format(reviewBy, \"dd/MM/yyyy\"),\n\t\t\t\tstyle: [completed ? \"completed\" : \"\"],\n\t\t\t},\n\t\t])\n\t)\n}\n\nexport default async (\n\ttitle: string,\n\tchecklistCollection: ActionChecklistStruct[],\n\tnotes: ActionChecklistNotesStruct[],\n\tpriority: ActionChecklistPriorityStruct[]\n): Promise<TCreatedPdf> => {\n\tconst docDefinition: any = {\n\t\t...pageDefaultSettings(),\n\n\t\tcontent: [\n\t\t\tpageHeading(`${title} - Action Checklist`),\n\t\t\tpagePadding([\n\t\t\t\t...(Object.keys(actionTitleMapping) as PossibleActionItems[]).map(\n\t\t\t\t\t(value, idx) => {\n\t\t\t\t\t\tconst arr = []\n\t\t\t\t\t\tconst items = checklistCollection.filter(\n\t\t\t\t\t\t\t(i) => i.actionContainer === value\n\t\t\t\t\t\t)\n\n\t\t\t\t\t\tconst note = notes.filter((i) => i.actionContainer === value)\n\t\t\t\t\t\tconst prior = priority.filter((i) => i.actionContainer === value)\n\n\t\t\t\t\t\tif (items.length === 0 || prior.length < 1) return \"\"\n\n\t\t\t\t\t\tconst sortedItems = prior[0].order\n\t\t\t\t\t\t\t.map((p) => {\n\t\t\t\t\t\t\t\tconst idx = items.findIndex((x) => x?.id === p)\n\t\t\t\t\t\t\t\treturn items[idx]\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.filter((v) => typeof v !== \"undefined\")\n\n\t\t\t\t\t\tif (idx !== 0) arr.push(\" \")\n\t\t\t\t\t\tarr.push({ text: actionTitleMapping[value], style: \"heading\" })\n\t\t\t\t\t\tarr.push(itemsSection(sortedItems))\n\t\t\t\t\t\tif (note.length > 0 && note[0].notes !== \"\") {\n\t\t\t\t\t\t\tarr.push(\" \")\n\t\t\t\t\t\t\tarr.push({ text: \"Notes\", style: \"subHeading\" })\n\t\t\t\t\t\t\tarr.push(note[0].notes)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn arr\n\t\t\t\t\t}\n\t\t\t\t),\n\t\t\t]),\n\t\t],\n\n\t\tstyles: {\n\t\t\tpageHeader: {\n\t\t\t\tfontSize: 20,\n\t\t\t\tbold: true,\n\t\t\t\tfillColor: lightBlue[\"800\"],\n\t\t\t\tcolor: \"white\",\n\t\t\t\talignment: \"center\",\n\t\t\t},\n\t\t\theading: {\n\t\t\t\tfontSize: 16,\n\t\t\t\tbold: true,\n\t\t\t},\n\t\t\tsubHeading: {\n\t\t\t\tfontSize: 14,\n\t\t\t\tbold: true,\n\t\t\t},\n\t\t\trightAlign: {\n\t\t\t\talignment: \"right\",\n\t\t\t},\n\t\t\tnoResult: {\n\t\t\t\titalics: true,\n\t\t\t\tcolor: \"#333\",\n\t\t\t},\n\t\t\tcompleted: {\n\t\t\t\tdecoration: \"lineThrough\",\n\t\t\t},\n\t\t},\n\n\t\tdefaultStyle: {\n\t\t\tfontSize: 15,\n\t\t\tbold: false,\n\t\t},\n\t}\n\treturn pdfMake.createPdf(docDefinition)\n}\n","import { makeStyles } from \"@material-ui/core\"\n\n// Styles definition for the Action Header components\nconst useActionHeaderStyles = makeStyles((theme) => ({\n\troot: {\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\tbox: {\n\t\tflexGrow: 2,\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"flex-end\",\n\t},\n}))\n\nexport default useActionHeaderStyles\n","import React, { ReactElement, useContext } from \"react\"\nimport { FormControlLabel, Checkbox, Box } from \"@material-ui/core\"\nimport useActionHeaderStyles from \"./_config/style\"\nimport { ActionChecklistContext } from \"../../../state/action-checklist\"\nimport { ActionChecklistActionTypes } from \"../../../state/action-checklist/shape\"\n\n/**\n * Header component for the Action Checklist page\n *\n * @returns ReactElement\n */\nconst ActionHeader = (): ReactElement => {\n\tconst styles = useActionHeaderStyles()\n\tconst { hideCompleted, dispatch } = useContext(ActionChecklistContext)\n\n\t/**\n\t * Change the state of the \"hide all completed\"\n\t * checkbox\n\t *\n\t * @param {React.ChangeEvent<HTMLInputElement>} event\n\t * @returns void\n\t */\n\tconst handleHideChange = (\n\t\tevent: React.ChangeEvent<HTMLInputElement>\n\t): void => {\n\t\tdispatch({\n\t\t\ttype: ActionChecklistActionTypes.ChangeHideCompleted,\n\t\t\tpayload: event.target.checked,\n\t\t})\n\t}\n\n\treturn (\n\t\t<Box className={styles.root}>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tchecked={hideCompleted}\n\t\t\t\t\t\tonChange={handleHideChange}\n\t\t\t\t\t\tname=\"hide-items\"\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"Hide completed actions\"\n\t\t\t/>\n\t\t</Box>\n\t)\n}\n\nexport default ActionHeader\n","import { makeStyles } from \"@material-ui/core\"\n\n// style definition for action container component\nexport const useActionContainerStyles = makeStyles((theme) => ({\n\tdropdownBody: {\n\t\tpaddingRight: theme.spacing(2),\n\t\tpaddingLeft: theme.spacing(2),\n\t},\n}))\n\n// style definition for action styles component\nexport const useActionsStyles = makeStyles((theme) => ({\n\tactionsWrapper: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"flex-start\",\n\t\tmarginTop: theme.spacing(3),\n\t\talignItems: \"center\",\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tflexDirection: \"column\",\n\t\t\talignItems: \"flex-start\",\n\t\t\tmarginTop: theme.spacing(2),\n\t\t},\n\t},\n\tsaveIndicator: {\n\t\tuserSelect: \"none\",\n\t\t[theme.breakpoints.up(\"sm\")]: {\n\t\t\tmarginLeft: theme.spacing(2),\n\t\t},\n\t},\n}))\n\n// style definition for action item component\nexport const useActionItemStyles = makeStyles((theme) => ({\n\tgridRoot: {\n\t\talignItems: \"center\",\n\t\tmargin: 0,\n\t\twidth: \"100%\",\n\t\tbackground: \"white\",\n\t\t\"& > .MuiGrid-item\": {\n\t\t\tpaddingTop: theme.spacing(1),\n\t\t\tpaddingBottom: theme.spacing(1),\n\t\t},\n\t},\n\thide: {\n\t\theight: \"10px\",\n\t\tbackground: theme.palette.grey[200],\n\t\tmarginTop: theme.spacing(1),\n\t\tmarginBottom: theme.spacing(1),\n\t\t\"& > *\": {\n\t\t\tdisplay: \"none !important\",\n\t\t},\n\t},\n\ttextfield: {\n\t\twidth: \"100%\",\n\t},\n\tactions: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"flex-end\",\n\t},\n\tdragIcon: {\n\t\tcursor: \"move\",\n\t},\n\tcompletedText: {\n\t\tpadding: \"18.5px 14px\",\n\t\tlineHeight: \"1.1876em\",\n\t\ttextDecoration: \"line-through\",\n\t},\n\tdatepicker: {\n\t\tmargin: 0,\n\t},\n}))\n\nexport const useActionNotesStyles = makeStyles((theme) => ({\n\tbox: {\n\t\tmarginTop: theme.spacing(3),\n\t},\n\ttextfield: {\n\t\twidth: \"100%\",\n\t},\n\tgridRoot: {\n\t\talignItems: \"center\",\n\t},\n\tgridActions: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"flex-end\",\n\t},\n}))\n","import React, { ReactElement } from \"react\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport { Box, Button, Typography } from \"@material-ui/core\"\nimport { format } from \"date-fns\"\nimport { useActionsStyles } from \"../_config/styles\"\nimport { IActionsProps } from \"../_config/shape\"\n\n/**\n * Component to display all the actions for a\n * action container\n *\n * @param {IActionsProps} props\n * @returns ReactElement\n */\nconst Actions = ({\n\taddNewAction,\n\tdisabled,\n\tsaving,\n\tlastSaved,\n}: IActionsProps): ReactElement => {\n\tconst styles = useActionsStyles()\n\n\treturn (\n\t\t<Box className={styles.actionsWrapper}>\n\t\t\t<Button\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tstartIcon={<AddIcon />}\n\t\t\t\tonClick={addNewAction}\n\t\t\t\tdisabled={disabled}\n\t\t\t>\n\t\t\t\tAdd action\n\t\t\t</Button>\n\t\t\t<Typography\n\t\t\t\tvariant=\"overline\"\n\t\t\t\tcolor=\"textSecondary\"\n\t\t\t\tclassName={styles.saveIndicator}\n\t\t\t>\n\t\t\t\t{saving ? \"Saving...\" : `Saved at ${format(lastSaved, \"H:mm:ss a\")}`}\n\t\t\t</Typography>\n\t\t</Box>\n\t)\n}\n\nexport default Actions\n","import React, {\n\tReactElement,\n\tChangeEvent,\n\tFocusEvent,\n\tuseState,\n\tMouseEvent,\n} from \"react\"\nimport {\n\tGrid,\n\tCheckbox,\n\tTextField,\n\tIconButton,\n\tTooltip,\n\tTypography,\n} from \"@material-ui/core\"\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport { Draggable } from \"react-beautiful-dnd\"\nimport {\n\tMuiPickersUtilsProvider,\n\tKeyboardDatePicker,\n} from \"@material-ui/pickers\"\nimport DateFnsUtils from \"@date-io/date-fns\"\nimport { format } from \"date-fns\"\nimport { useActionItemStyles } from \"../_config/styles\"\nimport { IActionItemProps } from \"../_config/shape\"\nimport { ActionChecklistActionTypes } from \"../../../../state/action-checklist/shape\"\nimport { BaseActionChecklistStruct } from \"../../../../data/_config/shape\"\nimport ConfirmDialogue from \"../../../ConfirmDialogue\"\n\n/**\n * Component used to render a single action item\n *\n * @param {IActionItemProps} props\n * @returns ReactElement\n */\nconst ActionItem = ({\n\tindex,\n\tdraggableId,\n\tdata,\n\tdispatch,\n\tdeleteAction,\n\tlastItemInList,\n\tglobalHide,\n}: IActionItemProps): ReactElement => {\n\tconst styles = useActionItemStyles()\n\tconst [cacheDescription, setCacheDescription] = useState<string>(\n\t\tdata.description\n\t)\n\tconst [dialogueOpen, setDialogueOpen] = useState<boolean>(false)\n\tconst [datepickerOpen, setDatepickerOpen] = useState(false)\n\n\t/**\n\t * Triggers a update action to change the state\n\t *\n\t * @param {BaseActionChecklistStruct} newData Updated data\n\t * @returns void\n\t */\n\tconst triggerDispatch = (newData: BaseActionChecklistStruct): void => {\n\t\tif (data?.id) {\n\t\t\tdispatch({\n\t\t\t\ttype: ActionChecklistActionTypes.UpdateActionItem,\n\t\t\t\tpayload: {\n\t\t\t\t\tid: data.id,\n\t\t\t\t\tdata: newData,\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Closes the confirmation dialogue\n\t *\n\t * @returns void\n\t */\n\tconst onDialogueClose = (): void => {\n\t\tsetDialogueOpen(false)\n\t}\n\n\t/**\n\t * Triggers the delete method if the dialogue is confirmed\n\t *\n\t * @returns void\n\t */\n\tconst onDialogueConfirm = (): void => {\n\t\tif (!lastItemInList) {\n\t\t\t// Deletes the item from the db & state\n\t\t\tdeleteAction(data.id || \"\")\n\t\t} else {\n\t\t\t// Reset the last item\n\t\t\tsetCacheDescription(\"\")\n\t\t\ttriggerDispatch({\n\t\t\t\t...data,\n\t\t\t\tdescription: \"\",\n\t\t\t\tcompleted: false,\n\t\t\t\treviewBy: new Date(),\n\t\t\t})\n\t\t}\n\t\tsetDialogueOpen(false)\n\t}\n\n\t/**\n\t * Changes the state for the description value\n\t *\n\t * @param {ChangeEvent<HTMLInputElement>} e\n\t */\n\tconst onDescriptionChange = (e: ChangeEvent<HTMLInputElement>): void => {\n\t\tsetCacheDescription(e.target.value)\n\t}\n\n\t/**\n\t * When focusing OFF the description field,\n\t * update the state. This prevents a delay in input\n\t *\n\t * @async\n\t * @param {FocusEvent<HTMLInputElement>} e\n\t * @returns Promise<void>\n\t */\n\tconst onDescriptionBlur = async (\n\t\te: FocusEvent<HTMLInputElement>\n\t): Promise<void> => {\n\t\tif (data.description !== cacheDescription) {\n\t\t\ttriggerDispatch({\n\t\t\t\t...data,\n\t\t\t\tdescription: cacheDescription,\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Change the state of the \"Review by\" date\n\t *\n\t * @param {Date|null} date\n\t * @returns void\n\t */\n\tconst handleDateChange = (date: Date | null): void => {\n\t\tif (date) {\n\t\t\ttriggerDispatch({\n\t\t\t\t...data,\n\t\t\t\treviewBy: date,\n\t\t\t})\n\t\t\tsetDatepickerOpen(false)\n\t\t}\n\t}\n\n\t/**\n\t * Check to see if item can be completed\n\t *\n\t * @returns boolean\n\t */\n\tconst canComplete = (): boolean => cacheDescription !== \"\"\n\n\t/**\n\t * Handles the change event when completing a action\n\t *\n\t * @param {ChangeEvent<HTMLInputElement>} e\n\t * @returns void\n\t */\n\tconst handleCheckboxChange = (e: ChangeEvent<HTMLInputElement>): void => {\n\t\ttriggerDispatch({\n\t\t\t...data,\n\t\t\tcompleted: e.target.checked,\n\t\t})\n\t}\n\n\t/**\n\t * Method to handle the action triggered when clicking\n\t * on the delete icon\n\t *\n\t * @param {MouseEvent<HTMLButtonElement>} e\n\t * @returns void\n\t */\n\tconst handleDelete = (e: MouseEvent<HTMLButtonElement>): void => {\n\t\te.preventDefault()\n\t\tsetDialogueOpen(true)\n\t}\n\n\treturn (\n\t\t<Draggable draggableId={`${draggableId}`} index={index}>\n\t\t\t{(provided): ReactElement => (\n\t\t\t\t<div\n\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\tclassName=\"action-item\"\n\t\t\t\t>\n\t\t\t\t\t<Grid\n\t\t\t\t\t\tcontainer\n\t\t\t\t\t\tspacing={2}\n\t\t\t\t\t\tclassName={`${styles.gridRoot} ${\n\t\t\t\t\t\t\tglobalHide && data.completed ? styles.hide : \"\"\n\t\t\t\t\t\t}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* TODO: Split some of these into other partials */}\n\t\t\t\t\t\t<Grid item xs={2} sm={1} md={1}>\n\t\t\t\t\t\t\t<Tooltip title=\"Mark as done\">\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tchecked={data.completed}\n\t\t\t\t\t\t\t\t\tinputProps={{ \"aria-label\": \"completed checkbox\" }}\n\t\t\t\t\t\t\t\t\tid={`action-complete--${data?.id}`}\n\t\t\t\t\t\t\t\t\tonChange={handleCheckboxChange}\n\t\t\t\t\t\t\t\t\tdisabled={!canComplete()}\n\t\t\t\t\t\t\t\t\tindeterminate={!canComplete()}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={10} sm={5} md={6}>\n\t\t\t\t\t\t\t{data.completed ? (\n\t\t\t\t\t\t\t\t<Typography className={styles.completedText}>\n\t\t\t\t\t\t\t\t\t{data.description}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tclassName={styles.textfield}\n\t\t\t\t\t\t\t\t\tid={`action-description--${data?.id}`}\n\t\t\t\t\t\t\t\t\tlabel=\"Action item\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tvalue={cacheDescription}\n\t\t\t\t\t\t\t\t\tonChange={onDescriptionChange}\n\t\t\t\t\t\t\t\t\tonBlur={onDescriptionBlur}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12} sm={4} md={3}>\n\t\t\t\t\t\t\t{data.completed ? (\n\t\t\t\t\t\t\t\t<Typography className={styles.completedText}>\n\t\t\t\t\t\t\t\t\t{format(data.reviewBy, \"dd/MM/yyyy\")}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n\t\t\t\t\t\t\t\t\t<KeyboardDatePicker\n\t\t\t\t\t\t\t\t\t\tdisableToolbar\n\t\t\t\t\t\t\t\t\t\tvariant=\"inline\"\n\t\t\t\t\t\t\t\t\t\tinputVariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tformat=\"dd/MM/yyyy\"\n\t\t\t\t\t\t\t\t\t\tid={`action-reviewby--${data?.id}`}\n\t\t\t\t\t\t\t\t\t\tlabel=\"Review by\"\n\t\t\t\t\t\t\t\t\t\tvalue={data.reviewBy}\n\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange}\n\t\t\t\t\t\t\t\t\t\tKeyboardButtonProps={{\n\t\t\t\t\t\t\t\t\t\t\t\"aria-label\": \"change date\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tclassName={styles.datepicker}\n\t\t\t\t\t\t\t\t\t\topen={datepickerOpen}\n\t\t\t\t\t\t\t\t\t\tonOpen={(): void => setDatepickerOpen(true)}\n\t\t\t\t\t\t\t\t\t\tonClose={(): void => setDatepickerOpen(false)}\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</MuiPickersUtilsProvider>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12} sm={2} md={2} className={styles.actions}>\n\t\t\t\t\t\t\t<Tooltip title=\"Delete\">\n\t\t\t\t\t\t\t\t<IconButton onClick={handleDelete}>\n\t\t\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t\t\t\t<span className=\"MuiTypography-srOnly\">Delete item</span>\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t<ConfirmDialogue\n\t\t\t\t\t\t\t\topen={dialogueOpen}\n\t\t\t\t\t\t\t\tonClose={onDialogueClose}\n\t\t\t\t\t\t\t\tonCancel={onDialogueClose}\n\t\t\t\t\t\t\t\tonConfirm={onDialogueConfirm}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tAre you sure you want to remove this item?\n\t\t\t\t\t\t\t</ConfirmDialogue>\n\t\t\t\t\t\t\t<Tooltip title=\"Reposition\">\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tclassName={styles.dragIcon}\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<DragIndicatorIcon />\n\t\t\t\t\t\t\t\t\t<span className=\"MuiTypography-srOnly\">Reorder priority</span>\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Draggable>\n\t)\n}\n\nexport default ActionItem\n","import React, { ReactElement, useState, ChangeEvent, MouseEvent } from \"react\"\nimport {\n\tTextField,\n\tBox,\n\tButton,\n\tIconButton,\n\tGrid,\n\tTooltip,\n} from \"@material-ui/core\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport { useActionNotesStyles } from \"../_config/styles\"\nimport { IActionNotesProps } from \"../_config/shape\"\nimport ActionNotesUseCase from \"../../../../data/ActionChecklist/NotesLogic\"\nimport { newNotesItem } from \"../../../../data/ActionChecklist/_config/utilities\"\nimport { ActionChecklistActionTypes } from \"../../../../state/action-checklist/shape\"\n\nconst ActionNotes = ({\n\tcurrentClient,\n\tcontainer,\n\tnote,\n\tdispatch,\n}: IActionNotesProps): ReactElement => {\n\tconst styles = useActionNotesStyles()\n\tconst [content, setContent] = useState<string>(note?.notes || \"\")\n\n\tconst handleContentChange = (e: ChangeEvent<HTMLInputElement>): void => {\n\t\tsetContent(e.target.value)\n\t}\n\n\tconst handleContentBlur = async (): Promise<void> => {\n\t\tif (note?.id && note.notes !== content) {\n\t\t\tconst newData = {\n\t\t\t\t...note,\n\t\t\t\tnotes: content,\n\t\t\t}\n\t\t\tdispatch({\n\t\t\t\ttype: ActionChecklistActionTypes.UpdateNotes,\n\t\t\t\tpayload: {\n\t\t\t\t\tid: note.id,\n\t\t\t\t\tdata: newData,\n\t\t\t\t},\n\t\t\t})\n\t\t\tawait ActionNotesUseCase.update(note.id, newData)\n\t\t}\n\t}\n\n\tconst addNotesToContainer = async (\n\t\te: MouseEvent<HTMLButtonElement>\n\t): Promise<void> => {\n\t\te.preventDefault()\n\t\tconst item = newNotesItem(currentClient, container)\n\t\tconst id = await ActionNotesUseCase.create(item)\n\t\tdispatch({\n\t\t\ttype: ActionChecklistActionTypes.AddNotes,\n\t\t\tpayload: {\n\t\t\t\tid,\n\t\t\t\t...item,\n\t\t\t},\n\t\t})\n\t}\n\n\tconst removeNote = async (\n\t\te: MouseEvent<HTMLButtonElement>\n\t): Promise<void> => {\n\t\te.preventDefault()\n\t\tif (note?.id) {\n\t\t\tdispatch({\n\t\t\t\ttype: ActionChecklistActionTypes.RemoveNote,\n\t\t\t\tpayload: note.id,\n\t\t\t})\n\t\t\tawait ActionNotesUseCase.delete(note.id)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Box className={styles.box}>\n\t\t\t{note ? (\n\t\t\t\t<Grid container className={styles.gridRoot}>\n\t\t\t\t\t<Grid item xs={10}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tclassName={styles.textfield}\n\t\t\t\t\t\t\tlabel=\"Notes\"\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\trows={3}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tvalue={content}\n\t\t\t\t\t\t\tonChange={handleContentChange}\n\t\t\t\t\t\t\tonBlur={handleContentBlur}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={2} className={styles.gridActions}>\n\t\t\t\t\t\t<Tooltip title=\"Delete note\">\n\t\t\t\t\t\t\t<IconButton onClick={removeNote}>\n\t\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t\t\t<span className=\"MuiTypography-srOnly\">Delete note</span>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t) : (\n\t\t\t\t<Button startIcon={<AddIcon />} onClick={addNotesToContainer}>\n\t\t\t\t\tAdd notes\n\t\t\t\t</Button>\n\t\t\t)}\n\t\t</Box>\n\t)\n}\n\nexport default ActionNotes\n","/* eslint-disable import/prefer-default-export */\nimport { PossibleActionItems } from \"../../../../state/action-checklist/shape\"\nimport { actionTitleMapping } from \"./data\"\n\n/**\n * Gets the title for the current Action container\n *\n * @param {PossibleActionItems} key\n * @returns string\n */\nexport const actionItemKeyTitleMapping = (key: PossibleActionItems): string =>\n\tactionTitleMapping[key]\n\n/**\n * Get a list of identifiers that are \"static\",\n * ie they should always be showen\n *\n * @returns PossibleActionItems[]\n */\nexport const staticIdentifier = (): PossibleActionItems[] => [\n\t\"cashInActions\",\n\t\"cashOutActions\",\n]\n\n/**\n * Checks if the container is not cashInActions OR cashOutActions\n *\n * @param {PossibleActionItems} identifier\n * @returns boolean\n */\nexport const allowNotes = (identifier: PossibleActionItems): boolean =>\n\tstaticIdentifier().indexOf(identifier) === -1\n","/**\n * Returns the last items in an array\n *\n * @param {any[]} arr\n * @returns {any}\n */\nconst lastInArray = (arr: any[]): any => arr[arr.length - 1] // eslint-disable-line\nexport default lastInArray\n","/**\n * Swaps a items in an array\n *\n * @param {T[]} arr\n * @param {number} source\n * @param {number} destination\n * @param {T} replace\n * @returns {T[]}\n */\n\n/* eslint-disable fp/no-mutating-methods */\n\nconst arraySwap = <T>(\n\tarr: T[],\n\tsource: number,\n\tdestination: number,\n\treplace: T\n): T[] => {\n\tconst copy = [...arr]\n\tcopy.splice(source, 1)\n\tcopy.splice(destination, 0, replace)\n\n\treturn copy\n}\n\nexport default arraySwap\n","import React, {\n\tReactElement,\n\tMouseEvent,\n\tuseContext,\n\tuseState,\n\tFragment,\n\tuseEffect,\n} from \"react\"\nimport { Box } from \"@material-ui/core\"\nimport { DragDropContext, Droppable, DropResult } from \"react-beautiful-dnd\"\nimport { isEqual } from \"lodash-es\"\nimport ExpandableNav from \"../../ExpandableNav\"\nimport { IActionContainerProps } from \"./_config/shape\"\nimport { useActionContainerStyles } from \"./_config/styles\"\nimport { Actions, ActionItem, ActionNotes } from \"./_partials\"\nimport { actionItemKeyTitleMapping, allowNotes } from \"./_config/utilities\"\nimport { ActionChecklistContext } from \"../../../state/action-checklist\"\nimport { ActionChecklistActionTypes } from \"../../../state/action-checklist/shape\"\nimport lastInArray from \"../../../util/array/lastInArray\"\nimport { generateKey, constructKey } from \"../../../util/lists/key\"\nimport {\n\tActionChecklistId,\n\tActionChecklistStruct,\n} from \"../../../data/_config/shape\"\nimport findObjectIndexByValue from \"../../../util/array/findObjectIndexByValue\"\nimport ActionChecklistUseCase from \"../../../data/ActionChecklist/ChecklistLogic\"\nimport ActionPriorityUseCase from \"../../../data/ActionChecklist/PriorityLogic\"\nimport arraySwap from \"../../../util/array/arraySwap\"\nimport { newChecklistItem } from \"../../../data/ActionChecklist/_config/utilities\"\n\n/**\n * A single Action items wrapper\n *\n * @param {PossibleActionItems} {identfier}\n * @param {ISingleActionItem} {data}\n * @returns ReactElement\n */\nconst ActionContainer = ({\n\tidentfier,\n\tdata,\n\tpriority,\n\tnotes,\n\tcurrentClient,\n}: IActionContainerProps): ReactElement => {\n\t// #region Component functionality\n\tconst styles = useActionContainerStyles()\n\tconst { dispatch, hideCompleted } = useContext(ActionChecklistContext)\n\tconst [key] = useState(generateKey())\n\tconst [saving, setSaving] = useState<boolean>(false)\n\tconst [shouldSave, setShouldSave] = useState<boolean>(true)\n\tconst [lastSaved, setLastSaved] = useState<Date>(new Date())\n\n\tuseEffect(() => {\n\t\t// Run every 1.5s\n\t\tconst id = setInterval(async () => {\n\t\t\tif (!shouldSave) return\n\t\t\t// Get the database data for this container\n\t\t\tconst DB = await ActionChecklistUseCase.findByClientAndContainer(\n\t\t\t\tidentfier,\n\t\t\t\tcurrentClient\n\t\t\t)\n\t\t\tconst PRIOR = await ActionPriorityUseCase.findByClientAndContainer(\n\t\t\t\tidentfier,\n\t\t\t\tcurrentClient\n\t\t\t)\n\n\t\t\t// If it is out of sync with the state\n\t\t\tif (!isEqual(DB, data) || !isEqual(PRIOR[0], priority)) {\n\t\t\t\t// Bulk update the database to insync with the state\n\t\t\t\tsetSaving(true)\n\t\t\t\tawait ActionChecklistUseCase.bulkUpdate(data)\n\t\t\t\tif (priority?.id) {\n\t\t\t\t\tawait ActionPriorityUseCase.update(priority.id, priority)\n\t\t\t\t}\n\t\t\t\tsetLastSaved(new Date())\n\t\t\t\tsetSaving(false)\n\t\t\t}\n\t\t}, 2000)\n\n\t\treturn (): void => clearInterval(id)\n\t}, [data, identfier, priority, currentClient, shouldSave])\n\n\t/**\n\t * Event that triggers once a item is dropped\n\t *\n\t * @param {DropResult} results\n\t * @returns void\n\t */\n\tconst onDragEnd = (results: DropResult): void => {\n\t\tconst { destination, source, draggableId } = results\n\n\t\tif (\n\t\t\t!destination ||\n\t\t\t(destination.droppableId === source.droppableId &&\n\t\t\t\tdestination.index === source.index)\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\tconst order = arraySwap<string>(\n\t\t\tpriority.order,\n\t\t\tsource.index,\n\t\t\tdestination.index,\n\t\t\tdraggableId\n\t\t)\n\n\t\tdispatch({\n\t\t\ttype: ActionChecklistActionTypes.UpdatePriorityOrder,\n\t\t\tpayload: {\n\t\t\t\t...priority,\n\t\t\t\torder,\n\t\t\t},\n\t\t})\n\t}\n\n\t/**\n\t * Handles the state change when adding a new action item\n\t *\n\t * @param {MouseEvent<HTMLButtonElement>} e\n\t * @returns void\n\t */\n\tconst addNewAction = async (\n\t\te: MouseEvent<HTMLButtonElement>\n\t): Promise<void> => {\n\t\te.preventDefault()\n\t\tif (currentClient && priority.id) {\n\t\t\tconst newActionItem = newChecklistItem(currentClient, identfier)\n\t\t\t// Adds checklist item to db\n\t\t\tconst dbKey = await ActionChecklistUseCase.create(newActionItem)\n\t\t\t// Updates db item with order\n\t\t\tawait ActionPriorityUseCase.update(priority.id, {\n\t\t\t\t...priority,\n\t\t\t\torder: [...priority.order, dbKey],\n\t\t\t})\n\n\t\t\t// Dispatch the state change\n\t\t\tdispatch({\n\t\t\t\ttype: ActionChecklistActionTypes.AddNewActionItem,\n\t\t\t\tpayload: {\n\t\t\t\t\tchecklist: {\n\t\t\t\t\t\tid: dbKey,\n\t\t\t\t\t\t...newActionItem,\n\t\t\t\t\t},\n\t\t\t\t\tpriority: priority.id,\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Deletes a action from the db and state\n\t *\n\t * @async\n\t * @param {ActionChecklistId} id ID of the checklist to delete\n\t * @returns Promise<void>\n\t */\n\tconst deleteAction = async (id: ActionChecklistId): Promise<void> => {\n\t\tif (priority.id) {\n\t\t\tsetShouldSave(false)\n\t\t\t// remove the checklist item from the db\n\t\t\tawait ActionChecklistUseCase.delete(id)\n\t\t\t// remove the priority item from the db if it is removing the last item\n\t\t\t// in the order\n\t\t\tif (priority.order.length === 1) {\n\t\t\t\tawait ActionPriorityUseCase.delete(priority.id)\n\t\t\t}\n\t\t\t// remove the checklist item from state and priority order\n\t\t\tdispatch({\n\t\t\t\ttype: ActionChecklistActionTypes.RemoveActionItem,\n\t\t\t\tpayload: {\n\t\t\t\t\ttargetId: id,\n\t\t\t\t\tpriorityId: priority.id,\n\t\t\t\t},\n\t\t\t})\n\n\t\t\tsetShouldSave(true)\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the latest item has content before\n\t * letting a user add more actions\n\t *\n\t * @returns boolean\n\t */\n\tconst preventAddingNew = (): boolean => lastInArray(data).description === \"\"\n\n\t/**\n\t * Checks if the item is the last in the list\n\t *\n\t * @returns boolean\n\t */\n\tconst lastItemInList = (): boolean => data.length === 1\n\n\t/**\n\t * Map method to render all the action items\n\t * in priority order\n\t *\n\t * @param {ActionChecklistId} id\n\t * @param {number} idx\n\t * @returns ReactElement\n\t */\n\tconst mapThroughPriorityOrder = (\n\t\tid: ActionChecklistId,\n\t\tidx: number\n\t): ReactElement => {\n\t\tconst index = findObjectIndexByValue(data, \"id\", id)\n\n\t\tif (index === -1) return <Fragment key={constructKey(key, idx)} />\n\n\t\tconst checklistItem: ActionChecklistStruct = data[index]\n\t\tif (checklistItem?.id) {\n\t\t\treturn (\n\t\t\t\t<ActionItem\n\t\t\t\t\tkey={checklistItem?.id}\n\t\t\t\t\tdraggableId={checklistItem?.id}\n\t\t\t\t\tindex={idx}\n\t\t\t\t\tdata={checklistItem}\n\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\tdeleteAction={deleteAction}\n\t\t\t\t\tlastItemInList={lastItemInList()}\n\t\t\t\t\tglobalHide={hideCompleted}\n\t\t\t\t/>\n\t\t\t)\n\t\t}\n\t\treturn <Fragment key={constructKey(key, idx)} />\n\t}\n\n\t// #endregion\n\n\t// #region Component Markup\n\treturn (\n\t\t<ExpandableNav title={actionItemKeyTitleMapping(identfier)}>\n\t\t\t<DragDropContext onDragEnd={onDragEnd}>\n\t\t\t\t<Box className={styles.dropdownBody}>\n\t\t\t\t\t<Droppable droppableId={identfier}>\n\t\t\t\t\t\t{(provided): ReactElement => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t\t\t\t\t{...provided.droppableProps}\n\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{priority.order.map(mapThroughPriorityOrder)}\n\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Droppable>\n\t\t\t\t\t{allowNotes(identfier) && (\n\t\t\t\t\t\t<ActionNotes\n\t\t\t\t\t\t\tcurrentClient={currentClient}\n\t\t\t\t\t\t\tcontainer={identfier}\n\t\t\t\t\t\t\tnote={notes}\n\t\t\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<Actions\n\t\t\t\t\t\taddNewAction={addNewAction}\n\t\t\t\t\t\tdisabled={preventAddingNew()}\n\t\t\t\t\t\tsaving={saving}\n\t\t\t\t\t\tlastSaved={lastSaved}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\t\t\t</DragDropContext>\n\t\t</ExpandableNav>\n\t)\n\t// #endregion\n}\n\nexport default React.memo(ActionContainer)\n","import { PossibleActionItems } from \"../../../state/action-checklist/shape\"\n\n// eslint-disable-next-line import/prefer-default-export\nexport const ActionItemMapping: Record<\n\tPossibleActionItems,\n\tPossibleActionItems\n> = {\n\tcashInActions: \"cashInActions\",\n\tcashOutActions: \"cashOutActions\",\n\tplanningBusiness: \"planningBusiness\",\n\trecordKeeping: \"recordKeeping\",\n\tfunding: \"funding\",\n\tmanaging: \"managing\",\n\tplanningCommitments: \"planningCommitments\",\n\ttracking: \"tracking\",\n\ttransition: \"transition\",\n}\n","import { Machine } from \"xstate\"\n\nexport type StateMap = \"loading\" | \"content\"\n\nexport interface IActionChecklistSchema {\n\tstates: {\n\t\tloading: Record<string, unknown>\n\t\tcontent: Record<string, unknown>\n\t}\n}\n\nexport type ACEvents = { type: \"HAS_CONTENT\" }\n\nexport const ActionChecklistMachine = Machine<\n\tnull,\n\tIActionChecklistSchema,\n\tACEvents\n>({\n\tkey: \"ac_machine\",\n\tinitial: \"loading\",\n\tstates: {\n\t\tloading: {\n\t\t\ton: {\n\t\t\t\tHAS_CONTENT: \"content\",\n\t\t\t},\n\t\t},\n\t\tcontent: {},\n\t},\n})\n","import React, { ReactElement } from \"react\"\nimport { Typography, List } from \"@material-ui/core\"\nimport useSharedTipStyling from \"./style\"\n\n/**\n * Tip displayed on the client listing page\n *\n * @returns ReactElement\n */\nconst ActionChecklistTips = (): ReactElement => {\n\tconst styles = useSharedTipStyling()\n\n\treturn (\n\t\t<>\n\t\t\t<List className={styles.list}>\n\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\tPersonalise actions by adding descriptions\n\t\t\t\t</Typography>\n\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\tSet a review date for all actions\n\t\t\t\t</Typography>\n\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\tDiscuss strategies to complete the actions\n\t\t\t\t</Typography>\n\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\tUse the reorder button to prioritise action items\n\t\t\t\t</Typography>\n\t\t\t</List>\n\t\t\t<Typography variant=\"h6\">Next Steps</Typography>\n\t\t\t<List className={styles.list}>\n\t\t\t\t<Typography component=\"li\">Agree a review date</Typography>\n\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\tTrack goals by updating and checking off actions\n\t\t\t\t</Typography>\n\t\t\t\t<Typography component=\"li\">\n\t\t\t\t\tAfter each review date, revisit Health Check and Actions for new\n\t\t\t\t\tinsights\n\t\t\t\t</Typography>\n\t\t\t</List>\n\t\t</>\n\t)\n}\n\nexport default ActionChecklistTips\n","import React, {\n\tReactElement,\n\tuseContext,\n\tuseState,\n\tFragment,\n\tuseEffect,\n} from \"react\"\nimport {\n\tGrid,\n\tList,\n\tListItem,\n\tListItemText,\n\tListItemIcon,\n\tBox,\n\tTypography,\n\tDivider,\n} from \"@material-ui/core\"\nimport PictureAsPdfIcon from \"@material-ui/icons/PictureAsPdf\"\nimport { useMachine } from \"@xstate/react\"\nimport { PageContainer } from \"../components/Layouts\"\nimport SectionTitle from \"../components/SectionTitle\"\nimport FourQuestions from \"../components/HealthCheck/FourQuestions\"\nimport ExpandableNav from \"../components/ExpandableNav\"\nimport { ActionHeader, ActionContainer } from \"../components/ActionChecklist\"\nimport PageTip from \"../components/PageTip\"\nimport { ActionChecklistContext } from \"../state/action-checklist\"\nimport { generateKey, constructKey } from \"../util/lists/key\"\nimport { PossibleActionItems } from \"../state/action-checklist/shape\"\nimport { ActionItemMapping } from \"../components/ActionChecklist/_config/data\"\nimport { ClientContext } from \"../state/client\"\nimport filterByActionContainer from \"../util/filters/ByActionContainer\"\nimport { ActionChecklistMachine } from \"../data/ActionChecklist/_config/machine\"\nimport Loading from \"../components/Loading\"\nimport Spacer from \"../components/Spacer\"\nimport ActionChecklistPDF from \"../components/PDF/ActionChecklistPDF\"\nimport servePDF from \"../components/PDF/servePDF\"\nimport ActionChecklistUseCase from \"../data/ActionChecklist/ChecklistLogic\"\nimport ActionNotesUseCase from \"../data/ActionChecklist/NotesLogic\"\nimport ActionPriorityUseCase from \"../data/ActionChecklist/PriorityLogic\"\nimport ActionChecklistTips from \"../content/tips/ActionChecklistTips\"\n\n/**\n * Action Checklist page component\n *\n * @returns ReactElement\n */\nconst ActionChecklist = (): ReactElement => {\n\tconst [state, send] = useMachine(ActionChecklistMachine)\n\tconst { checklistCollection, priority, databaseSyced, notes } = useContext(\n\t\tActionChecklistContext\n\t)\n\tconst {\n\t\tstate: { currentClient },\n\t} = useContext(ClientContext)\n\tconst [key] = useState(generateKey())\n\n\tuseEffect(() => {\n\t\tif (currentClient?.id && databaseSyced) {\n\t\t\tsend(\"HAS_CONTENT\")\n\t\t}\n\t}, [currentClient, databaseSyced, send])\n\n\t/**\n\t * Renders all the action containers based on\n\t * current state data\n\t *\n\t * @returns ReactElement[]\n\t */\n\tconst renderActionContainers = (): ReactElement[] =>\n\t\t(Object.keys(ActionItemMapping) as PossibleActionItems[]).map(\n\t\t\t(item, idx) => {\n\t\t\t\tif (currentClient?.id) {\n\t\t\t\t\tconst data = checklistCollection.filter(filterByActionContainer(item))\n\t\t\t\t\tconst prior = priority.filter(filterByActionContainer(item))\n\t\t\t\t\tconst note = notes.filter(filterByActionContainer(item))\n\n\t\t\t\t\tif (data.length > 0 && prior.length > 0) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<ActionContainer\n\t\t\t\t\t\t\t\tkey={constructKey(key, idx)}\n\t\t\t\t\t\t\t\tidentfier={item}\n\t\t\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\t\t\tpriority={prior[0]}\n\t\t\t\t\t\t\t\tnotes={note[0] || null}\n\t\t\t\t\t\t\t\tcurrentClient={currentClient.id}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn <Fragment key={constructKey(key, idx)} />\n\t\t\t}\n\t\t)\n\n\tconst renderActionChecklist = (): ReactElement => {\n\t\tswitch (state.value) {\n\t\t\tcase \"content\":\n\t\t\t\treturn <>{renderActionContainers()}</>\n\t\t\tcase \"loading\":\n\t\t\tdefault:\n\t\t\t\treturn <Loading />\n\t\t}\n\t}\n\n\tconst printPDF = async (): Promise<void> => {\n\t\tif (currentClient?.id) {\n\t\t\tconst clientId = currentClient.id\n\t\t\tconst pdfChecklists = await ActionChecklistUseCase.findByClient(clientId)\n\t\t\tconst pdfNotes = await ActionNotesUseCase.findByClient(clientId)\n\t\t\tconst pdfPriority = await ActionPriorityUseCase.findByClient(clientId)\n\n\t\t\tconst pdf = await ActionChecklistPDF(\n\t\t\t\tcurrentClient?.name ?? \"Client\",\n\t\t\t\tpdfChecklists,\n\t\t\t\tpdfNotes,\n\t\t\t\tpdfPriority\n\t\t\t)\n\t\t\tservePDF(pdf)\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<PageContainer role=\"main\">\n\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t<Grid item xs={12} md={9}>\n\t\t\t\t\t\t<SectionTitle component=\"h1\">Action Checklist</SectionTitle>\n\t\t\t\t\t\t<Box className=\"content-area\">\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tYour checklist has all the actions you selected in previous\n\t\t\t\t\t\t\t\tparts of the Cash Flow Coaching Kit.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tUse the checklist to track, prioritise and review your actions.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t<ActionHeader />\n\t\t\t\t\t\t<Box>{renderActionChecklist()}</Box>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} md={3}>\n\t\t\t\t\t\t<FourQuestions />\n\t\t\t\t\t\t<ExpandableNav>\n\t\t\t\t\t\t\t<List component=\"nav\" disablePadding>\n\t\t\t\t\t\t\t\t<ListItem button>\n\t\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t\t<PictureAsPdfIcon />\n\t\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t\t<ListItemText onClick={printPDF}>Generate PDF</ListItemText>\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t</ExpandableNav>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</PageContainer>\n\n\t\t\t<PageTip tip={ActionChecklistTips} />\n\t\t</>\n\t)\n}\n\nexport default ActionChecklist\n","import { makeStyles } from \"@material-ui/core\"\n\n// Shared styling for the tip components\nconst useSharedTipStyling = makeStyles((theme) => ({\n\tlist: {\n\t\tlistStyle: \"disc\",\n\t\tpaddingLeft: theme.spacing(2),\n\t},\n}))\n\nexport default useSharedTipStyling\n","import { makeStyles } from \"@material-ui/core/styles\"\n\nconst usePageTipStyles = makeStyles((theme) => ({\n\troot: {\n\t\tposition: \"fixed\",\n\t\tleft: theme.spacing(2),\n\t\tbottom: theme.spacing(2),\n\t},\n\ticon: {\n\t\tmarginRight: theme.spacing(1),\n\t},\n\tdrawer: {\n\t\tpadding: theme.spacing(2),\n\t\tmaxWidth: \"350px\",\n\t\twidth: \"100%\",\n\t},\n\tcloseBox: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"space-between\",\n\t\tmarginBottom: theme.spacing(2),\n\t\tpaddingBottom: theme.spacing(2),\n\t\tborderBottom: 1,\n\t\tborderBottomColor: theme.palette.grey[500],\n\t\tborderBottomStyle: \"solid\",\n\t},\n}))\n\nexport default usePageTipStyles\n","import React, { ReactElement, useState, MouseEvent, createElement } from \"react\"\nimport { Fab, Drawer, Button, Box, Typography } from \"@material-ui/core\"\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\"\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\"\nimport usePageTipStyles from \"./_config/style\"\nimport { IPageTip } from \"./_config/shape\"\n\n/**\n * Renders a page tip tooltip at the bottom left of the page\n *\n * @param {string} {tip} File name (no extension) for the tip component\n * @returns ReactElement\n */\nconst PageTip = ({ tip }: IPageTip): ReactElement => {\n\tconst style = usePageTipStyles()\n\tconst [drawerOpen, setDrawerOpen] = useState<boolean>(false)\n\n\t/**\n\t * Toggles the state of the drawer\n\t *\n\t * @param {Boolean} open State to change the drawer to\n\t * @param {KeyboardEvent|MouseEvent<HTMLButtonElement>} event Event generated by a keypress|click\n\t */\n\tconst toggleDrawer =\n\t\t(open: boolean) =>\n\t\t(event: KeyboardEvent | MouseEvent<HTMLButtonElement>): void => {\n\t\t\tif (event instanceof KeyboardEvent) {\n\t\t\t\tif (\n\t\t\t\t\tevent.type === \"keydown\" &&\n\t\t\t\t\t(event.key === \"Tab\" || event.key === \"Shift\")\n\t\t\t\t) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Change the state of the drawer\n\t\t\tsetDrawerOpen(open)\n\t\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className={style.root} role=\"complementary\">\n\t\t\t\t<Fab color=\"secondary\" onClick={toggleDrawer(true)} variant=\"extended\">\n\t\t\t\t\t<HelpOutlineIcon className={style.icon} />\n\t\t\t\t\tTips\n\t\t\t\t</Fab>\n\t\t\t</div>\n\t\t\t<Drawer\n\t\t\t\tanchor=\"left\"\n\t\t\t\topen={drawerOpen}\n\t\t\t\tonClose={toggleDrawer(false)}\n\t\t\t\tclasses={{\n\t\t\t\t\tpaper: style.drawer,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Box className={style.closeBox}>\n\t\t\t\t\t<Typography variant=\"h6\">Tips</Typography>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={toggleDrawer(false)}\n\t\t\t\t\t\tstartIcon={<HighlightOffIcon />}\n\t\t\t\t\t>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</Button>\n\t\t\t\t</Box>\n\n\t\t\t\t{createElement(tip, {})}\n\t\t\t</Drawer>\n\t\t</>\n\t)\n}\n\nexport default PageTip\n","import { makeStyles } from \"@material-ui/core\"\n\n// Section title styles\nconst useSTStyles = makeStyles((theme) => ({\n\ttitle: {\n\t\tfontWeight: 500,\n\t\tmarginBottom: theme.spacing(2),\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tfontSize: theme.typography.h5.fontSize,\n\t\t},\n\t},\n}))\n\nexport default useSTStyles\n","import React, { ReactElement } from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport { SectionTitleProps } from \"./_config/shape\"\nimport useSTStyles from \"./_config/styles\"\n\n/**\n * Abstraction for the Typography for a consistent heading for sections\n *\n * @param {SectionTitleProps} props Mimics the props for `<Typography>`\n * @returns ReactElement\n */\nconst SectionTitle = ({\n\tchildren,\n\tclassName,\n\t// eslint-disable-next-line\n\t...props\n}: SectionTitleProps): ReactElement => {\n\tconst styles = useSTStyles()\n\treturn (\n\t\t<Typography\n\t\t\tvariant=\"h4\"\n\t\t\tcolor=\"textPrimary\"\n\t\t\tclassName={`${styles.title} ${className}`}\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t{...props}\n\t\t>\n\t\t\t{children}\n\t\t</Typography>\n\t)\n}\n\nexport default SectionTitle\n","/**\n * Add Padding\n *\n * add white space around some content\n */\n\nimport { format } from \"date-fns\"\n\nexport const addPadding = (\n\tcontent: any, // eslint-disable-line\n\tmargin = 10\n) => ({\n\tmargin,\n\tcolumns: [content],\n})\n\n/**\n * Page and margin defaults\n */\n\nexport const pageDefaultSettings = () => ({\n\t// watermark: {\n\t// \ttext: \"draft\",\n\t// \tcolor: \"blue\",\n\t// \topacity: 0.3,\n\t// \tbold: true,\n\t// \titalics: false,\n\t// },\n\n\tpageSize: \"A4\",\n\tpageMargins: [0, 0, 0, 25],\n\tfooter: {\n\t\tcolumns: [\n\t\t\t{\n\t\t\t\ttext: `Created on the ${format(new Date(), \"do 'of' MMMM yyyy\")}`,\n\t\t\t\talignment: \"center\",\n\t\t\t\tfontSize: 12,\n\t\t\t\tcolor: \"#333\",\n\t\t\t},\n\t\t],\n\t},\n})\n\n/**\n * Frame Content\n *\n * Put content in a table with a border\n */\n\nexport const frameContent = (\n\tinner: any, // eslint-disable-line\n\tstyle: string[] = []\n) => ({\n\ttable: {\n\t\twidths: [\"*\"], // to make it full length\n\t\tbody: [[inner]],\n\t},\n\tstyle,\n})\n\n/**\n * Table with Text in it for top of page\n * Requires a pageHeader style\n */\n\nexport const pageHeading = (text: string) => {\n\tconst content = frameContent(addPadding(text), [\"pageHeader\"])\n\n\treturn {\n\t\t...content,\n\t\tlayout: \"noBorders\",\n\t}\n}\n\n/**\n * Add 20 points of padding on a full page\n */\n\n// eslint-disable-next-line\nexport const pagePadding = (content: any) => addPadding(content, 20)\n\n/**\n * Basic table of key .... value\n */\n\nexport const basicTable = (\n\titems: any, // eslint-disable-line\n\tstyle: string[] = []\n) => ({\n\ttable: {\n\t\twidths: [\"70%\", \"*\"],\n\t\tbody: items,\n\t},\n\tstyle,\n\tlayout: \"noBorders\",\n})\n","import pdfMake from \"pdfmake/build/pdfmake\"\nimport { detect } from \"detect-browser\"\n\nexport default function servePDF(pdf: pdfMake.TCreatedPdf): void {\n\tconst browser = detect()\n\tif (browser?.name === \"ie\" || browser?.name === \"edge\") {\n\t\tpdf.download()\n\t\treturn\n\t}\n\n\tpdf.open()\n}\n","/* eslint-disable import/prefer-default-export */\n\nimport React, { ReactElement } from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport { QuestionOptions } from \"../../_config/shape\"\nimport { getOptionByAnswer } from \"../../_config/utilities\"\nimport { answerTheming, questions } from \"../../_config/data\"\n\n/**\n * Checks if a question has a answer and displays the answer\n * with a theme\n *\n * @param {number} idx Question index\n * @param {QuestionOptions[]|undefined} answers Answers given in the quiz\n * @returns (boolean | ReactElement)\n */\nexport const answerText = (\n\tidx: number,\n\tanswers: QuestionOptions[] | undefined\n): ReactElement | boolean => {\n\tif (answers && typeof answers[idx] !== \"undefined\") {\n\t\tconst { color } = getOptionByAnswer(answers[idx], answerTheming)\n\t\treturn (\n\t\t\t<Typography style={{ color, fontWeight: 500 }}>\n\t\t\t\t{questions[idx].options[answers[idx]]}\n\t\t\t</Typography>\n\t\t)\n\t}\n\n\treturn false\n}\n","import React, { ReactElement } from \"react\"\nimport { List, ListItem, ListItemText, Box } from \"@material-ui/core\"\nimport { fourQuestionsContent, answerTheming } from \"../_config/data\"\nimport useFourQsStyles from \"./_config/styles\"\nimport { IFourQuestionsProps } from \"./_config/shape\"\nimport { answerText } from \"./_config/utilities\"\nimport ExpandableNav from \"../../ExpandableNav\"\nimport { getOptionByAnswer } from \"../_config/utilities\"\nimport { QuestionOptions } from \"../_config/shape\"\n\n/**\n * Component to render the Four key questions with optional\n * answers, used on the questionnaire summary page\n *\n * @param {QuestionOptions[]} { answers? }\n * @returns ReactElement\n */\nconst FourQuestions = ({ answers }: IFourQuestionsProps): ReactElement => {\n\tconst styles = useFourQsStyles()\n\n\t/**\n\t * Renders the answer related icon next to the question\n\t *\n\t * @param {QuestionOptions} answer\n\t * @returns {ReactElement}\n\t */\n\tconst getIcon = (answer: QuestionOptions): ReactElement => {\n\t\tconst opt = getOptionByAnswer(answer, answerTheming)\n\t\tif (opt) {\n\t\t\treturn <opt.Icon style={{ color: opt.color }} />\n\t\t}\n\n\t\treturn <></>\n\t}\n\n\treturn (\n\t\t<ExpandableNav\n\t\t\ttitle=\"Four Key Questions\"\n\t\t\treactourLabel=\"four-questions-nav\"\n\t\t>\n\t\t\t<Box className={styles.box}>\n\t\t\t\t<List className={styles.list}>\n\t\t\t\t\t{fourQuestionsContent.map(\n\t\t\t\t\t\t(content: string, idx: number): ReactElement => (\n\t\t\t\t\t\t\t<Box key={content} component=\"li\">\n\t\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t\t\t\t\t\tclassName={`${styles.listItem} ${\n\t\t\t\t\t\t\t\t\t\tidx === 0 ? styles.listItemFirst : \"\"\n\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<ListItemText className={styles.listItemText}>\n\t\t\t\t\t\t\t\t\t\t{`${idx + 1}. ${content}`}\n\t\t\t\t\t\t\t\t\t\t<Box className={styles.answerIconRoot}>\n\t\t\t\t\t\t\t\t\t\t\t{answers?.[idx] && getIcon(answers[idx])}\n\t\t\t\t\t\t\t\t\t\t\t{answerText(idx, answers)}\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t</ListItemText>\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t</List>\n\t\t\t</Box>\n\t\t</ExpandableNav>\n\t)\n}\n\nexport default FourQuestions\n","/* eslint-disable import/prefer-default-export */\nimport { PossibleActionItems } from \"../../../../state/action-checklist/shape\"\n\n// Action title mapping object\nexport const actionTitleMapping: Record<PossibleActionItems, string> = {\n\tcashInActions: \"Cash IN actions\",\n\tcashOutActions: \"Cash OUT actions\",\n\tplanningBusiness: \"Planning your business actions\",\n\trecordKeeping: \"Record keeping actions\",\n\tfunding: \"Funding your business actions\",\n\tmanaging: \"Managing your cash flow actions\",\n\tplanningCommitments: \"Planning your regular financial commitments actions\",\n\ttracking: \"Tracking your performance actions\",\n\ttransition: \"Selling, closing and succession planning\",\n}\n"],"sourceRoot":""}