{"version":3,"sources":["components/PDF/HealthCheckPDF.ts","components/PDF/ActionChecklistPDF.ts","components/SessionFiles/CheckboxListItem.tsx","components/SessionFiles/FileListing.tsx","components/SessionFiles/__config/constants.ts","components/SessionFiles/__config/styles.ts","pages/session-files.tsx","components/SessionFiles/__config/utilities.ts","components/SnackbarMsg/SnackbarMsg.tsx","components/IfElseLoading/IfElseLoading.tsx","components/Forms/CFC/initialValues.ts","components/Forms/CFC/calculateInitial.ts","components/SectionTitle/_config/styles.ts","components/SectionTitle/SectionTitle.tsx","components/PDF/PDFLib.ts","util/array/arrayFillWith.ts","data/healthChecks/HealthCheckLogic.ts","state/CFC/createCashFlow.tsx","components/PDF/CashFlowCanvasPDF.ts","components/ActionChecklist/ActionContainer/_config/data.ts"],"names":["pdfMake","vfs","pdfFonts","questionElementTop","question","answer","text","addPadding","style","title","answers","a","docDefinition","pageDefaultSettings","content","pageHeading","pagePadding","table","widths","body","colSpan","styles","pageHeader","fontSize","bold","fillColor","purple","color","alignment","tableHeading","grey","positive","answerTheming","negative","neutral","defaultStyle","createPdf","itemsSection","items","length","basicTable","map","description","reviewBy","completed","format","checklistCollection","notes","priority","Object","keys","actionTitleMapping","value","idx","arr","filter","i","actionContainer","note","prior","sortedItems","order","p","findIndex","x","id","v","push","lightBlue","heading","subHeading","rightAlign","noResult","italics","decoration","React","memo","label","checked","onClick","ListItem","button","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","inputProps","ListItemText","setState","state","data","loading","handleChange","prev","copy","ExpandableNav","IfElseLoading","if","List","component","disablePadding","item","key","name","staticTitles","changeLevers","actionChecklist","discoverTopics","path","useStyles","makeStyles","theme","dropdownWrapper","marginTop","spacing","useSessionStyles","createStyles","backdrop","zIndex","drawer","SessionFiles","classes","cls","useState","healthChecks","cfc","arrayFillWith","selectedFiles","setSelectedFiles","setHealthChecks","setCfc","HCListing","setHCListing","CFCListing","setCFCListing","assetBaseUrl","process","REACT_APP_ASSETS_URL","fetching","setFetching","exporting","setExporting","useCurrentClient","currentClient","synced","open","msg","snackbar","setSnackbar","questionValues","useContext","CFCContext","showSnackbar","severity","fetchData","useCallback","HealthCheckUseCase","findByClient","hcs","CFCUseCase","cfcs","reduce","acc","cur","concat","createdAt","canvasDisplayTitle","useEffect","changeSingleDownload","getStaticPdf","url","fetchPolyfill","method","then","response","arrayBuffer","buffer","fileName","makeStaticPdf","file","encodeURI","pdf","pdfMakeBlobPromise","filename","Promise","resolve","getBlob","b","blob","generateZip","zip","JSZip","CHPDF","ActionChecklistUseCase","checklists","ActionNotesUseCase","ActionPriorityUseCase","pdfPriority","ActionChecklistPDF","ACPDF","DTPromises","val","HCNames","HCPromises","pdfData","questions","forEach","q","options","replace","HealthCheckPDF","CFCNames","CFCPromises","CashFlowCanvasPDF","all","res","names","blobPromises","res1","doc","hasProperty","generateAsync","type","saveAs","catch","Nav","SingleDownloads","Grid","container","xs","md","Box","className","SectionTitle","Typography","Backdrop","CircularProgress","SnackbarMsg","onClose","event","reason","autoHideDuration","anchorOrigin","vertical","horizontal","variant","action","size","aria-label","children","Loading","initialValues","canvasTitle","canvasType","canvasTimeFrame","canvasStartDate","Date","canvasEndDate","openingBalance","paygWithholding","superAmount","incomeTax","cashToOwner","stock","creditors","debtors","assets","loans","cashInItems","createCashFlowItem","cashOutItems","gstOnPurchases","undefined","gstOnSales","calculateInitial","values","isGSTValid","calcCashFlowGST","closingBalance","calcClosingBalance","totalNetAssets","calcTotalNetAssets","cashSurplus","calcCashSurplus","availableToSpend","calcAvailableToSpend","incomeTaxPercentage","calcIncomeTaxPer","useSTStyles","fontWeight","marginBottom","breakpoints","down","typography","h5","props","margin","columns","pageSize","pageMargins","footer","frameContent","inner","layout","len","fill","Array","HealthCheckDB","clientId","this","database","transaction","where","first","equals","toArray","ILogicLayer","amount","gstApplicable","uuidv4","formatDollars","addDollarSign","formatNumber","openingBalanceSection","cashInSection","cashInTotal","line","gstOnSalesSection","cashOutSection","cashOutTotal","gstOnPurchasesSection","cashSurplusSection","incomeSection","availableToSpendSection","closingCashBalanceSection","yourNetAssetPositionSection","console","log","dbGSTOnPurchase","dbGSTOnSales","calcCashFlowTotal","calcTotalCashOut","calculated","upperFirst","two","green","yellowBlock","spacer","cashInActions","cashOutActions","planningBusiness","recordKeeping","funding","managing","planningCommitments","tracking","transition"],"mappings":"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","file":"static/js/19.cf0e78e0.chunk.js","sourcesContent":["import pdfMake from \"pdfmake/build/pdfmake\"\r\nimport pdfFonts from \"pdfmake/build/vfs_fonts\"\r\nimport { purple, grey } from \"@material-ui/core/colors\"\r\nimport {\r\n\tpageDefaultSettings,\r\n\tpageHeading,\r\n\tpagePadding,\r\n\taddPadding,\r\n} from \"./PDFLib\"\r\nimport { answerTheming } from \"../HealthCheck/_config/data\"\r\n\r\npdfMake.vfs = pdfFonts.pdfMake.vfs\r\n\r\nexport interface HealthCheckQuestion {\r\n\tquestion: string\r\n\tanswer: string\r\n\ttext: string\r\n}\r\n\r\nexport interface HealthCheckQuestionSet {\r\n\t[key: number]: HealthCheckQuestion // 0..9\r\n}\r\n\r\nconst questionElementTop = ({\r\n\tquestion,\r\n\tanswer,\r\n\ttext,\r\n}: HealthCheckQuestion) => {\r\n\treturn addPadding([\r\n\t\t{ text: question, style: \"question\" },\r\n\t\t\" \",\r\n\t\t{ text, style: answer },\r\n\t])\r\n}\r\n\r\nexport interface HealthCheckParams {\r\n\ttitle: string\r\n\tanswers: {\r\n\t\t[idx: string]: string\r\n\t}\r\n}\r\n\r\nexport default async (title: string, answers: HealthCheckQuestionSet) => {\r\n\tconst docDefinition: any = {\r\n\t\t...pageDefaultSettings(),\r\n\r\n\t\tcontent: [\r\n\t\t\tpageHeading(`${title} - Health Check`),\r\n\t\t\tpagePadding([\r\n\t\t\t\t{\r\n\t\t\t\t\tstyle: \"tableCell\",\r\n\t\t\t\t\ttable: {\r\n\t\t\t\t\t\twidths: [\"*\", \"*\"],\r\n\t\t\t\t\t\tbody: [\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttext: \"Four Key Questions\",\r\n\t\t\t\t\t\t\t\t\tstyle: \"tableHeading\",\r\n\t\t\t\t\t\t\t\t\tcolSpan: 2,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t[questionElementTop(answers[0]), questionElementTop(answers[1])],\r\n\t\t\t\t\t\t\t[questionElementTop(answers[2]), questionElementTop(answers[3])],\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\r\n\t\t\t\t\" \",\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tstyle: \"tableCell\",\r\n\t\t\t\t\ttable: {\r\n\t\t\t\t\t\twidths: [\"*\", \"*\"],\r\n\t\t\t\t\t\tbody: [\r\n\t\t\t\t\t\t\t[questionElementTop(answers[4]), questionElementTop(answers[5])],\r\n\r\n\t\t\t\t\t\t\t[questionElementTop(answers[6]), questionElementTop(answers[7])],\r\n\r\n\t\t\t\t\t\t\t[questionElementTop(answers[8]), questionElementTop(answers[9])],\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t]),\r\n\t\t],\r\n\r\n\t\tstyles: {\r\n\t\t\tpageHeader: {\r\n\t\t\t\tfontSize: 20,\r\n\t\t\t\tbold: true,\r\n\t\t\t\tfillColor: purple[\"500\"],\r\n\t\t\t\tcolor: \"white\",\r\n\t\t\t\talignment: \"center\",\r\n\t\t\t},\r\n\t\t\ttableHeading: {\r\n\t\t\t\tfillColor: grey[\"200\"],\r\n\t\t\t\talignment: \"center\",\r\n\t\t\t},\r\n\t\t\tquestion: {},\r\n\t\t\tpositive: {\r\n\t\t\t\tfontSize: 16,\r\n\t\t\t\tcolor: answerTheming[0].color,\r\n\t\t\t\tbold: true,\r\n\t\t\t},\r\n\t\t\tnegative: {\r\n\t\t\t\tfontSize: 16,\r\n\t\t\t\tcolor: answerTheming[1].color,\r\n\t\t\t\tbold: true,\r\n\t\t\t},\r\n\t\t\tneutral: {\r\n\t\t\t\tfontSize: 16,\r\n\t\t\t\tcolor: answerTheming[2].color,\r\n\t\t\t\tbold: true,\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\tdefaultStyle: {\r\n\t\t\tfontSize: 15,\r\n\t\t\tbold: false,\r\n\t\t\tcolor: \"#000\",\r\n\t\t},\r\n\t}\r\n\treturn pdfMake.createPdf(docDefinition)\r\n}\r\n","/* eslint-disable */\r\nimport pdfMake, { TCreatedPdf } from \"pdfmake/build/pdfmake\"\r\nimport pdfFonts from \"pdfmake/build/vfs_fonts\"\r\nimport { format } from \"date-fns\"\r\nimport { lightBlue } from \"@material-ui/core/colors\"\r\nimport {\r\n\tpageHeading,\r\n\tpagePadding,\r\n\tpageDefaultSettings,\r\n\tbasicTable,\r\n} from \"./PDFLib\"\r\nimport {\r\n\tActionChecklistStruct,\r\n\tActionChecklistNotesStruct,\r\n\tClientId,\r\n\tActionChecklistPriorityStruct,\r\n} from \"../../data/_config/shape\"\r\nimport { actionTitleMapping } from \"../ActionChecklist/ActionContainer/_config/data\"\r\nimport { PossibleActionItems } from \"../../state/action-checklist/shape\"\r\nimport ActionChecklistUseCase from \"../../data/ActionChecklist/ChecklistLogic\"\r\nimport ActionNotesUseCase from \"../../data/ActionChecklist/NotesLogic\"\r\nimport ActionPriorityUseCase from \"../../data/ActionChecklist/PriorityLogic\"\r\n\r\npdfMake.vfs = pdfFonts.pdfMake.vfs\r\n\r\nconst itemsSection = (items: ActionChecklistStruct[]) => {\r\n\tif (items.length === 0) {\r\n\t\treturn {\r\n\t\t\ttext: \"No action items\",\r\n\t\t\tstyle: \"noResult\",\r\n\t\t}\r\n\t}\r\n\r\n\treturn basicTable(\r\n\t\titems.map(({ description, reviewBy, completed }) => [\r\n\t\t\t{\r\n\t\t\t\ttext: description || \"No description provided\",\r\n\t\t\t\tstyle: [\r\n\t\t\t\t\tdescription === \"\" ? \"noResult\" : \"\",\r\n\t\t\t\t\tcompleted ? \"completed\" : \"\",\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttext: format(reviewBy, \"dd/MM/yyyy\"),\r\n\t\t\t\tstyle: [completed ? \"completed\" : \"\"],\r\n\t\t\t},\r\n\t\t])\r\n\t)\r\n}\r\n\r\nexport default async (\r\n\ttitle: string,\r\n\tchecklistCollection: ActionChecklistStruct[],\r\n\tnotes: ActionChecklistNotesStruct[],\r\n\tpriority: ActionChecklistPriorityStruct[]\r\n): Promise<TCreatedPdf> => {\r\n\tconst docDefinition: any = {\r\n\t\t...pageDefaultSettings(),\r\n\r\n\t\tcontent: [\r\n\t\t\tpageHeading(`${title} - Action Checklist`),\r\n\t\t\tpagePadding([\r\n\t\t\t\t...(Object.keys(actionTitleMapping) as PossibleActionItems[]).map(\r\n\t\t\t\t\t(value, idx) => {\r\n\t\t\t\t\t\tconst arr = []\r\n\t\t\t\t\t\tconst items = checklistCollection.filter(\r\n\t\t\t\t\t\t\t(i) => i.actionContainer === value\r\n\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\tconst note = notes.filter((i) => i.actionContainer === value)\r\n\t\t\t\t\t\tconst prior = priority.filter((i) => i.actionContainer === value)\r\n\r\n\t\t\t\t\t\tif (items.length === 0 || prior.length < 1) return \"\"\r\n\r\n\t\t\t\t\t\tconst sortedItems = prior[0].order\r\n\t\t\t\t\t\t\t.map((p) => {\r\n\t\t\t\t\t\t\t\tconst idx = items.findIndex((x) => x?.id === p)\r\n\t\t\t\t\t\t\t\treturn items[idx]\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.filter((v) => typeof v !== \"undefined\")\r\n\r\n\t\t\t\t\t\tif (idx !== 0) arr.push(\" \")\r\n\t\t\t\t\t\tarr.push({ text: actionTitleMapping[value], style: \"heading\" })\r\n\t\t\t\t\t\tarr.push(itemsSection(sortedItems))\r\n\t\t\t\t\t\tif (note.length > 0 && note[0].notes !== \"\") {\r\n\t\t\t\t\t\t\tarr.push(\" \")\r\n\t\t\t\t\t\t\tarr.push({ text: \"Notes\", style: \"subHeading\" })\r\n\t\t\t\t\t\t\tarr.push(note[0].notes)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn arr\r\n\t\t\t\t\t}\r\n\t\t\t\t),\r\n\t\t\t]),\r\n\t\t],\r\n\r\n\t\tstyles: {\r\n\t\t\tpageHeader: {\r\n\t\t\t\tfontSize: 20,\r\n\t\t\t\tbold: true,\r\n\t\t\t\tfillColor: lightBlue[\"800\"],\r\n\t\t\t\tcolor: \"white\",\r\n\t\t\t\talignment: \"center\",\r\n\t\t\t},\r\n\t\t\theading: {\r\n\t\t\t\tfontSize: 16,\r\n\t\t\t\tbold: true,\r\n\t\t\t},\r\n\t\t\tsubHeading: {\r\n\t\t\t\tfontSize: 14,\r\n\t\t\t\tbold: true,\r\n\t\t\t},\r\n\t\t\trightAlign: {\r\n\t\t\t\talignment: \"right\",\r\n\t\t\t},\r\n\t\t\tnoResult: {\r\n\t\t\t\titalics: true,\r\n\t\t\t\tcolor: \"#333\",\r\n\t\t\t},\r\n\t\t\tcompleted: {\r\n\t\t\t\tdecoration: \"lineThrough\",\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\tdefaultStyle: {\r\n\t\t\tfontSize: 15,\r\n\t\t\tbold: false,\r\n\t\t},\r\n\t}\r\n\treturn pdfMake.createPdf(docDefinition)\r\n}\r\n","import React, { ReactElement } from \"react\"\r\nimport {\r\n\tListItem,\r\n\tListItemIcon,\r\n\tCheckbox,\r\n\tListItemText,\r\n} from \"@material-ui/core\"\r\nimport { CheckboxListItemProps } from \"./__config/shape\"\r\n\r\nexport default React.memo(function CheckboxListItem({\r\n\tlabel,\r\n\tchecked,\r\n\tonClick,\r\n}: CheckboxListItemProps): ReactElement {\r\n\treturn (\r\n\t\t<ListItem button onClick={onClick}>\r\n\t\t\t<ListItemIcon>\r\n\t\t\t\t<Checkbox\r\n\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\tchecked={checked}\r\n\t\t\t\t\ttabIndex={-1}\r\n\t\t\t\t\tdisableRipple\r\n\t\t\t\t\tinputProps={{ \"aria-label\": label }}\r\n\t\t\t\t/>\r\n\t\t\t</ListItemIcon>\r\n\t\t\t<ListItemText>{label}</ListItemText>\r\n\t\t</ListItem>\r\n\t)\r\n})\r\n","import React, { ReactElement } from \"react\"\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\"\r\nimport ExpandableNav from \"../ExpandableNav\"\r\nimport IfElseLoading from \"../IfElseLoading\"\r\nimport { FileListingProps, FileListingStruct } from \"./__config/shape\"\r\nimport CheckboxListItem from \"./CheckboxListItem\"\r\n\r\nexport default React.memo(function FileListing({\r\n\ttitle,\r\n\tsetState,\r\n\tstate,\r\n\tdata,\r\n\tid,\r\n\tloading = false,\r\n}: FileListingProps): ReactElement {\r\n\tconst handleChange = (idx: number) => (): void => {\r\n\t\tsetState((prev) => {\r\n\t\t\tconst copy = [...prev[id]]\r\n\t\t\t// eslint-disable-next-line\r\n\t\t\tcopy[idx] = !copy[idx]\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...prev,\r\n\t\t\t\t[id]: copy,\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tfunction mapList(item: FileListingStruct, idx: number): ReactElement {\r\n\t\treturn (\r\n\t\t\t<CheckboxListItem\r\n\t\t\t\tkey={item.id}\r\n\t\t\t\tonClick={handleChange(idx)}\r\n\t\t\t\tchecked={state[idx]}\r\n\t\t\t\tlabel={item.name}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ExpandableNav title={title}>\r\n\t\t\t<IfElseLoading if={!loading}>\r\n\t\t\t\t<List component=\"nav\" disablePadding>\r\n\t\t\t\t\t{data.length === 0 ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<ListItemText>No data available to download</ListItemText>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>{data.map(mapList)}</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</List>\r\n\t\t\t</IfElseLoading>\r\n\t\t</ExpandableNav>\r\n\t)\r\n})\r\n","import { DiscoverTopicsStruct, SingleDownloadProps } from \"./shape\"\r\n\r\nexport const staticTitles: Record<SingleDownloadProps[\"id\"], string> = {\r\n\tchangeLevers: \"Change Levers\",\r\n\tactionChecklist: \"Action Checklist\",\r\n}\r\n\r\nexport const discoverTopics: DiscoverTopicsStruct[] = [\r\n\t{\r\n\t\tname: \"Planning your business - Quicksnaps\",\r\n\t\tid: \"Planning your business - Quicksnaps\",\r\n\t\tpath: \"/pdf/Planning your business - Quicksnaps.pdf\",\r\n\t},\r\n\t{\r\n\t\tname: \"Business Plan - Activity\",\r\n\t\tid: \"Business Plan - Activity\",\r\n\t\tpath: \"/pdf/BusinessPlan-Activity.pdf\",\r\n\t},\r\n\t{\r\n\t\tname: \"Record Keeping - Quicksnaps\",\r\n\t\tid: \"Record Keeping - Quicksnaps\",\r\n\t\tpath: \"/pdf/Record keeping - Quicksnaps.pdf\",\r\n\t},\r\n\t{\r\n\t\tname: \"Record Keeping - Activity\",\r\n\t\tid: \"Record Keeping - Activity\",\r\n\t\tpath: \"/pdf/RecordKeeping-Activity.pdf\",\r\n\t},\r\n\t{\r\n\t\tname: \"Funding your business - Quicksnaps\",\r\n\t\tid: \"Funding your business - Quicksnaps\",\r\n\t\tpath: \"/pdf/Funding your business - Quicksnaps.pdf\",\r\n\t},\r\n\t{\r\n\t\tname: \"Funding your business - Activity\",\r\n\t\tid: \"Funding your business - Activity\",\r\n\t\tpath: \"/pdf/Funding-Activity.pdf\",\r\n\t},\r\n\t{\r\n\t\tname: \"Managing your cash flow - Quicksnaps\",\r\n\t\tid: \"Managing your cash flow - Quicksnaps\",\r\n\t\tpath: \"/pdf/Managing your cash flow - Quicksnaps.pdf\",\r\n\t},\r\n\t{\r\n\t\tname: \"Planning your regular financial commitments - Quicksnaps\",\r\n\t\tid: \"Planning your regular financial commitments - Quicksnaps\",\r\n\t\tpath: \"/pdf/Planning your regular financial commitments - Quicksnaps.pdf\",\r\n\t},\r\n\t{\r\n\t\tname: \"Know your commitments - Activity\",\r\n\t\tid: \"Know your commitments - Activity\",\r\n\t\tpath: \"/pdf/KnowYourCommitments-Activity.pdf\",\r\n\t},\r\n\t{\r\n\t\tname: \"Tracking your performance - Quicksnaps\",\r\n\t\tid: \"Tracking your performance - Quicksnaps\",\r\n\t\tpath: \"/pdf/Tracking your performance - Quicksnaps.pdf\",\r\n\t},\r\n\t{\r\n\t\tname: \"Selling, closing and succession planning - Quicksnaps\",\r\n\t\tid: \"Selling, closing and succession planning - Quicksnaps\",\r\n\t\tpath: \"/pdf/Selling, closing and succession planning - Quicksnaps.pdf\",\r\n\t},\r\n]\r\n\r\nexport const changeLeversPath = \"/pdf/Change levers.pdf\"\r\n","import { makeStyles } from \"@material-ui/core\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tdropdownWrapper: {\r\n\t\tmarginTop: theme.spacing(3),\r\n\t},\r\n}))\r\n\r\nexport default useStyles\r\n","import React, {\r\n\tReactElement,\r\n\tuseState,\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tuseContext,\r\n} from \"react\"\r\nimport {\r\n\tGrid,\r\n\tTypography,\r\n\tList,\r\n\tListItem,\r\n\tListItemIcon,\r\n\tListItemText,\r\n\tBox,\r\n\tmakeStyles,\r\n\tTheme,\r\n\tcreateStyles,\r\n\tBackdrop,\r\n\tCircularProgress,\r\n} from \"@material-ui/core\"\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\"\r\nimport JSZip from \"jszip\"\r\nimport { fetch as fetchPolyfill } from \"whatwg-fetch\"\r\nimport { saveAs } from \"file-saver\"\r\nimport { format } from \"date-fns\"\r\nimport { HealthCheckDataStruct, CFCStruct } from \"../data/_config/shape\"\r\nimport HealthCheckUseCase from \"../data/healthChecks/HealthCheckLogic\"\r\nimport CFCUseCase from \"../data/CFC/CFCLogic\"\r\nimport arrayFillWith from \"../util/array/arrayFillWith\"\r\nimport { PageContainer } from \"../components/Layouts\"\r\nimport ExpandableNav from \"../components/ExpandableNav\"\r\nimport FileListing from \"../components/SessionFiles/FileListing\"\r\nimport useCurrentClient from \"../state/client/useCurrentClient\"\r\nimport {\r\n\tSelectedFiles,\r\n\tSingleDownloadProps,\r\n\tFileListingStruct,\r\n} from \"../components/SessionFiles/__config/shape\"\r\nimport {\r\n\tdiscoverTopics,\r\n\tstaticTitles,\r\n\tchangeLeversPath,\r\n} from \"../components/SessionFiles/__config/constants\"\r\nimport {\r\n\thealthCheckToData,\r\n\tcfcToData,\r\n} from \"../components/SessionFiles/__config/utilities\"\r\nimport CheckboxListItem from \"../components/SessionFiles/CheckboxListItem\"\r\nimport useStyles from \"../components/SessionFiles/__config/styles\"\r\nimport SectionTitle from \"../components/SectionTitle\"\r\nimport HealthCheckPDF, {\r\n\tHealthCheckQuestionSet,\r\n} from \"../components/PDF/HealthCheckPDF\"\r\nimport { questions } from \"../components/HealthCheck/_config/data\"\r\nimport ActionChecklistUseCase from \"../data/ActionChecklist/ChecklistLogic\"\r\nimport ActionNotesUseCase from \"../data/ActionChecklist/NotesLogic\"\r\nimport ActionChecklistPDF from \"../components/PDF/ActionChecklistPDF\"\r\nimport CashFlowCanvasPDF from \"../components/PDF/CashFlowCanvasPDF\"\r\nimport hasProperty from \"../util/object/hasProperty\"\r\nimport { canvasDisplayTitle } from \"../components/CFC/__config/utilities\"\r\nimport SnackbarMsg, {\r\n\tSnackbarMsgData,\r\n} from \"../components/SnackbarMsg/SnackbarMsg\"\r\nimport ActionPriorityUseCase from \"../data/ActionChecklist/PriorityLogic\"\r\nimport CFCContext from \"../state/CFC/context\"\r\n\r\nconst useSessionStyles = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\tbackdrop: {\r\n\t\t\tzIndex: theme.zIndex.drawer + 1,\r\n\t\t\tcolor: \"#fff\",\r\n\t\t},\r\n\t})\r\n)\r\n\r\nconst SessionFiles = (): ReactElement => {\r\n\tconst classes = useSessionStyles()\r\n\tconst cls = useStyles()\r\n\tconst [selectedFiles, setSelectedFiles] = useState<SelectedFiles>({\r\n\t\tchangeLevers: false,\r\n\t\tactionChecklist: false,\r\n\t\thealthChecks: [],\r\n\t\tcfc: [],\r\n\t\tdiscoverTopics: arrayFillWith(discoverTopics.length, false),\r\n\t})\r\n\tconst [healthChecks, setHealthChecks] = useState<HealthCheckDataStruct[]>([])\r\n\tconst [cfc, setCfc] = useState<CFCStruct[]>([])\r\n\tconst [HCListing, setHCListing] = useState<FileListingStruct[]>([])\r\n\tconst [CFCListing, setCFCListing] = useState<FileListingStruct[]>([])\r\n\tconst assetBaseUrl = process.env.REACT_APP_ASSETS_URL || \"\"\r\n\r\n\tconst [fetching, setFetching] = useState(true)\r\n\tconst [exporting, setExporting] = useState(false)\r\n\tconst [currentClient, synced] = useCurrentClient()\r\n\r\n\tconst [snackbar, setSnackbar] = useState<SnackbarMsgData>({\r\n\t\topen: false,\r\n\t\tmsg: \"\",\r\n\t})\r\n\r\n\tconst { questionValues } = useContext(CFCContext)\r\n\r\n\tfunction showSnackbar(\r\n\t\tmsg: SnackbarMsgData[\"msg\"],\r\n\t\tseverity: SnackbarMsgData[\"severity\"]\r\n\t): void {\r\n\t\tsetSnackbar({ ...snackbar, msg, severity, open: true })\r\n\t}\r\n\r\n\tfunction handleClose(event?: React.SyntheticEvent, reason?: string): void {\r\n\t\tif (reason === \"clickaway\") {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tsetSnackbar({ ...snackbar, open: false })\r\n\t}\r\n\r\n\tconst fetchData = useCallback(async () => {\r\n\t\tif (currentClient?.id) {\r\n\t\t\tconst hcs = await HealthCheckUseCase.findByClient(currentClient.id)\r\n\t\t\tconst cfcs = await CFCUseCase.findByClient(currentClient.id)\r\n\r\n\t\t\tsetHealthChecks(hcs)\r\n\t\t\tsetCfc(cfcs)\r\n\r\n\t\t\tsetSelectedFiles((prev) => ({\r\n\t\t\t\t...prev,\r\n\t\t\t\thealthChecks: arrayFillWith(hcs.length, false),\r\n\t\t\t\tcfc: arrayFillWith(cfcs.length, false),\r\n\t\t\t}))\r\n\r\n\t\t\tsetHCListing(hcs.reduce(healthCheckToData(), []))\r\n\t\t\tsetCFCListing(cfcs.reduce(cfcToData(), []))\r\n\t\t}\r\n\t\tsetFetching(false)\r\n\t}, [\r\n\t\tcurrentClient,\r\n\t\tsetSelectedFiles,\r\n\t\tsetHealthChecks,\r\n\t\tsetCfc,\r\n\t\tsetFetching,\r\n\t\tsetHCListing,\r\n\t\tsetCFCListing,\r\n\t])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (synced) {\r\n\t\t\tfetchData()\r\n\t\t}\r\n\t}, [fetchData, synced])\r\n\r\n\tconst changeSingleDownload = (id: SingleDownloadProps[\"id\"]) => (): void => {\r\n\t\tsetSelectedFiles((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\t[id]: !prev[id],\r\n\t\t}))\r\n\t}\r\n\r\n\tconst getStaticPdf = (name: string, url: string) => {\r\n\t\t// IE does not support Fetch response.arrayBuffer().\r\n\t\t// Use Polyfill Fetch for PDF response buffer.\r\n\t\treturn fetchPolyfill(url, {\r\n\t\t\tmethod: \"GET\",\r\n\t\t})\r\n\t\t\t.then((response: any) => response.arrayBuffer())\r\n\t\t\t.then((buffer: any) => ({ fileName: name, buffer }))\r\n\t}\r\n\r\n\tconst makeStaticPdf = async (name: string, path: string): Promise<any> => {\r\n\t\tconst file = encodeURI(`${assetBaseUrl}${path}`)\r\n\t\tconst pdf = await getStaticPdf(name, file)\r\n\t\treturn pdf\r\n\t}\r\n\r\n\tconst pdfMakeBlobPromise = (\r\n\t\tpdf: pdfMake.TCreatedPdf,\r\n\t\tfilename: string\r\n\t): Promise<{ blob: Blob; filename: string }> => {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tpdf.getBlob((b: Blob) => resolve({ blob: b, filename }))\r\n\t\t})\r\n\t}\r\n\r\n\tconst generateZip = async (): Promise<void> => {\r\n\t\tif (currentClient?.id) {\r\n\t\t\tsetExporting(true)\r\n\t\t\tconst zip = new JSZip()\r\n\r\n\t\t\t// Change Levers document\r\n\t\t\tif (selectedFiles.changeLevers) {\r\n\t\t\t\tconst CHPDF = await makeStaticPdf(\"ChangeLevers.pdf\", changeLeversPath)\r\n\t\t\t\tzip.file(CHPDF.fileName, CHPDF.buffer)\r\n\t\t\t}\r\n\r\n\t\t\t// Action Checklist\r\n\t\t\tif (selectedFiles.actionChecklist) {\r\n\t\t\t\tconst checklists = await ActionChecklistUseCase.findByClient(\r\n\t\t\t\t\tcurrentClient.id\r\n\t\t\t\t)\r\n\t\t\t\tconst notes = await ActionNotesUseCase.findByClient(currentClient.id)\r\n\t\t\t\tconst pdfPriority = await ActionPriorityUseCase.findByClient(\r\n\t\t\t\t\tcurrentClient.id\r\n\t\t\t\t)\r\n\r\n\t\t\t\tconst ACPDF = await ActionChecklistPDF(\r\n\t\t\t\t\tcurrentClient?.name ?? \"Client\",\r\n\t\t\t\t\tchecklists,\r\n\t\t\t\t\tnotes,\r\n\t\t\t\t\tpdfPriority\r\n\t\t\t\t)\r\n\t\t\t\tconst blob = await pdfMakeBlobPromise(\r\n\t\t\t\t\tACPDF,\r\n\t\t\t\t\t\"ActionChecklistSummary.pdf\"\r\n\t\t\t\t)\r\n\t\t\t\tzip.file(blob.filename, blob.blob)\r\n\t\t\t}\r\n\r\n\t\t\t// Discover Topics\r\n\t\t\tconst DTPromises: any = selectedFiles.discoverTopics\r\n\t\t\t\t.map((val, idx) => {\r\n\t\t\t\t\tif (val) {\r\n\t\t\t\t\t\treturn makeStaticPdf(\r\n\t\t\t\t\t\t\t`${discoverTopics[idx].name}.pdf`,\r\n\t\t\t\t\t\t\tdiscoverTopics[idx].path\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn undefined\r\n\t\t\t\t})\r\n\t\t\t\t.filter((v) => typeof v !== \"undefined\")\r\n\r\n\t\t\t// Health Checks\r\n\t\t\tconst HCNames: string[] = []\r\n\t\t\tconst HCPromises = selectedFiles.healthChecks\r\n\t\t\t\t.map((val, idx) => {\r\n\t\t\t\t\tif (val) {\r\n\t\t\t\t\t\tconst data = healthChecks[idx]\r\n\t\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\t\tconst pdfData: HealthCheckQuestionSet = {}\r\n\t\t\t\t\t\t\tquestions.forEach((q, i) => {\r\n\t\t\t\t\t\t\t\tconst { question } = q\r\n\t\t\t\t\t\t\t\tconst answer = data?.answers[i] || \"positive\"\r\n\t\t\t\t\t\t\t\tconst text = q.options[answer]\r\n\t\t\t\t\t\t\t\t// eslint-disable-next-line\r\n\t\t\t\t\t\t\t\tpdfData[i] = { question, answer, text }\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t// eslint-disable-next-line\r\n\t\t\t\t\t\t\tHCNames.push(\r\n\t\t\t\t\t\t\t\t`Completed Health Check ${format(\r\n\t\t\t\t\t\t\t\t\tdata.createdAt!,\r\n\t\t\t\t\t\t\t\t\t\"dd/MM/yyyy\"\r\n\t\t\t\t\t\t\t\t)}.pdf`\r\n\t\t\t\t\t\t\t\t\t.replace(/ /g, \"-\")\r\n\t\t\t\t\t\t\t\t\t.replace(/\\//g, \"-\")\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\treturn HealthCheckPDF(currentClient?.name ?? \"Client\", pdfData)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn undefined\r\n\t\t\t\t})\r\n\t\t\t\t.filter((v) => typeof v !== \"undefined\")\r\n\r\n\t\t\t// CFC\r\n\t\t\tconst CFCNames: string[] = []\r\n\t\t\tconst CFCPromises = selectedFiles.cfc\r\n\t\t\t\t.map((val, idx) => {\r\n\t\t\t\t\tif (val) {\r\n\t\t\t\t\t\tconst data = cfc[idx]\r\n\t\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\t\t// eslint-disable-next-line\r\n\t\t\t\t\t\t\tCFCNames.push(\r\n\t\t\t\t\t\t\t\t`${canvasDisplayTitle(data)}.pdf`\r\n\t\t\t\t\t\t\t\t\t.replace(/ /g, \"-\")\r\n\t\t\t\t\t\t\t\t\t.replace(/\\//g, \"-\")\r\n\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t\treturn CashFlowCanvasPDF(\r\n\t\t\t\t\t\t\t\tcurrentClient?.name ?? \"Client\",\r\n\t\t\t\t\t\t\t\tdata,\r\n\t\t\t\t\t\t\t\tquestionValues\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn undefined\r\n\t\t\t\t})\r\n\t\t\t\t.filter((v) => typeof v !== \"undefined\")\r\n\r\n\t\t\tPromise.all([...HCPromises, ...CFCPromises])\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconst names = [...HCNames, ...CFCNames]\r\n\r\n\t\t\t\t\tconst blobPromises = res\r\n\t\t\t\t\t\t.map((pdf, i) => {\r\n\t\t\t\t\t\t\tif (pdf) {\r\n\t\t\t\t\t\t\t\treturn pdfMakeBlobPromise(pdf, names[i])\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn undefined\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.filter((v) => typeof v !== \"undefined\")\r\n\r\n\t\t\t\t\tPromise.all([...DTPromises, ...blobPromises])\r\n\t\t\t\t\t\t.then((res1) => {\r\n\t\t\t\t\t\t\tres1.forEach((doc) => {\r\n\t\t\t\t\t\t\t\tif (hasProperty(doc, \"fileName\")) {\r\n\t\t\t\t\t\t\t\t\tzip.file(doc.fileName, doc.buffer)\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tzip.file(doc.filename, doc.blob)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\tzip.generateAsync({ type: \"blob\" }).then(function (content) {\r\n\t\t\t\t\t\t\t\t// see FileSaver.js\r\n\t\t\t\t\t\t\t\tsaveAs(content, `${currentClient.name.replace(/ /g, \"-\")}.zip`)\r\n\t\t\t\t\t\t\t\tsetExporting(false)\r\n\t\t\t\t\t\t\t\tshowSnackbar(\r\n\t\t\t\t\t\t\t\t\t\"The PDFs has been successfully exported\",\r\n\t\t\t\t\t\t\t\t\t\"success\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(() => {\r\n\t\t\t\t\t\t\tsetExporting(false)\r\n\t\t\t\t\t\t\tshowSnackbar(\"Something went wrong, please try again\", \"error\")\r\n\t\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\t.catch(() => {\r\n\t\t\t\t\tsetExporting(false)\r\n\t\t\t\t\tshowSnackbar(\"Something went wrong, please try again\", \"error\")\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst Nav = React.memo(() => {\r\n\t\treturn (\r\n\t\t\t<ExpandableNav>\r\n\t\t\t\t<List component=\"nav\" disablePadding>\r\n\t\t\t\t\t<ListItem button onClick={generateZip}>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<GetAppIcon />\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText>Download selected files</ListItemText>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t</List>\r\n\t\t\t</ExpandableNav>\r\n\t\t)\r\n\t})\r\n\r\n\tconst SingleDownloads = ({\r\n\t\ttitle,\r\n\t\tid,\r\n\t}: SingleDownloadProps): ReactElement => (\r\n\t\t<ExpandableNav title={title}>\r\n\t\t\t<List component=\"nav\" disablePadding>\r\n\t\t\t\t<CheckboxListItem\r\n\t\t\t\t\tonClick={changeSingleDownload(id)}\r\n\t\t\t\t\tchecked={selectedFiles[id]}\r\n\t\t\t\t\tlabel={staticTitles[id]}\r\n\t\t\t\t/>\r\n\t\t\t</List>\r\n\t\t</ExpandableNav>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<PageContainer>\r\n\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t<Grid item xs={12} md={9}>\r\n\t\t\t\t\t\t<Box className=\"content-area\">\r\n\t\t\t\t\t\t\t<SectionTitle component=\"h1\">Downloads</SectionTitle>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tAll the activities you completed in your session are saved here.\r\n\t\t\t\t\t\t\t\tDownload and save the files to share and review.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tSelect the items you want to save and download them from the\r\n\t\t\t\t\t\t\t\tcontrol panel.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Box className={cls.dropdownWrapper}>\r\n\t\t\t\t\t\t\t<SingleDownloads title=\"Change Levers\" id=\"changeLevers\" />\r\n\t\t\t\t\t\t\t<SingleDownloads title=\"Action Checklist\" id=\"actionChecklist\" />\r\n\t\t\t\t\t\t\t<FileListing\r\n\t\t\t\t\t\t\t\ttitle=\"Discover Topics\"\r\n\t\t\t\t\t\t\t\tstate={selectedFiles.discoverTopics}\r\n\t\t\t\t\t\t\t\tsetState={setSelectedFiles}\r\n\t\t\t\t\t\t\t\tdata={discoverTopics}\r\n\t\t\t\t\t\t\t\tid=\"discoverTopics\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FileListing\r\n\t\t\t\t\t\t\t\ttitle=\"Health Check\"\r\n\t\t\t\t\t\t\t\tstate={selectedFiles.healthChecks}\r\n\t\t\t\t\t\t\t\tsetState={setSelectedFiles}\r\n\t\t\t\t\t\t\t\tdata={HCListing}\r\n\t\t\t\t\t\t\t\tid=\"healthChecks\"\r\n\t\t\t\t\t\t\t\tloading={fetching}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FileListing\r\n\t\t\t\t\t\t\t\ttitle=\"Cash Flow Canvas\"\r\n\t\t\t\t\t\t\t\tstate={selectedFiles.cfc}\r\n\t\t\t\t\t\t\t\tsetState={setSelectedFiles}\r\n\t\t\t\t\t\t\t\tdata={CFCListing}\r\n\t\t\t\t\t\t\t\tid=\"cfc\"\r\n\t\t\t\t\t\t\t\tloading={fetching}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} md={3}>\r\n\t\t\t\t\t\t<Nav />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</PageContainer>\r\n\t\t\t<Backdrop className={classes.backdrop} open={exporting}>\r\n\t\t\t\t<CircularProgress color=\"inherit\" />\r\n\t\t\t</Backdrop>\r\n\t\t\t{/* eslint-disable-next-line react/jsx-props-no-spreading */}\r\n\t\t\t<SnackbarMsg {...snackbar} onClose={handleClose} />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default SessionFiles\r\n","import { format } from \"date-fns\"\r\nimport { FileListingStruct } from \"./shape\"\r\nimport { HealthCheckDataStruct, CFCStruct } from \"../../../data/_config/shape\"\r\nimport { canvasDisplayTitle } from \"../../CFC/__config/utilities\"\r\n\r\nexport function healthCheckToData(): ReducerHOF<\r\n\tFileListingStruct[],\r\n\tHealthCheckDataStruct\r\n> {\r\n\treturn (acc, cur): FileListingStruct[] =>\r\n\t\tacc.concat({\r\n\t\t\tname: `Completed Health Check ${\r\n\t\t\t\tcur.createdAt && format(cur.createdAt, \"'-' dd/MM/yyyy hh:mm a\")\r\n\t\t\t}`,\r\n\t\t\tid: `${cur.id || -1}`,\r\n\t\t})\r\n}\r\n\r\nexport function cfcToData(): ReducerHOF<FileListingStruct[], CFCStruct> {\r\n\treturn (acc, cur): FileListingStruct[] =>\r\n\t\tacc.concat({\r\n\t\t\tname: canvasDisplayTitle(cur),\r\n\t\t\tid: `${cur.id || -1}`,\r\n\t\t})\r\n}\r\n","import React, { ReactElement } from \"react\"\r\nimport Alert, { AlertProps } from \"@material-ui/lab/Alert\"\r\nimport { Snackbar, IconButton } from \"@material-ui/core\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\n\r\n// #region Interface Definitions\r\n/**\r\n * Data required for the snackbar\r\n * use this interface when defining the state\r\n *\r\n * @export\r\n * @interface SnackbarMsgData\r\n */\r\nexport interface SnackbarMsgData {\r\n\topen: boolean\r\n\tmsg: string\r\n\tseverity?: AlertProps[\"severity\"]\r\n}\r\n\r\n/**\r\n * Props required to be passed to the component\r\n *\r\n * @export\r\n * @interface SnackbarMsgProps\r\n * @extends {SnackbarMsgData}\r\n */\r\nexport interface SnackbarMsgProps extends SnackbarMsgData {\r\n\tonClose: (\r\n\t\tevent: React.SyntheticEvent | React.MouseEvent,\r\n\t\treason?: string\r\n\t) => void\r\n}\r\n// #endregion\r\n\r\n/**\r\n * Snackbar abstraction component, use this for a consistent\r\n * way to show messages to the user\r\n *\r\n * The component who uses this component will need to handle the\r\n * state of this component and pass down the props.\r\n *\r\n * See the README\r\n *\r\n * @export\r\n * @param {SnackbarMsgProps} {\r\n * \topen,\r\n * \tmsg,\r\n * \tonClose,\r\n * \tseverity = \"info\",\r\n * }\r\n * @returns {ReactElement}\r\n */\r\nexport default function SnackbarMsg({\r\n\topen,\r\n\tmsg,\r\n\tonClose,\r\n\tseverity = \"info\",\r\n}: SnackbarMsgProps): ReactElement {\r\n\treturn (\r\n\t\t<Snackbar\r\n\t\t\topen={open}\r\n\t\t\tautoHideDuration={2000}\r\n\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n\t\t\tonClose={onClose}\r\n\t\t>\r\n\t\t\t<Alert\r\n\t\t\t\tseverity={severity}\r\n\t\t\t\tvariant=\"filled\"\r\n\t\t\t\taction={\r\n\t\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\">\r\n\t\t\t\t\t\t<CloseIcon fontSize=\"small\" />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t{msg}\r\n\t\t\t</Alert>\r\n\t\t</Snackbar>\r\n\t)\r\n}\r\n","import React, { ReactElement, ReactNode } from \"react\"\r\nimport Loading from \"../Loading\"\r\n\r\n/**\r\n * Prop defintion for the `IfElseLoading` component\r\n *\r\n * @interface IfElseLoadingProps\r\n */\r\ninterface IfElseLoadingProps {\r\n\tchildren: ReactNode\r\n\tif: boolean\r\n}\r\n\r\n/**\r\n * A component to render either the default Loading component\r\n * or its children based on a conditional\r\n *\r\n * @export\r\n * @param {IfElseLoadingProps} {\r\n * \tchildren,\r\n * \tif: check,\r\n * }\r\n * @returns {ReactElement}\r\n */\r\nexport default function IfElseLoading({\r\n\tchildren,\r\n\tif: check,\r\n}: IfElseLoadingProps): ReactElement {\r\n\treturn !check ? <Loading /> : <>{children}</>\r\n}\r\n","import { BaseCFCStruct } from \"../../../data/_config/shape\"\r\nimport createCashFlowItem from \"../../../state/CFC/createCashFlow\"\r\n\r\nconst initialValues: BaseCFCStruct = {\r\n\tcanvasTitle: \"\",\r\n\tcanvasType: \"review\",\r\n\tcanvasTimeFrame: \"quarterly\",\r\n\tcanvasStartDate: new Date(),\r\n\tcanvasEndDate: new Date(),\r\n\topeningBalance: 0,\r\n\tpaygWithholding: 0,\r\n\tsuperAmount: 0,\r\n\tincomeTax: 25,\r\n\tcashToOwner: 0,\r\n\tstock: 0,\r\n\tcreditors: 0,\r\n\tdebtors: 0,\r\n\tassets: 0,\r\n\tloans: 0,\r\n\tcashInItems: [createCashFlowItem()],\r\n\tcashOutItems: [createCashFlowItem()],\r\n\tgstOnPurchases: undefined,\r\n\tgstOnSales: undefined,\r\n}\r\n\r\nexport default initialValues\r\n","import { BaseCFCStruct } from \"../../../data/_config/shape\"\r\nimport { CalculatedValues } from \"../../../state/CFC/useCalculated\"\r\nimport {\r\n\tcalcTotalNetAssets,\r\n\tcalcAvailableToSpend,\r\n\tcalcCashSurplus,\r\n\tcalcCashFlowGST,\r\n\tcalcClosingBalance,\r\n\tcalcIncomeTaxPer,\r\n} from \"../../../state/CFC/accumulators\"\r\nimport { isGSTValid } from \"../../../util/money/gst\"\r\n\r\n/**\r\n * Calculates the values for the dynamic values\r\n *\r\n * @param {BaseCFCStruct} values\r\n * @returns {CalculatedValues}\r\n */\r\nfunction calculateInitial(values: BaseCFCStruct): CalculatedValues {\r\n\treturn {\r\n\t\tgstOnSales: isGSTValid(values.gstOnSales)\r\n\t\t\t? values.gstOnSales!\r\n\t\t\t: calcCashFlowGST(values.cashInItems),\r\n\t\tclosingBalance: calcClosingBalance(values),\r\n\t\tgstOnPurchases: isGSTValid(values.gstOnPurchases)\r\n\t\t\t? values.gstOnPurchases!\r\n\t\t\t: calcCashFlowGST(values.cashOutItems),\r\n\t\ttotalNetAssets: calcTotalNetAssets(values),\r\n\t\tcashSurplus: calcCashSurplus(values),\r\n\t\tavailableToSpend: calcAvailableToSpend(values),\r\n\t\tincomeTaxPercentage: calcIncomeTaxPer(values),\r\n\t}\r\n}\r\n\r\nexport default calculateInitial\r\n","import { makeStyles } from \"@material-ui/core\"\r\n\r\n// Section title styles\r\nconst useSTStyles = makeStyles((theme) => ({\r\n\ttitle: {\r\n\t\tfontWeight: 500,\r\n\t\tmarginBottom: theme.spacing(2),\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: theme.typography.h5.fontSize,\r\n\t\t},\r\n\t},\r\n}))\r\n\r\nexport default useSTStyles\r\n","import React, { ReactElement } from \"react\"\r\nimport { Typography } from \"@material-ui/core\"\r\nimport { SectionTitleProps } from \"./_config/shape\"\r\nimport useSTStyles from \"./_config/styles\"\r\n\r\n/**\r\n * Abstraction for the Typography for a consistent heading for sections\r\n *\r\n * @param {SectionTitleProps} props Mimics the props for `<Typography>`\r\n * @returns ReactElement\r\n */\r\nconst SectionTitle = ({\r\n\tchildren,\r\n\tclassName,\r\n\t...props\r\n}: SectionTitleProps): ReactElement => {\r\n\tconst styles = useSTStyles()\r\n\treturn (\r\n\t\t<Typography\r\n\t\t\tvariant=\"h4\"\r\n\t\t\tcolor=\"textPrimary\"\r\n\t\t\tclassName={`${styles.title} ${className}`}\r\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</Typography>\r\n\t)\r\n}\r\n\r\nexport default SectionTitle\r\n","/**\n * Add Padding\n *\n * add white space around some content\n */\n\nimport { format } from \"date-fns\"\n\nexport const addPadding = (content: any, margin = 10) => {\n\treturn {\n\t\tmargin,\n\t\tcolumns: [content],\n\t}\n}\n\n/**\n * Page and margin defaults\n */\n\nexport const pageDefaultSettings = () => {\n\treturn {\n\t\t// watermark: {\n\t\t// \ttext: \"draft\",\n\t\t// \tcolor: \"blue\",\n\t\t// \topacity: 0.3,\n\t\t// \tbold: true,\n\t\t// \titalics: false,\n\t\t// },\n\n\t\tpageSize: \"A4\",\n\t\tpageMargins: [0, 0, 0, 25],\n\t\tfooter: {\n\t\t\tcolumns: [\n\t\t\t\t{\n\t\t\t\t\ttext: `Created on the ${format(new Date(), \"do 'of' MMMM yyyy\")}`,\n\t\t\t\t\talignment: \"center\",\n\t\t\t\t\tfontSize: 12,\n\t\t\t\t\tcolor: \"#333\",\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t}\n}\n\n/**\n * Frame Content\n *\n * Put content in a table with a border\n */\n\nexport const frameContent = (inner: any, style: string[] = []) => {\n\treturn {\n\t\ttable: {\n\t\t\twidths: [\"*\"], // to make it full length\n\t\t\tbody: [[inner]],\n\t\t},\n\t\tstyle,\n\t}\n}\n\n/**\n * Table with Text in it for top of page\n * Requires a pageHeader style\n */\n\nexport const pageHeading = (text: string) => {\n\tconst content = frameContent(addPadding(text), [\"pageHeader\"])\n\n\treturn {\n\t\t...content,\n\t\tlayout: \"noBorders\",\n\t}\n}\n\n/**\n * Add 20 points of padding on a full page\n */\n\nexport const pagePadding = (content: any) => addPadding(content, 20)\n\n/**\n * Basic table of key .... value\n */\n\nexport const basicTable = (items: any, style: string[] = []) => {\n\treturn {\n\t\ttable: {\n\t\t\twidths: [\"70%\", \"*\"],\n\t\t\tbody: items,\n\t\t},\n\t\tstyle,\n\t\tlayout: \"noBorders\",\n\t}\n}\n","/**\r\n * Creates and fills an array with some data\r\n *\r\n * @export\r\n * @template T\r\n * @param {number} len\r\n * @param {T} fill\r\n * @returns {T[]}\r\n */\r\nexport default function arrayFillWith<T>(len: number, fill: T): T[] {\r\n\treturn new Array(len).fill(fill)\r\n}\r\n","import ILogicLayer from \"../_config/logicLayer\"\r\nimport HealthCheckDB from \"./HealthCheckDatabase\"\r\nimport {\r\n\tHealthCheckDataStruct,\r\n\tBaseHealthCheckStruct,\r\n\tHealthCheckId,\r\n\tClientId,\r\n} from \"../_config/shape\"\r\n\r\n/**\r\n * Logic implementation for the Health check database\r\n *\r\n * @class HealthCheckLogic\r\n * @extends {ILogicLayer<HealthCheckDataStruct, BaseHealthCheckStruct>}\r\n */\r\nclass HealthCheckLogic extends ILogicLayer<\r\n\tHealthCheckDataStruct,\r\n\tBaseHealthCheckStruct\r\n> {\r\n\t/**\r\n\t * Creates an instance of HealthCheckLogic.\r\n\t *\r\n\t * @memberof HealthCheckLogic\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper(HealthCheckDB, HealthCheckDB.healthChecks)\r\n\t}\r\n\r\n\t/**\r\n\t * Finds a health check by the id and clientId\r\n\t *\r\n\t * @param {HealthCheckId} id\r\n\t * @param {ClientId} clientId\r\n\t * @returns {Promise<HealthCheckDataStruct>}\r\n\t * @memberof HealthCheckLogic\r\n\t */\r\n\tpublic findByClientId(\r\n\t\tid: HealthCheckId,\r\n\t\tclientId: ClientId\r\n\t): Promise<HealthCheckDataStruct | undefined> {\r\n\t\treturn this.database.transaction(\"r\", this.table.name, () => {\r\n\t\t\treturn this.table.where({ id, clientId }).first()\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Finds all the health checks for a given client\r\n\t *\r\n\t * @param {ClientId} clientId\r\n\t * @returns {Promise<HealthCheckDataStruct[]>}\r\n\t * @memberof HealthCheckLogic\r\n\t */\r\n\tpublic findClientHealthChecks(\r\n\t\tclientId: ClientId\r\n\t): Promise<HealthCheckDataStruct[]> {\r\n\t\treturn this.database.transaction(\"r\", this.table.name, () => {\r\n\t\t\treturn this.table.where(\"clientId\").equals(clientId).toArray()\r\n\t\t})\r\n\t}\r\n}\r\n\r\n// Creates a instance of the logic class and exports the instance\r\nconst HealthCheckUseCase = new HealthCheckLogic()\r\n\r\nexport default HealthCheckUseCase\r\n","import { v4 as uuidv4 } from \"uuid\"\r\nimport { CashFlow } from \"../../data/_config/shape\"\r\n\r\nexport default function createCashFlowItem(\r\n\tdescription = \"\",\r\n\tamount = 0,\r\n\tgstApplicable = true\r\n): CashFlow {\r\n\treturn {\r\n\t\tid: uuidv4(),\r\n\t\tdescription,\r\n\t\tamount,\r\n\t\tgstApplicable,\r\n\t}\r\n}\r\n","import pdfMake from \"pdfmake/build/pdfmake\"\nimport pdfFonts from \"pdfmake/build/vfs_fonts\"\nimport { green } from \"@material-ui/core/colors\"\nimport { format } from \"date-fns\"\nimport {\n\tframeContent,\n\tbasicTable,\n\tpageDefaultSettings,\n\tpageHeading,\n\tpagePadding,\n} from \"./PDFLib\"\nimport { BaseCFCStruct, CashFlow } from \"../../data/_config/shape\"\nimport {\n\tcalcCashFlowTotal,\n\tcalcTotalCashOut,\n\tcalcIncomeTaxPer,\n} from \"../../state/CFC/accumulators\"\nimport { calculateInitial } from \"../Forms/CFC\"\nimport { canvasDisplayTitle } from \"../CFC/__config/utilities\"\nimport upperFirst from \"../../util/strings/upperCaseFirst\"\nimport { addDollarSign, formatNumber } from \"../../util/money/formatting\"\n\npdfMake.vfs = pdfFonts.pdfMake.vfs\n\nconst formatDollars = (value: number) => addDollarSign(formatNumber(`${value}`))\n\nconst openingBalanceSection = (openingBalance: number): any => {\n\treturn frameContent(\n\t\tbasicTable([\n\t\t\t[\n\t\t\t\t\"Opening Balance\",\n\t\t\t\t{ text: formatDollars(openingBalance), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t])\n\t)\n}\n\nconst cashInSection = (cashInItems: CashFlow[], cashInTotal: number): any => {\n\treturn frameContent([\n\t\t{\n\t\t\ttext: \"Cash IN\",\n\t\t\tbold: true,\n\t\t},\n\t\tbasicTable([\n\t\t\t...cashInItems.map((line) => [\n\t\t\t\tline.description,\n\t\t\t\t{ text: formatDollars(line.amount), style: [\"rightAlign\"] },\n\t\t\t]),\n\t\t\t[\n\t\t\t\t\"Total (Exc GST)\",\n\t\t\t\t{\n\t\t\t\t\ttext: formatDollars(cashInTotal),\n\t\t\t\t\tstyle: [\"rightAlign\"],\n\t\t\t\t},\n\t\t\t],\n\t\t]),\n\t])\n}\n\nconst gstOnSalesSection = (gstOnSales: number): any => {\n\treturn frameContent(\n\t\tbasicTable(\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"GST on Sales\",\n\t\t\t\t\t{ text: formatDollars(gstOnSales), style: [\"rightAlign\"] },\n\t\t\t\t],\n\t\t\t],\n\t\t\t[\"yellowBlock\"]\n\t\t)\n\t)\n}\n\nconst cashOutSection = (\n\tcashOutItems: CashFlow[],\n\tcashOutTotal: number\n): any => {\n\treturn frameContent([\n\t\t{ text: \"Cash OUT\", bold: true },\n\t\tbasicTable([\n\t\t\t...cashOutItems.map((line) => [\n\t\t\t\tline.description,\n\t\t\t\t{ text: formatDollars(line.amount), style: [\"rightAlign\"] },\n\t\t\t]),\n\t\t\t[\n\t\t\t\t\"Total (Exc GST)\",\n\t\t\t\t{\n\t\t\t\t\ttext: formatDollars(cashOutTotal),\n\t\t\t\t\tstyle: [\"rightAlign\"],\n\t\t\t\t},\n\t\t\t],\n\t\t]),\n\t])\n}\n\nconst gstOnPurchasesSection = (\n\tgstOnPurchases: number,\n\tpaygWithholding: number,\n\tsuperAmount: number\n): any => {\n\treturn frameContent(\n\t\tbasicTable(\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"GST on Purchases\",\n\t\t\t\t\t{ text: formatDollars(gstOnPurchases), style: [\"rightAlign\"] },\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"PAYG Withholding\",\n\t\t\t\t\t{ text: formatDollars(paygWithholding), style: [\"rightAlign\"] },\n\t\t\t\t],\n\t\t\t\t[\"Super\", { text: formatDollars(superAmount), style: [\"rightAlign\"] }],\n\t\t\t],\n\t\t\t[\"yellowBlock\"]\n\t\t)\n\t)\n}\n\nconst cashSurplusSection = (cashSurplus: number): any => {\n\treturn frameContent(\n\t\tbasicTable([\n\t\t\t[\n\t\t\t\t\"Cash Surplus\",\n\t\t\t\t{ text: formatDollars(cashSurplus), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t])\n\t)\n}\n\nconst incomeSection = (values: BaseCFCStruct): any => {\n\treturn frameContent(\n\t\tbasicTable(\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"Income/Company Tax\",\n\t\t\t\t\t// TODO: Needs to use the new calculations in feature/122 branch\n\t\t\t\t\t{\n\t\t\t\t\t\ttext: formatDollars(calcIncomeTaxPer(values)),\n\t\t\t\t\t\tstyle: [\"rightAlign\"],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t],\n\t\t\t[\"yellowBlock\"]\n\t\t)\n\t)\n}\n\nconst availableToSpendSection = (availableToSpend: number): any => {\n\treturn frameContent(\n\t\tbasicTable([\n\t\t\t[\n\t\t\t\t\"Available to spend\",\n\t\t\t\t{ text: formatDollars(availableToSpend), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t])\n\t)\n}\n\nconst closingCashBalanceSection = (\n\tcashToOwner: number,\n\tclosingBalance: number\n): any => {\n\treturn frameContent([\n\t\t{ text: \"Your Closing Cash Balance\", bold: true },\n\t\tbasicTable([\n\t\t\t[\n\t\t\t\t\"Cash to owner\",\n\t\t\t\t{ text: formatDollars(cashToOwner), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"Closing balance\",\n\t\t\t\t{ text: formatDollars(closingBalance), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t]),\n\t])\n}\n\nconst question2Section = (value: number) => {\n\treturn frameContent(\n\t\tbasicTable(\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"Have you put enough money aside to meet your regular financial commitments?\",\n\t\t\t\t\t{ text: formatDollars(value), style: [\"rightAlign\"] },\n\t\t\t\t],\n\t\t\t],\n\t\t\t[\"yellowBlock\"]\n\t\t)\n\t)\n}\n\nconst yourNetAssetPositionSection = (\n\tstock: number,\n\tcreditors: number,\n\tdebtors: number,\n\tassets: number,\n\tloans: number,\n\ttotalNetAssets: number\n): any => {\n\treturn frameContent([\n\t\t{ text: \"Your net asset position\", bold: true },\n\t\tbasicTable([\n\t\t\t[\"Stocks\", { text: formatDollars(stock), style: [\"rightAlign\"] }],\n\t\t\t[\"Creditors\", { text: formatDollars(creditors), style: [\"rightAlign\"] }],\n\t\t\t[\"Debtors\", { text: formatDollars(debtors), style: [\"rightAlign\"] }],\n\t\t\t[\"Assets\", { text: formatDollars(assets), style: [\"rightAlign\"] }],\n\t\t\t[\"Loans\", { text: formatDollars(loans), style: [\"rightAlign\"] }],\n\t\t\t[\n\t\t\t\t{ text: \"Total net assets\", bold: true },\n\t\t\t\t{ text: formatDollars(totalNetAssets), style: [\"rightAlign\"] },\n\t\t\t],\n\t\t]),\n\t])\n}\n\nexport default async (\n\ttitle: string,\n\tvalues: BaseCFCStruct,\n\tquestionValues: any // QuestionValues\n) => {\n\tconsole.log(\"values\", values, questionValues)\n\n\tconst {\n\t\topeningBalance,\n\t\tcashInItems,\n\t\tcashOutItems,\n\t\tpaygWithholding,\n\t\tsuperAmount,\n\t\tcashToOwner,\n\t\tstock,\n\t\tcreditors,\n\t\tdebtors,\n\t\tassets,\n\t\tloans,\n\t\tgstOnPurchases: dbGSTOnPurchase,\n\t\tgstOnSales: dbGSTOnSales,\n\t} = values\n\n\tconst cashInTotal = calcCashFlowTotal(cashInItems, dbGSTOnSales)\n\tconst cashOutTotal = calcTotalCashOut(values, dbGSTOnPurchase)\n\n\tconst calculated = calculateInitial(values)\n\tconst {\n\t\tcashSurplus,\n\t\tavailableToSpend,\n\t\tclosingBalance,\n\t\ttotalNetAssets,\n\t\tgstOnSales,\n\t\tgstOnPurchases,\n\t} = calculated\n\n\tconst docDefinition: any = {\n\t\t...pageDefaultSettings(),\n\n\t\tcontent: [\n\t\t\tpageHeading(`${title} - CANVAS - ${canvasDisplayTitle(values)}`),\n\t\t\tpagePadding([\n\t\t\t\tframeContent({\n\t\t\t\t\ttable: {\n\t\t\t\t\t\twidths: [\"25%\", \"25%\", \"25%\", \"25%\"],\n\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: \"Canvas Type\", bold: true },\n\t\t\t\t\t\t\t\t\tupperFirst(values.canvasType),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: \"Time-frame\", bold: true },\n\t\t\t\t\t\t\t\t\tupperFirst(values.canvasTimeFrame),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: \"Start date\", bold: true },\n\t\t\t\t\t\t\t\t\t`${format(values.canvasStartDate, \"dd/MM/yyyy\")}`,\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: \"End date\", bold: true },\n\t\t\t\t\t\t\t\t\t`${format(values.canvasEndDate, \"dd/MM/yyyy\")}`,\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\tlayout: \"noBorders\",\n\t\t\t\t}),\n\t\t\t\t\" \",\n\t\t\t\topeningBalanceSection(openingBalance),\n\n\t\t\t\t{\n\t\t\t\t\ttable: {\n\t\t\t\t\t\twidths: [\"55%\", \"*\"],\n\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tcashInSection(cashInItems, cashInTotal),\n\t\t\t\t\t\t\t\tgstOnSalesSection(gstOnSales),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tcashOutSection(cashOutItems, cashOutTotal),\n\t\t\t\t\t\t\t\tgstOnPurchasesSection(\n\t\t\t\t\t\t\t\t\tgstOnPurchases,\n\t\t\t\t\t\t\t\t\tpaygWithholding,\n\t\t\t\t\t\t\t\t\tsuperAmount\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[cashSurplusSection(cashSurplus), incomeSection(values)],\n\t\t\t\t\t\t\t[availableToSpendSection(availableToSpend), {}],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tclosingCashBalanceSection(cashToOwner, closingBalance),\n\t\t\t\t\t\t\t\t\t{ text: \" \", style: [\"spacer\"] },\n\t\t\t\t\t\t\t\t\tyourNetAssetPositionSection(\n\t\t\t\t\t\t\t\t\t\tstock,\n\t\t\t\t\t\t\t\t\t\tcreditors,\n\t\t\t\t\t\t\t\t\t\tdebtors,\n\t\t\t\t\t\t\t\t\t\tassets,\n\t\t\t\t\t\t\t\t\t\tloans,\n\t\t\t\t\t\t\t\t\t\ttotalNetAssets\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tquestion2Section(questionValues.two),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\tlayout: \"noBorders\",\n\t\t\t\t},\n\t\t\t]),\n\t\t],\n\n\t\tstyles: {\n\t\t\tpageHeader: {\n\t\t\t\tfontSize: 20,\n\t\t\t\tbold: true,\n\t\t\t\tfillColor: green[\"800\"],\n\t\t\t\tcolor: \"white\",\n\t\t\t\talignment: \"center\",\n\t\t\t},\n\t\t\trightAlign: {\n\t\t\t\t// fillColor: \"#CCCCCC\",\n\t\t\t\talignment: \"right\",\n\t\t\t},\n\t\t\tyellowBlock: {\n\t\t\t\tfillColor: \"yellow\",\n\t\t\t},\n\t\t\tspacer: {\n\t\t\t\tfontSize: 4, // cheat for a spacer between blocks\n\t\t\t},\n\t\t},\n\n\t\tdefaultStyle: {\n\t\t\tfontSize: 13,\n\t\t\tbold: false,\n\t\t},\n\t}\n\treturn pdfMake.createPdf(docDefinition)\n}\n","/* eslint-disable import/prefer-default-export */\r\nimport { PossibleActionItems } from \"../../../../state/action-checklist/shape\"\r\n\r\n// Action title mapping object\r\nexport const actionTitleMapping: Record<PossibleActionItems, string> = {\r\n\tcashInActions: \"Cash IN actions\",\r\n\tcashOutActions: \"Cash OUT actions\",\r\n\tplanningBusiness: \"Planning your business actions\",\r\n\trecordKeeping: \"Record keeping actions\",\r\n\tfunding: \"Funding your business actions\",\r\n\tmanaging: \"Managing your cash flow actions\",\r\n\tplanningCommitments: \"Planning your regular financial commitments actions\",\r\n\ttracking: \"Tracking your performance actions\",\r\n\ttransition: \"Selling, closing and succession planning\",\r\n}\r\n"],"sourceRoot":""}