{"version":3,"sources":["components/ClientListing/_config/styles.ts","components/ClientListing/_partials/NoClients.tsx","components/ClientListing/_config/utilities.ts","components/ClientListing/_partials/ClientList.tsx","components/ClientListing/_config/machine.ts","modules/save-blob/index.ts","modules/export-client/index.ts","components/ClientListing/_partials/ExportClient.tsx","components/ClientListing/ClientListing.tsx","content/CoachingConversation/styles.ts","content/CoachingConversation/Prepare.tsx","content/CoachingConversation/Coaching.tsx","content/CoachingConversation/HealthCheck.tsx","content/CoachingConversation/DiscoverTopics.tsx","content/CoachingConversation/CFC.tsx","content/CoachingConversation/ChangeLevers.tsx","content/CoachingConversation/ActionChecklist.tsx","pages/client-list.tsx","components/SnackbarMsg/SnackbarMsg.tsx","content/tips lazy /^/.*$/ groupOptions: {} namespace object","components/PageTip/_config/style.ts","components/PageTip/_partials/AsyncTip.tsx","components/PageTip/PageTip.tsx","components/SectionTitle/_config/styles.ts","components/SectionTitle/SectionTitle.tsx","data/healthChecks/HealthCheckLogic.ts","components/IconDeleteButton/IconDeleteButtonwDialog.tsx"],"names":["useCLStyles","makeStyles","theme","button","breakpoints","up","marginLeft","spacing","down","marginTop","actions","display","justifyContent","flexDirection","NoClients","CardContent","Typography","variant","to","PublicRoutes","Home","deleteClientRelatedData","client","a","ClientUseCase","delete","HealthCheckUseCase","deleteByClient","ActionChecklistUseCase","ActionPriorityUseCase","ActionNotesUseCase","CFCUseCase","ClientList","store","state","clients","currentClient","dispatch","showSnackbar","useState","generateKey","key","ACDispatch","useContext","ActionChecklistContext","handleChange","id","type","ClientActionTypes","ChangeCurrentClient","payload","name","handleDelete","e","preventDefault","clientsCopy","clone","databaseDataDeleted","Error","message","length","removeStorageClient","emptyClientValue","syncClientsWithDb","syncWithDatabase","checklists","priority","notes","ActionChecklistActionTypes","UpdateDatabaseSync","data","List","map","idx","ListItem","constructKey","className","ListItemText","primary","ListItemSecondaryAction","isClientSelected","Tooltip","title","IconButton","onClick","IconDeleteButtonwDialog","ClientListingMachine","Machine","initial","states","loading","on","IS_EMPTY","HAS_DATA","empty","saveBlob","blob","filename","navigator","msSaveBlob","blobUrl","URL","createObjectURL","link","document","createElement","setAttribute","body","appendChild","dispatchEvent","MouseEvent","bubbles","cancelable","view","window","removeChild","exportFilter","table","value","hasProperty","clientId","exportData","db","exportDB","filter","getDataAsJSON","readFile","text","json","JSON","parse","constructExportPayload","ClientDB","clientData","HealthCheckDB","healthData","ActionChecklistDB","checklistData","CFCDB","cfcData","res","ClientDatabase","HealthCheckDatabase","ActionChecklistDatabase","CFCDatabase","ExportClient","findById","dbClient","Blob","stringify","replace","toLowerCase","useStyles","box","alignItems","btn","marginRight","width","ExportClientButton","processing","setProcessing","open","setOpen","cls","exportClient","useCallback","handleClose","Box","Button","startIcon","disabled","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","color","autoFocus","ClientListing","clientStore","ClientContext","clientSynced","useMachine","send","styles","msg","snackbar","setSnackbar","severity","event","reason","useEffect","renderWithMachine","Divider","SnackbarMsg","Loading","SectionTitle","component","Card","Spacer","space","ImportClient","triggerText","size","padding","list","listStyle","paddingLeft","paddingTop","paddingBottom","embed","minHeight","border","Prepare","ExpandableNav","defaultExpanded","Coaching","CardHeader","CardMedia","src","CardActions","href","aria-label","target","rel","HealthCheck","DiscoverTopics","CFC","ChangeLevers","ActionChecklist","role","Grid","container","item","xs","sm","md","PageTip","tip","autoHideDuration","anchorOrigin","vertical","horizontal","action","fontSize","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","code","ids","keys","Object","module","exports","usePageTipStyles","root","position","left","bottom","icon","drawer","maxWidth","closeBox","marginBottom","borderBottom","borderBottomColor","palette","grey","borderBottomStyle","AsyncTip","loadable","props","fallback","style","drawerOpen","setDrawerOpen","toggleDrawer","KeyboardEvent","Fab","Drawer","anchor","classes","paper","useSTStyles","fontWeight","typography","h5","children","healthChecks","this","database","transaction","where","first","equals","toArray","ILogicLayer","dialogOpen","setDialogOpen","onDialogClose","onCancel","onConfirm"],"mappings":"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","file":"static/js/32.2903c57c.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\r\nimport { makeStyles } from \"@material-ui/core\"\r\n\r\n// Client listing styles\r\nexport const useCLStyles = makeStyles((theme) => ({\r\n\tbutton: {\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\tmarginLeft: theme.spacing(2),\r\n\t\t},\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tmarginLeft: 0,\r\n\t\t\tmarginTop: theme.spacing(2),\r\n\t\t},\r\n\t},\r\n\tactions: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tflexDirection: \"column\",\r\n\t\t},\r\n\t},\r\n}))\r\n","import React, { ReactElement } from \"react\"\r\nimport { CardContent, Typography } from \"@material-ui/core\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { PublicRoutes } from \"../../../util/routes/routes\"\r\n\r\nconst NoClients = (): ReactElement => {\r\n\treturn (\r\n\t\t<CardContent>\r\n\t\t\t<Typography variant=\"h6\">No clients found</Typography>\r\n\t\t\t<Typography>\r\n\t\t\t\tYou are able to import previously exported clients or go{\" \"}\r\n\t\t\t\t<Link to={PublicRoutes.Home}>Home</Link> to read additional information\r\n\t\t\t</Typography>\r\n\t\t</CardContent>\r\n\t)\r\n}\r\n\r\nexport default NoClients\r\n","import { IClientState } from \"../../../state/client/client-outline\"\r\nimport { ClientDataStruct, ClientId } from \"../../../data/_config/shape\"\r\nimport ClientUseCase from \"../../../data/client/ClientLogic\"\r\nimport HealthCheckUseCase from \"../../../data/healthChecks/HealthCheckLogic\"\r\nimport ActionChecklistUseCase from \"../../../data/ActionChecklist/ChecklistLogic\"\r\nimport ActionPriorityUseCase from \"../../../data/ActionChecklist/PriorityLogic\"\r\nimport ActionNotesUseCase from \"../../../data/ActionChecklist/NotesLogic\"\r\nimport CFCUseCase from \"../../../data/CFC/CFCLogic\"\r\n\r\n/**\r\n * Checks if the store contains any clients\r\n *\r\n * @param {IClientState} store\r\n * @returns boolean\r\n */\r\nexport const hasClients = ({ state: { clients } }: IClientState): boolean => {\r\n\treturn clients.length !== 0\r\n}\r\n\r\n/**\r\n * Checks if the current client is selected\r\n *\r\n * @param {ClientDataStruct|undefined} currentClient currently selected client\r\n * @param {number} id client id to compare to the current client\r\n * @returns {boolean}\r\n */\r\nexport const isClientSelected = (\r\n\tcurrentClient: ClientDataStruct | undefined,\r\n\tid = \"\"\r\n): boolean => {\r\n\treturn (currentClient && currentClient.id === id) || false\r\n}\r\n\r\nexport const deleteClientRelatedData = async (\r\n\tclient: ClientId\r\n): Promise<boolean | Error> => {\r\n\ttry {\r\n\t\t// delete client data from ClientDB\r\n\t\tawait ClientUseCase.delete(client)\r\n\t\t// delete client data from HealthCheckDB\r\n\t\tawait HealthCheckUseCase.deleteByClient(client)\r\n\t\t// delete client data from ActionChecklistDB\r\n\t\tawait ActionChecklistUseCase.deleteByClient(client)\r\n\t\tawait ActionPriorityUseCase.deleteByClient(client)\r\n\t\tawait ActionNotesUseCase.deleteByClient(client)\r\n\t\t// delete client data from CFCDB\r\n\t\tawait CFCUseCase.deleteByClient(client)\r\n\r\n\t\treturn true\r\n\t} catch (e) {\r\n\t\treturn e\r\n\t}\r\n}\r\n","import React, { ReactElement, useState, MouseEvent, useContext } from \"react\"\r\nimport {\r\n\tList,\r\n\tListItem,\r\n\tListItemText,\r\n\tListItemSecondaryAction,\r\n\tIconButton,\r\n\tTooltip,\r\n} from \"@material-ui/core\"\r\nimport { clone } from \"lodash-es\"\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\"\r\nimport { generateKey, constructKey } from \"../../../util/lists/key\"\r\nimport { ClientActionTypes } from \"../../../state/client/client-outline\"\r\nimport { IClientListProps } from \"../_config/shape\"\r\nimport { isClientSelected, deleteClientRelatedData } from \"../_config/utilities\"\r\nimport { ClientDataStruct, ClientId } from \"../../../data/_config/shape\"\r\nimport IconDeleteButtonwDialog from \"../../IconDeleteButton/IconDeleteButtonwDialog\"\r\nimport syncClientsWithDb from \"../../../data/client/syncWithDB\"\r\nimport {\r\n\tremoveStorageClient,\r\n\temptyClientValue,\r\n} from \"../../../util/localStorage/client\"\r\nimport ActionChecklistUseCase from \"../../../data/ActionChecklist/ChecklistLogic\"\r\nimport ActionPriorityUseCase from \"../../../data/ActionChecklist/PriorityLogic\"\r\nimport ActionNotesUseCase from \"../../../data/ActionChecklist/NotesLogic\"\r\nimport { ActionChecklistContext } from \"../../../state/action-checklist\"\r\nimport { ActionChecklistActionTypes } from \"../../../state/action-checklist/shape\"\r\n\r\n/**\r\n * Renders a list of current clients with the ability to change\r\n * which client is being edited\r\n *\r\n * @returns ReactElement\r\n */\r\nconst ClientList = ({\r\n\tstore: {\r\n\t\tstate: { clients, currentClient },\r\n\t\tdispatch,\r\n\t},\r\n\tshowSnackbar,\r\n}: IClientListProps): ReactElement => {\r\n\tconst [key] = useState(generateKey())\r\n\tconst { dispatch: ACDispatch } = useContext(ActionChecklistContext)\r\n\r\n\t/**\r\n\t * Changes the current client selected for editing\r\n\t *\r\n\t * @param {ChangeEvent<HTMLInputElement>} event Event created by the radio change\r\n\t * @returns void\r\n\t */\r\n\tconst handleChange = (client: ClientDataStruct) => (): void => {\r\n\t\tif (client?.id) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ClientActionTypes.ChangeCurrentClient,\r\n\t\t\t\tpayload: client.id,\r\n\t\t\t})\r\n\r\n\t\t\tshowSnackbar(`You are now managing ${client.name}`, \"success\")\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Deletes all the clients data\r\n\t *\r\n\t * @param {ClientId|undefined} client\r\n\t * @returns Promise<void>\r\n\t */\r\n\tconst handleDelete = (client: ClientId | undefined) => async (\r\n\t\te: MouseEvent<HTMLButtonElement>\r\n\t): Promise<void> => {\r\n\t\te.preventDefault()\r\n\t\tif (client) {\r\n\t\t\tconst clientsCopy = clone(clients)\r\n\t\t\t// Deletes the client data across the various databases\r\n\t\t\tconst databaseDataDeleted = await deleteClientRelatedData(client)\r\n\r\n\t\t\tif (databaseDataDeleted instanceof Error) {\r\n\t\t\t\tshowSnackbar(databaseDataDeleted.message, \"error\")\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\t// Update current client if it is being deleted\r\n\t\t\tif (client === currentClient?.id || clientsCopy.length === 1) {\r\n\t\t\t\tremoveStorageClient()\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: ClientActionTypes.ChangeCurrentClient,\r\n\t\t\t\t\tpayload: emptyClientValue,\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t// Update client context store\r\n\t\t\tawait syncClientsWithDb(dispatch)\r\n\r\n\t\t\t// ---\r\n\t\t\t// Update action checklist context store\r\n\t\t\tconst checklists = await ActionChecklistUseCase.syncWithDatabase()\r\n\t\t\tconst priority = await ActionPriorityUseCase.syncWithDatabase()\r\n\t\t\tconst notes = await ActionNotesUseCase.syncWithDatabase()\r\n\r\n\t\t\tACDispatch({\r\n\t\t\t\ttype: ActionChecklistActionTypes.UpdateDatabaseSync,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tdata: checklists,\r\n\t\t\t\t\tpriority,\r\n\t\t\t\t\tnotes,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\r\n\t\t\tshowSnackbar(\"Client data has been deleted\", \"success\")\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<List>\r\n\t\t\t\t{clients.map((client, idx) => (\r\n\t\t\t\t\t<ListItem key={constructKey(key, idx)} className=\"list-item-padded\">\r\n\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\tclassName=\"truncate list-item\"\r\n\t\t\t\t\t\t\tprimary={client.name}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ListItemSecondaryAction>\r\n\t\t\t\t\t\t\t{!isClientSelected(currentClient, client.id) && (\r\n\t\t\t\t\t\t\t\t<Tooltip title=\"Manage client\">\r\n\t\t\t\t\t\t\t\t\t<IconButton onClick={handleChange(client)}>\r\n\t\t\t\t\t\t\t\t\t\t<VisibilityIcon />\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"MuiTypography-srOnly\">Manage client</span>\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<IconDeleteButtonwDialog onClick={handleDelete(client.id)} />\r\n\t\t\t\t\t\t</ListItemSecondaryAction>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t))}\r\n\t\t\t</List>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ClientList\r\n","import { Machine } from \"xstate\"\r\nimport { IClientListingSchema, ClientListingEvents } from \"./shape\"\r\n\r\n/**\r\n * Defines the state machine used for the\r\n * Client listing component\r\n *\r\n */\r\nconst ClientListingMachine = Machine<\r\n\tnull,\r\n\tIClientListingSchema,\r\n\tClientListingEvents\r\n>({\r\n\tkey: \"client_listing_machine\",\r\n\tinitial: \"loading\",\r\n\tstates: {\r\n\t\tloading: {\r\n\t\t\ton: {\r\n\t\t\t\tIS_EMPTY: \"empty\",\r\n\t\t\t\tHAS_DATA: \"data\",\r\n\t\t\t},\r\n\t\t},\r\n\t\tempty: {\r\n\t\t\ton: {\r\n\t\t\t\tHAS_DATA: \"data\",\r\n\t\t\t},\r\n\t\t},\r\n\t\tdata: {\r\n\t\t\ton: {\r\n\t\t\t\tIS_EMPTY: \"empty\",\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n})\r\n\r\nexport default ClientListingMachine\r\n","/**\r\n * Download a blob to the file system by creating a ghost button to trigger\r\n * a click\r\n *\r\n * @export\r\n * @param {Blob} blob\r\n * @param {string} filename\r\n */\r\nexport default function saveBlob(blob: Blob, filename: string): void {\r\n\tif (navigator.msSaveBlob) {\r\n\t\tnavigator.msSaveBlob(blob, filename)\r\n\t\treturn\r\n\t}\r\n\r\n\t// Convert your blob into a Blob URL (a special url that points to an object in the browser's memory)\r\n\tconst blobUrl = URL.createObjectURL(blob)\r\n\r\n\t// Create a link element\r\n\tconst link: HTMLAnchorElement = document.createElement(\"a\")\r\n\r\n\t// Set link's href to point to the Blob URL\r\n\tlink.setAttribute(\"href\", blobUrl)\r\n\tlink.setAttribute(\"download\", filename)\r\n\r\n\t// Append link to the body\r\n\tdocument.body.appendChild(link)\r\n\r\n\t// Dispatch click event on the link\r\n\t// This is necessary as link.click() does not work on the latest firefox\r\n\tlink.dispatchEvent(\r\n\t\tnew MouseEvent(\"click\", {\r\n\t\t\tbubbles: true,\r\n\t\t\tcancelable: true,\r\n\t\t\tview: window,\r\n\t\t})\r\n\t)\r\n\r\n\t// Remove link from body\r\n\tdocument.body.removeChild(link)\r\n}\r\n","import Dexie from \"dexie\"\r\nimport { exportDB, ExportOptions } from \"dexie-export-import\"\r\nimport { DexieExportJsonStructure } from \"dexie-export-import/dist/json-structure\"\r\nimport { ClientId } from \"../../data/_config/shape\"\r\nimport hasProperty from \"../../util/object/hasProperty\"\r\nimport readFile from \"../../util/readFile\"\r\nimport ClientDB from \"../../data/client/ClientDatabase\"\r\nimport HealthCheckDB from \"../../data/healthChecks/HealthCheckDatabase\"\r\nimport ActionChecklistDB from \"../../data/ActionChecklist/ActionChecklistDatabase\"\r\nimport CFCDB from \"../../data/CFC/CFCDatabase\"\r\nimport saveBlob from \"../save-blob\"\r\nimport ClientUseCase from \"../../data/client/ClientLogic\"\r\nimport { JSONDataResult, ExportClientResult } from \"../__config/shape\"\r\n\r\n/**\r\n * Filters out records based on the client and returns a method that is used\r\n * within the export options\r\n *\r\n * @param {ClientId} client\r\n * @returns {ExportOptions[\"filter\"]}\r\n */\r\nexport function exportFilter(client: ClientId): ExportOptions[\"filter\"] {\r\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n\treturn (table: string, value: any): boolean => {\r\n\t\tif (!value) return false\r\n\t\t// if we're looking at the clients table, filter by the record id\r\n\t\tif (table === \"clients\") return value.id === client\r\n\t\t// Otherwise look at the clientId key\r\n\t\treturn hasProperty(value, \"clientId\") ? value.clientId === client : false\r\n\t}\r\n}\r\n\r\n/**\r\n * Exports the database data into a blob\r\n *\r\n * @export\r\n * @param {Dexie} db\r\n * @returns {Promise<Blob>}\r\n */\r\nexport async function exportData(db: Dexie, client: ClientId): Promise<Blob> {\r\n\tconst blob: Blob = await exportDB(db as any, {\r\n\t\tfilter: exportFilter(client),\r\n\t})\r\n\treturn blob\r\n}\r\n\r\n/**\r\n * Exports the data for a client and returns the results as json\r\n *\r\n * @export\r\n * @param {Dexie} db\r\n * @param {ClientId} client\r\n * @returns {(Promise<JSONDataResult>)}\r\n */\r\nexport async function getDataAsJSON(\r\n\tdb: Dexie,\r\n\tclient: ClientId\r\n): Promise<JSONDataResult> {\r\n\t// Get the exported data from the database\r\n\tconst blob = await exportData(db, client)\r\n\t// Convert the blob to raw text\r\n\tconst text = await readFile(blob)\r\n\t// return an empty array if the text is invalid\r\n\tif (!text || typeof text !== \"string\") return null\r\n\r\n\t// Parse and return the data\r\n\tconst json: DexieExportJsonStructure = JSON.parse(text)\r\n\treturn json\r\n}\r\n\r\n/**\r\n * Extracts all the data from the different databases and constructs the payload\r\n * used in the json file\r\n *\r\n * @export\r\n * @param {ClientId} client\r\n * @returns {Promise<ExportClientResult>}\r\n */\r\nexport async function constructExportPayload(\r\n\tclient: ClientId\r\n): Promise<ExportClientResult> {\r\n\tconst clientData = await getDataAsJSON(ClientDB, client)\r\n\tconst healthData = await getDataAsJSON(HealthCheckDB, client)\r\n\tconst checklistData = await getDataAsJSON(ActionChecklistDB, client)\r\n\tconst cfcData = await getDataAsJSON(CFCDB, client)\r\n\r\n\tconst res: ExportClientResult = {\r\n\t\tClientDatabase: clientData,\r\n\t\tHealthCheckDatabase: healthData,\r\n\t\tActionChecklistDatabase: checklistData,\r\n\t\tCFCDatabase: cfcData,\r\n\t}\r\n\r\n\treturn res\r\n}\r\n\r\n/**\r\n * Constructs and downloads the export json file\r\n *\r\n * @export\r\n * @param {ClientId} client\r\n * @returns {(Promise<true | Error>)}\r\n */\r\nexport default async function ExportClient(\r\n\tclient: ClientId\r\n): Promise<true | Error> {\r\n\t// Ensures that the requested client does exist in the database\r\n\tconst dbClient = await ClientUseCase.findById(client)\r\n\tif (!dbClient) {\r\n\t\t// eslint-disable-next-line\r\n\t\tthrow new Error(\"Requested client could not be found\")\r\n\t}\r\n\r\n\t// Get the payload and create the file blob\r\n\tconst payload = await constructExportPayload(client)\r\n\tconst blob = new Blob([JSON.stringify(payload)], {\r\n\t\ttype: \"application/json\",\r\n\t})\r\n\r\n\t// Downloads the file\r\n\tsaveBlob(\r\n\t\tblob,\r\n\t\t`${dbClient.name.replace(/ /g, \"-\").toLowerCase()}--exported-data.json`\r\n\t)\r\n\treturn true\r\n}\r\n","import React, { ReactElement, useCallback, useState } from \"react\"\r\nimport {\r\n\tButton,\r\n\tBox,\r\n\tmakeStyles,\r\n\tDialog,\r\n\tDialogTitle,\r\n\tDialogContent,\r\n\tDialogActions,\r\n\tTypography,\r\n} from \"@material-ui/core\"\r\nimport PublishIcon from \"@material-ui/icons/Publish\"\r\nimport { ClientId } from \"../../../data/_config/shape\"\r\nimport { SnackbarMsgData } from \"../../SnackbarMsg/SnackbarMsg\"\r\nimport ExportClient from \"../../../modules/export-client\"\r\n\r\ntype ExportClientProps = {\r\n\tclient: ClientId\r\n\tshowSnackbar: (\r\n\t\tmsg: SnackbarMsgData[\"msg\"],\r\n\t\tseverity: SnackbarMsgData[\"severity\"]\r\n\t) => void\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tbox: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tbtn: {\r\n\t\tmarginRight: theme.spacing(1),\r\n\t\twidth: \"100%\",\r\n\t},\r\n}))\r\n\r\n/**\r\n * Component used to handle exporting a clients data\r\n *\r\n * @export\r\n * @param {ExportClientProps} {\r\n * \tclient,\r\n * }\r\n * @returns {ReactElement}\r\n */\r\nexport default function ExportClientButton({\r\n\tclient,\r\n\tshowSnackbar,\r\n}: ExportClientProps): ReactElement {\r\n\tconst [processing, setProcessing] = useState(false)\r\n\tconst [open, setOpen] = useState(false)\r\n\tconst cls = useStyles()\r\n\r\n\tconst exportClient = useCallback(async () => {\r\n\t\tif (client !== \"\") {\r\n\t\t\ttry {\r\n\t\t\t\tsetProcessing(true)\r\n\t\t\t\tawait ExportClient(client)\r\n\t\t\t\tshowSnackbar(\"Client data has been exported\", \"success\")\r\n\t\t\t} catch (e) {\r\n\t\t\t\tshowSnackbar(e.message, \"error\")\r\n\t\t\t} finally {\r\n\t\t\t\tsetProcessing(false)\r\n\t\t\t\tsetOpen(false)\r\n\t\t\t}\r\n\t\t}\r\n\t}, [client, setProcessing, showSnackbar, setOpen])\r\n\r\n\tconst handleOpen = (): void => setOpen(true)\r\n\tconst handleClose = (): void => setOpen(false)\r\n\r\n\treturn (\r\n\t\t<Box className={cls.box}>\r\n\t\t\t<Button\r\n\t\t\t\tstartIcon={<PublishIcon />}\r\n\t\t\t\tonClick={handleOpen}\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tdisabled={processing}\r\n\t\t\t\tclassName={cls.btn}\r\n\t\t\t>\r\n\t\t\t\tExport data\r\n\t\t\t</Button>\r\n\t\t\t<Dialog\r\n\t\t\t\topen={open}\r\n\t\t\t\tonClose={handleClose}\r\n\t\t\t\taria-labelledby=\"export-client-data-dialog-title\"\r\n\t\t\t\taria-describedby=\"export-client-data-dialog-description\"\r\n\t\t\t>\r\n\t\t\t\t<DialogTitle id=\"export-client-data-dialog-title\">\r\n\t\t\t\t\tExport client data\r\n\t\t\t\t</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<Typography id=\"export-client-data-dialog-description\">\r\n\t\t\t\t\t\tYour file will save to your browser&apos;s automatic download\r\n\t\t\t\t\t\tlocation. It is saved as a .json file. Once downloaded you can move\r\n\t\t\t\t\t\tthe file to any location on your computer.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick={handleClose}>Close</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={exportClient}\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tExport data\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</Box>\r\n\t)\r\n}\r\n","import React, { useContext, ReactElement, useEffect, useState } from \"react\"\r\nimport {\r\n\tBox,\r\n\tCard,\r\n\tDivider,\r\n\tCardContent,\r\n\tList,\r\n\tListItem,\r\n\tListItemText,\r\n} from \"@material-ui/core\"\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport { useMachine } from \"@xstate/react\"\r\nimport { ClientContext } from \"../../state/client\"\r\nimport { NewClientDialog } from \"../../content/dialog\"\r\nimport { useCLStyles } from \"./_config/styles\"\r\nimport { NoClients, ClientList, ImportClient } from \"./_partials\"\r\nimport { IClientState } from \"../../state/client/client-outline\"\r\nimport ClientListingMachine from \"./_config/machine\"\r\nimport Loading from \"../Loading\"\r\nimport SectionTitle from \"../SectionTitle\"\r\nimport SnackbarMsg, { SnackbarMsgData } from \"../SnackbarMsg/SnackbarMsg\"\r\nimport Spacer from \"../Spacer\"\r\nimport ExportClientButton from \"./_partials/ExportClient\"\r\n\r\n/**\r\n * Component to render the whole Client Listing component\r\n * with section title, controls and the Client List\r\n *\r\n * @returns ReactElement\r\n */\r\nconst ClientListing = (): ReactElement => {\r\n\tconst clientStore: IClientState = useContext(ClientContext)\r\n\tconst {\r\n\t\tstate: { clientSynced, clients, currentClient },\r\n\t} = clientStore\r\n\tconst [state, send] = useMachine(ClientListingMachine)\r\n\tconst styles = useCLStyles()\r\n\tconst [snackbar, setSnackbar] = useState<SnackbarMsgData>({\r\n\t\topen: false,\r\n\t\tmsg: \"\",\r\n\t})\r\n\r\n\tfunction showSnackbar(\r\n\t\tmsg: SnackbarMsgData[\"msg\"],\r\n\t\tseverity: SnackbarMsgData[\"severity\"]\r\n\t): void {\r\n\t\tsetSnackbar({ ...snackbar, msg, severity, open: true })\r\n\t}\r\n\r\n\tfunction handleClose(\r\n\t\tevent: React.SyntheticEvent | React.MouseEvent,\r\n\t\treason?: string\r\n\t): void {\r\n\t\tif (reason && reason === \"clickaway\") {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tsetSnackbar({ ...snackbar, open: false })\r\n\t}\r\n\r\n\t// Change the state of the component once clients are synced\r\n\tuseEffect(() => {\r\n\t\tif (clientSynced) {\r\n\t\t\tif (clients.length > 0) {\r\n\t\t\t\tsend(\"HAS_DATA\")\r\n\t\t\t} else {\r\n\t\t\t\tsend(\"IS_EMPTY\")\r\n\t\t\t}\r\n\t\t}\r\n\t}, [clientSynced, clients, send])\r\n\r\n\t/**\r\n\t * Renders components based on the component state\r\n\t *\r\n\t * @returns ReactElement\r\n\t */\r\n\tconst renderWithMachine = (type: \"list\" | \"current\"): ReactElement => {\r\n\t\tswitch (state.value) {\r\n\t\t\tcase \"data\":\r\n\t\t\t\tif (type === \"list\") {\r\n\t\t\t\t\treturn <ClientList store={clientStore} showSnackbar={showSnackbar} />\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (type === \"current\") {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t\t<ListItemText className=\"truncate list-item\">\r\n\t\t\t\t\t\t\t\t\t\t{currentClient?.name}\r\n\t\t\t\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t\t{currentClient?.id && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<CardContent className={styles.actions}>\r\n\t\t\t\t\t\t\t\t\t\t<ExportClientButton\r\n\t\t\t\t\t\t\t\t\t\t\tclient={currentClient.id}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSnackbar={showSnackbar}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t\t\t<SnackbarMsg\r\n\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\r\n\t\t\t\t\t\t\t\t\t\t{...snackbar}\r\n\t\t\t\t\t\t\t\t\t\tonClose={handleClose}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn <></>\r\n\t\t\tcase \"empty\":\r\n\t\t\t\treturn <NoClients />\r\n\t\t\tcase \"loading\":\r\n\t\t\tdefault:\r\n\t\t\t\treturn <Loading />\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box>\r\n\t\t\t\t<SectionTitle component=\"h2\">Current client</SectionTitle>\r\n\t\t\t\t<Card>{renderWithMachine(\"current\")}</Card>\r\n\t\t\t\t<Spacer space={4} />\r\n\t\t\t\t<SectionTitle component=\"h2\">Client list</SectionTitle>\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t{renderWithMachine(\"list\")}\r\n\t\t\t\t\t<Divider />\r\n\t\t\t\t\t<CardContent className={styles.actions}>\r\n\t\t\t\t\t\t<ImportClient />\r\n\t\t\t\t\t\t<NewClientDialog\r\n\t\t\t\t\t\t\ttriggerText=\"Add new client\"\r\n\t\t\t\t\t\t\tstartIcon={<AddIcon />}\r\n\t\t\t\t\t\t\tclassName={styles.button}\r\n\t\t\t\t\t\t\tsize=\"medium\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t</Box>\r\n\t\t\t{/* eslint-disable-next-line react/jsx-props-no-spreading */}\r\n\t\t\t<SnackbarMsg {...snackbar} onClose={handleClose} />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ClientListing\r\n","import { makeStyles } from \"@material-ui/core\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tbox: {\r\n\t\tpadding: `0 ${theme.spacing(2)}px`,\r\n\t},\r\n\tlist: {\r\n\t\tlistStyle: \"disc\",\r\n\t\tpaddingLeft: theme.spacing(2),\r\n\t\tpaddingTop: 0,\r\n\t\tpaddingBottom: 0,\r\n\t\t\"& ul\": {\r\n\t\t\tpaddingLeft: theme.spacing(3),\r\n\t\t},\r\n\t},\r\n\tembed: {\r\n\t\tminHeight: \"300px\",\r\n\t\tborder: \"none\",\r\n\t},\r\n}))\r\n\r\nexport default useStyles\r\n","import React, { ReactElement } from \"react\"\r\nimport { Typography, List, Box } from \"@material-ui/core\"\r\nimport ExpandableNav from \"../../components/ExpandableNav\"\r\nimport useStyles from \"./styles\"\r\n\r\nexport default function Prepare(): ReactElement {\r\n\tconst cls = useStyles()\r\n\r\n\treturn (\r\n\t\t<ExpandableNav\r\n\t\t\ttitle=\"Prepare for your client meeting\"\r\n\t\t\tdefaultExpanded={false}\r\n\t\t>\r\n\t\t\t<Box className={cls.box}>\r\n\t\t\t\t<List className={cls.list}>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tFamiliarise yourself with the tools in this kit.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tIdentify the tools that will be most suitable to your client.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography component=\"li\">Ask your client to:</Typography>\r\n\t\t\t\t\t<List className={cls.list}>\r\n\t\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\t\tprepare a list of questions to ask\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\t\tbring the financial projections or reports for their business\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</List>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tFor an existing client, review their previous Action Checklist,\r\n\t\t\t\t\t\tcanvasses and financials.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</List>\r\n\t\t\t</Box>\r\n\t\t</ExpandableNav>\r\n\t)\r\n}\r\n","import React, { ReactElement } from \"react\"\r\nimport {\r\n\tTypography,\r\n\tBox,\r\n\tList,\r\n\tCard,\r\n\tCardHeader,\r\n\tCardMedia,\r\n\tCardActions,\r\n\tButton,\r\n} from \"@material-ui/core\"\r\nimport ExpandableNav from \"../../components/ExpandableNav\"\r\nimport useStyles from \"./styles\"\r\nimport Spacer from \"../../components/Spacer\"\r\n\r\nexport default function Coaching(): ReactElement {\r\n\tconst cls = useStyles()\r\n\r\n\treturn (\r\n\t\t<ExpandableNav\r\n\t\t\ttitle=\"The Cash Flow Coaching Kit overview\"\r\n\t\t\tdefaultExpanded={false}\r\n\t\t>\r\n\t\t\t<Box className={cls.box}>\r\n\t\t\t\t<List className={cls.list}>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tExplain the coaching steps (Discover, Apply, Plan & Action) and\r\n\t\t\t\t\t\ttools.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tExplain why the Four Key Questions are fundamental success factors\r\n\t\t\t\t\t\tfor cash flow. Refer to these questions in every step.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tUse the Health Check or review your client’s Action Checklist tasks\r\n\t\t\t\t\t\tto help start a conversation.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tIt isn’t necessary to complete the entire coaching kit in every\r\n\t\t\t\t\t\tsession.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tAs you explore the kit with your client, consider questions such as:\r\n\t\t\t\t\t\t<List className={cls.list}>\r\n\t\t\t\t\t\t\t<Typography component=\"li\">Why are you in business?</Typography>\r\n\t\t\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\t\t\tWhere do you see your business in 12 months?\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\t\t\tWhere do you see your business in 5 years?\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</List>\r\n\r\n\t\t\t\t<Spacer space={4} />\r\n\r\n\t\t\t\t<Card variant=\"outlined\">\r\n\t\t\t\t\t<CardHeader title=\"What advisors think of the kit\" />\r\n\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\tclassName={cls.embed}\r\n\t\t\t\t\t\tcomponent=\"iframe\"\r\n\t\t\t\t\t\ttitle=\"What advisors think of the kit\"\r\n\t\t\t\t\t\tsrc=\"https://www.youtube.com/embed/z64Bc5K2TKo?rel=0&modestbranding=1\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\thref=\"/transcripts/What-advisors-think-of-the-kit.docx\"\r\n\t\t\t\t\t\t\taria-label=\"Download transcript: What advisors think of the kit\"\r\n\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tDownload Transcript\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</CardActions>\r\n\t\t\t\t</Card>\r\n\t\t\t</Box>\r\n\t\t</ExpandableNav>\r\n\t)\r\n}\r\n","import React, { ReactElement } from \"react\"\r\nimport {\r\n\tTypography,\r\n\tBox,\r\n\tList,\r\n\tCard,\r\n\tCardHeader,\r\n\tCardMedia,\r\n\tCardActions,\r\n\tButton,\r\n} from \"@material-ui/core\"\r\nimport ExpandableNav from \"../../components/ExpandableNav\"\r\nimport useStyles from \"./styles\"\r\nimport Spacer from \"../../components/Spacer\"\r\n\r\nexport default function HealthCheck(): ReactElement {\r\n\tconst cls = useStyles()\r\n\r\n\treturn (\r\n\t\t<ExpandableNav title=\"Health Check\" defaultExpanded={false}>\r\n\t\t\t<Box className={cls.box}>\r\n\t\t\t\t<List className={cls.list}>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tThe Health Check helps you understand your client's business and\r\n\t\t\t\t\t\tcashflow knowledge.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tIntroduce the Health Check to your client as an opportunity to\r\n\t\t\t\t\t\tunderstand where they are at.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tConsider questions such as:\r\n\t\t\t\t\t\t<List className={cls.list}>\r\n\t\t\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\t\t\tAre there areas of your business that are causing you concern?\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\t\t\tHow have you been trying to deal with this up to now?\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\t\t\tWhat could you do to improve in these areas?\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tIf your client is unsure about their results, they can learn more by\r\n\t\t\t\t\t\tusing the Discover Topics.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tCash flow is a key business challenge that may affect small business\r\n\t\t\t\t\t\towners’ mental health and wellbeing.{\" \"}\r\n\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\thref=\"https://www.ato.gov.au/smallbizmentalhealth\"\r\n\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSupport is available\r\n\t\t\t\t\t\t</a>{\" \"}\r\n\t\t\t\t\t\tif you need assistance.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</List>\r\n\r\n\t\t\t\t<Spacer space={4} />\r\n\r\n\t\t\t\t<Card variant=\"outlined\">\r\n\t\t\t\t\t<CardHeader title=\"Health Check coaching tips\" />\r\n\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\tclassName={cls.embed}\r\n\t\t\t\t\t\tcomponent=\"iframe\"\r\n\t\t\t\t\t\ttitle=\"Health Check coaching tips\"\r\n\t\t\t\t\t\tsrc=\"https://www.youtube.com/embed/C6Gduin0fJg?rel=0&modestbranding=1\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\thref=\"/transcripts/Health Check coaching tips.docx\"\r\n\t\t\t\t\t\t\taria-label=\"Download transcript: Health Check coaching tips\"\r\n\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tDownload Transcript\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</CardActions>\r\n\t\t\t\t</Card>\r\n\t\t\t</Box>\r\n\t\t</ExpandableNav>\r\n\t)\r\n}\r\n","import React, { ReactElement } from \"react\"\r\nimport { Typography, List, Box } from \"@material-ui/core\"\r\nimport ExpandableNav from \"../../components/ExpandableNav\"\r\nimport useStyles from \"./styles\"\r\n\r\nexport default function DiscoverTopics(): ReactElement {\r\n\tconst cls = useStyles()\r\n\r\n\treturn (\r\n\t\t<ExpandableNav title=\"Discover Topics\" defaultExpanded={false}>\r\n\t\t\t<Box className={cls.box}>\r\n\t\t\t\t<List className={cls.list}>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tIntroduce Discover Topics to your client as a way to understand cash\r\n\t\t\t\t\t\tflow management.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tIdentify the relevant topics and add them to the Action Checklist by\r\n\t\t\t\t\t\tusing the Task Builder.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tUse the activities to build practical knowledge. Focus on making it\r\n\t\t\t\t\t\treal and relevant to your client.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tAs you explore the Discover Topics with your client, consider\r\n\t\t\t\t\t\tquestions such as:\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<List className={cls.list}>\r\n\t\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\t\tWhy do you think this topic area is relevant for your business?\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\t\tWhat else would you like to know about this topic area?\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\t\tHow are you handling this aspect of your business now?\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\t\tWhat could you do to change this in the future?\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</List>\r\n\t\t\t</Box>\r\n\t\t</ExpandableNav>\r\n\t)\r\n}\r\n","import React, { ReactElement } from \"react\"\r\nimport {\r\n\tTypography,\r\n\tBox,\r\n\tList,\r\n\tCard,\r\n\tCardHeader,\r\n\tCardMedia,\r\n\tCardActions,\r\n\tButton,\r\n} from \"@material-ui/core\"\r\nimport ExpandableNav from \"../../components/ExpandableNav\"\r\nimport useStyles from \"./styles\"\r\nimport Spacer from \"../../components/Spacer\"\r\n\r\nexport default function CFC(): ReactElement {\r\n\tconst cls = useStyles()\r\n\r\n\treturn (\r\n\t\t<ExpandableNav title=\"Cash Flow Canvas\" defaultExpanded={false}>\r\n\t\t\t<Box className={cls.box}>\r\n\t\t\t\t<List className={cls.list}>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tIntroduce the Cash Flow Canvas as an opportunity to understand their\r\n\t\t\t\t\t\tcashflow. Use the Four Key Questions to discuss this.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tWork through regular financial commitments and other important items\r\n\t\t\t\t\t\tin their cash flow.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tThe canvas should draw out how their business is performing and\r\n\t\t\t\t\t\tidentify where they want to go.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tConsider asking questions such as:\r\n\t\t\t\t\t\t<List className={cls.list}>\r\n\t\t\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\t\t\tWhat does the Cash Flow Canvas tell you about your business?\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\t\t\tWhat are the items in your Cash IN or your Cash OUT that have\r\n\t\t\t\t\t\t\t\tthe most impact on your cash flow?\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\t\t\tHave you set aside an amount for your regular financial\r\n\t\t\t\t\t\t\t\tcommitments?\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\t\t\tDo you think you can take more or less out of your business\r\n\t\t\t\t\t\t\t\tgiven your current cash flow position?\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\t\t\tHow do you think you can improve your cash flow position?\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</List>\r\n\r\n\t\t\t\t<Spacer space={4} />\r\n\r\n\t\t\t\t<Card variant=\"outlined\">\r\n\t\t\t\t\t<CardHeader title=\"Cash Flow Canvas coaching tips\" />\r\n\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\tclassName={cls.embed}\r\n\t\t\t\t\t\tcomponent=\"iframe\"\r\n\t\t\t\t\t\ttitle=\"Cash Flow Canvas coaching tips\"\r\n\t\t\t\t\t\tsrc=\"https://www.youtube.com/embed/Q8_r35mb6YU?rel=0&modestbranding=1\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\thref=\"/transcripts/Cash Flow Canvas coaching tips.docx\"\r\n\t\t\t\t\t\t\taria-label=\"Download transcript: Cash Flow Canvas coaching tips\"\r\n\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tDownload Transcript\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</CardActions>\r\n\t\t\t\t</Card>\r\n\t\t\t</Box>\r\n\t\t</ExpandableNav>\r\n\t)\r\n}\r\n","import React, { ReactElement } from \"react\"\r\nimport {\r\n\tTypography,\r\n\tBox,\r\n\tList,\r\n\tCard,\r\n\tCardHeader,\r\n\tCardMedia,\r\n\tCardActions,\r\n\tButton,\r\n} from \"@material-ui/core\"\r\nimport ExpandableNav from \"../../components/ExpandableNav\"\r\nimport useStyles from \"./styles\"\r\nimport Spacer from \"../../components/Spacer\"\r\n\r\nexport default function ChangeLevers(): ReactElement {\r\n\tconst cls = useStyles()\r\n\r\n\treturn (\r\n\t\t<ExpandableNav title=\"Change Levers\" defaultExpanded={false}>\r\n\t\t\t<Box className={cls.box}>\r\n\t\t\t\t<List className={cls.list}>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tThe Change Levers highlight different options that improve business\r\n\t\t\t\t\t\tperformance\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tKeep the conversation action focused and positive.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tConsider asking questions such as:\r\n\t\t\t\t\t\t<List className={cls.list}>\r\n\t\t\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\t\t\tWhich of these actions stand out to you?\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\t\t\tHow do you feel about completing these actions?\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\t\t\tWhat do these actions look like for your business?\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\t\t\tHow do you think completing these actions will impact your cash\r\n\t\t\t\t\t\t\t\tflow?\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</List>\r\n\r\n\t\t\t\t<Spacer space={4} />\r\n\r\n\t\t\t\t<Card variant=\"outlined\">\r\n\t\t\t\t\t<CardHeader title=\"Change Levers coaching tips\" />\r\n\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\tclassName={cls.embed}\r\n\t\t\t\t\t\tcomponent=\"iframe\"\r\n\t\t\t\t\t\ttitle=\"Change Levers coaching tips\"\r\n\t\t\t\t\t\tsrc=\"https://www.youtube.com/embed/_xYdO-STzYI?rel=0&modestbranding=1\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\thref=\"/transcripts/Change Levers coaching tips.docx\"\r\n\t\t\t\t\t\t\taria-label=\"Download transcript: Change Levers coaching tips\"\r\n\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tDownload Transcript\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</CardActions>\r\n\t\t\t\t</Card>\r\n\t\t\t</Box>\r\n\t\t</ExpandableNav>\r\n\t)\r\n}\r\n","import React, { ReactElement } from \"react\"\r\nimport {\r\n\tTypography,\r\n\tBox,\r\n\tList,\r\n\tCard,\r\n\tCardHeader,\r\n\tCardMedia,\r\n\tCardActions,\r\n\tButton,\r\n} from \"@material-ui/core\"\r\nimport ExpandableNav from \"../../components/ExpandableNav\"\r\nimport useStyles from \"./styles\"\r\nimport Spacer from \"../../components/Spacer\"\r\n\r\nexport default function ActionChecklist(): ReactElement {\r\n\tconst cls = useStyles()\r\n\r\n\treturn (\r\n\t\t<ExpandableNav title=\"Action Checklist\" defaultExpanded={false}>\r\n\t\t\t<Box className={cls.box}>\r\n\t\t\t\t<List className={cls.list}>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tIntroduce the Action Checklist as a set of steps to improve business\r\n\t\t\t\t\t\tcash flow.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tExplain that putting their knowledge into action requires a clear\r\n\t\t\t\t\t\tplan and timeframes.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tFocus your conversation on practical actions your client can take to\r\n\t\t\t\t\t\tcreate change.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tStart prioritising tasks based on your client's needs.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tThe most important part of this whole process is keeping your client\r\n\t\t\t\t\t\taccountable for completing their actions.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tSet a follow-up date to have another conversation to review the\r\n\t\t\t\t\t\ttasks.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\tConsider questions such as:\r\n\t\t\t\t\t\t<List className={cls.list}>\r\n\t\t\t\t\t\t\t<Typography component=\"li\">What did we discuss?</Typography>\r\n\t\t\t\t\t\t\t<Typography component=\"li\">What did we agree to do?</Typography>\r\n\t\t\t\t\t\t\t<Typography component=\"li\">Who will do what by when?</Typography>\r\n\t\t\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\t\t\tWho is accountable for these actions?\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography component=\"li\">\r\n\t\t\t\t\t\t\t\tHow is the Action Checklist going?\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography component=\"li\">Are you making progress?</Typography>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</List>\r\n\r\n\t\t\t\t<Spacer space={4} />\r\n\r\n\t\t\t\t<Card variant=\"outlined\">\r\n\t\t\t\t\t<CardHeader title=\"Action Checklist coaching tips\" />\r\n\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\tclassName={cls.embed}\r\n\t\t\t\t\t\tcomponent=\"iframe\"\r\n\t\t\t\t\t\ttitle=\"Action Checklist coaching tips\"\r\n\t\t\t\t\t\tsrc=\"https://www.youtube.com/embed/td4ReSc9Eos?rel=0&modestbranding=1\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\thref=\"/transcripts/Action Checklist coaching tips.docx\"\r\n\t\t\t\t\t\t\taria-label=\"Download transcript: Action Checklist coaching tips\"\r\n\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tDownload Transcript\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</CardActions>\r\n\t\t\t\t</Card>\r\n\t\t\t</Box>\r\n\t\t</ExpandableNav>\r\n\t)\r\n}\r\n","import React, { ReactElement } from \"react\"\r\nimport { Typography, Grid, Box } from \"@material-ui/core\"\r\nimport { PageContainer } from \"../components/Layouts\"\r\nimport PageTip from \"../components/PageTip\"\r\nimport ClientListing from \"../components/ClientListing\"\r\nimport SectionTitle from \"../components/SectionTitle\"\r\nimport {\r\n\tPrepare,\r\n\tCoaching,\r\n\tCFC,\r\n\tHealthCheck,\r\n\tDiscoverTopics,\r\n\tChangeLevers,\r\n\tActionChecklist,\r\n} from \"../content/CoachingConversation\"\r\n\r\n/**\r\n * Client listing page\r\n *\r\n * @returns ReactElement\r\n */\r\nconst ClientList = (): ReactElement => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<PageContainer role=\"main\">\r\n\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t<Grid item xs={12} sm={8}>\r\n\t\t\t\t\t\t<SectionTitle component=\"h1\">Clients and coaching</SectionTitle>\r\n\t\t\t\t\t\t<Box className=\"content-area\">\r\n\t\t\t\t\t\t\t<Typography>Manage and prepare your coaching.</Typography>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tRead our coaching guidance to prepare for your client. These\r\n\t\t\t\t\t\t\t\tmaterials will help you and your client get the most value from\r\n\t\t\t\t\t\t\t\tthe kit.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tYou can also import and export client data in your client list.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} md={6}>\r\n\t\t\t\t\t\t<ClientListing />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} md={6}>\r\n\t\t\t\t\t\t<SectionTitle component=\"h2\">Coaching conversation</SectionTitle>\r\n\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t<Prepare />\r\n\t\t\t\t\t\t\t<Coaching />\r\n\t\t\t\t\t\t\t<HealthCheck />\r\n\t\t\t\t\t\t\t<DiscoverTopics />\r\n\t\t\t\t\t\t\t<CFC />\r\n\t\t\t\t\t\t\t<ChangeLevers />\r\n\t\t\t\t\t\t\t<ActionChecklist />\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</PageContainer>\r\n\r\n\t\t\t<PageTip tip=\"ClientListTips\" />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ClientList\r\n","import React, { ReactElement } from \"react\"\r\nimport Alert, { AlertProps } from \"@material-ui/lab/Alert\"\r\nimport { Snackbar, IconButton } from \"@material-ui/core\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\n\r\n// #region Interface Definitions\r\n/**\r\n * Data required for the snackbar\r\n * use this interface when defining the state\r\n *\r\n * @export\r\n * @interface SnackbarMsgData\r\n */\r\nexport interface SnackbarMsgData {\r\n\topen: boolean\r\n\tmsg: string\r\n\tseverity?: AlertProps[\"severity\"]\r\n}\r\n\r\n/**\r\n * Props required to be passed to the component\r\n *\r\n * @export\r\n * @interface SnackbarMsgProps\r\n * @extends {SnackbarMsgData}\r\n */\r\nexport interface SnackbarMsgProps extends SnackbarMsgData {\r\n\tonClose: (\r\n\t\tevent: React.SyntheticEvent | React.MouseEvent,\r\n\t\treason?: string\r\n\t) => void\r\n}\r\n// #endregion\r\n\r\n/**\r\n * Snackbar abstraction component, use this for a consistent\r\n * way to show messages to the user\r\n *\r\n * The component who uses this component will need to handle the\r\n * state of this component and pass down the props.\r\n *\r\n * See the README\r\n *\r\n * @export\r\n * @param {SnackbarMsgProps} {\r\n * \topen,\r\n * \tmsg,\r\n * \tonClose,\r\n * \tseverity = \"info\",\r\n * }\r\n * @returns {ReactElement}\r\n */\r\nexport default function SnackbarMsg({\r\n\topen,\r\n\tmsg,\r\n\tonClose,\r\n\tseverity = \"info\",\r\n}: SnackbarMsgProps): ReactElement {\r\n\treturn (\r\n\t\t<Snackbar\r\n\t\t\topen={open}\r\n\t\t\tautoHideDuration={2000}\r\n\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n\t\t\tonClose={onClose}\r\n\t\t>\r\n\t\t\t<Alert\r\n\t\t\t\tseverity={severity}\r\n\t\t\t\tvariant=\"filled\"\r\n\t\t\t\taction={\r\n\t\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\">\r\n\t\t\t\t\t\t<CloseIcon fontSize=\"small\" />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t{msg}\r\n\t\t\t</Alert>\r\n\t\t</Snackbar>\r\n\t)\r\n}\r\n","var map = {\n\t\"./ActionChecklistTip\": [\n\t\t909,\n\t\t4\n\t],\n\t\"./ActionChecklistTip.tsx\": [\n\t\t909,\n\t\t4\n\t],\n\t\"./CFCanvasTip\": [\n\t\t910,\n\t\t5\n\t],\n\t\"./CFCanvasTip.tsx\": [\n\t\t910,\n\t\t5\n\t],\n\t\"./ChangeLevers\": [\n\t\t911,\n\t\t6\n\t],\n\t\"./ChangeLevers.tsx\": [\n\t\t911,\n\t\t6\n\t],\n\t\"./ClientListTips\": [\n\t\t912,\n\t\t7\n\t],\n\t\"./ClientListTips.tsx\": [\n\t\t912,\n\t\t7\n\t],\n\t\"./CoachingKitTips\": [\n\t\t913,\n\t\t8\n\t],\n\t\"./CoachingKitTips.tsx\": [\n\t\t913,\n\t\t8\n\t],\n\t\"./DiscoverTopicsTips\": [\n\t\t914,\n\t\t9\n\t],\n\t\"./DiscoverTopicsTips.tsx\": [\n\t\t914,\n\t\t9\n\t],\n\t\"./HCQuestionnaire\": [\n\t\t915,\n\t\t10\n\t],\n\t\"./HCQuestionnaire.tsx\": [\n\t\t915,\n\t\t10\n\t],\n\t\"./style\": [\n\t\t905,\n\t\t11\n\t],\n\t\"./style.ts\": [\n\t\t905,\n\t\t11\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 916;\nmodule.exports = webpackAsyncContext;","import { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nconst usePageTipStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tposition: \"fixed\",\r\n\t\tleft: theme.spacing(2),\r\n\t\tbottom: theme.spacing(2),\r\n\t},\r\n\ticon: {\r\n\t\tmarginRight: theme.spacing(1),\r\n\t},\r\n\tdrawer: {\r\n\t\tpadding: theme.spacing(2),\r\n\t\tmaxWidth: \"350px\",\r\n\t\twidth: \"100%\",\r\n\t},\r\n\tcloseBox: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tmarginBottom: theme.spacing(2),\r\n\t\tpaddingBottom: theme.spacing(2),\r\n\t\tborderBottom: 1,\r\n\t\tborderBottomColor: theme.palette.grey[500],\r\n\t\tborderBottomStyle: \"solid\",\r\n\t},\r\n}))\r\n\r\nexport default usePageTipStyles\r\n","import React from \"react\"\r\nimport loadable from \"@loadable/component\"\r\nimport Loading from \"../../Loading\"\r\n\r\n/**\r\n * Loadable component to dynamically render the tip content\r\n *\r\n */\r\nconst AsyncTip = loadable(\r\n\t(props: { tip: string }) => import(`../../../content/tips/${props.tip}`),\r\n\t{\r\n\t\tfallback: <Loading />,\r\n\t}\r\n)\r\n\r\nexport default AsyncTip\r\n","import React, { ReactElement, useState, MouseEvent } from \"react\"\r\nimport { Fab, Drawer, Button, Box, Typography } from \"@material-ui/core\"\r\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\"\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\"\r\nimport usePageTipStyles from \"./_config/style\"\r\nimport { IPageTip } from \"./_config/shape\"\r\nimport { AsyncTip } from \"./_partials\"\r\n\r\n/**\r\n * Renders a page tip tooltip at the bottom left of the page\r\n *\r\n * @param {string} {tip} File name (no extension) for the tip component\r\n * @returns ReactElement\r\n */\r\nconst PageTip = ({ tip }: IPageTip): ReactElement => {\r\n\tconst style = usePageTipStyles()\r\n\tconst [drawerOpen, setDrawerOpen] = useState<boolean>(false)\r\n\r\n\t/**\r\n\t * Toggles the state of the drawer\r\n\t *\r\n\t * @param {Boolean} open State to change the drawer to\r\n\t * @param {KeyboardEvent|MouseEvent<HTMLButtonElement>} event Event generated by a keypress|click\r\n\t */\r\n\tconst toggleDrawer = (open: boolean) => (\r\n\t\tevent: KeyboardEvent | MouseEvent<HTMLButtonElement>\r\n\t): void => {\r\n\t\tif (event instanceof KeyboardEvent) {\r\n\t\t\tif (\r\n\t\t\t\tevent.type === \"keydown\" &&\r\n\t\t\t\t(event.key === \"Tab\" || event.key === \"Shift\")\r\n\t\t\t) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Change the state of the drawer\r\n\t\tsetDrawerOpen(open)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={style.root} role=\"complementary\">\r\n\t\t\t\t<Fab color=\"secondary\" onClick={toggleDrawer(true)} variant=\"extended\">\r\n\t\t\t\t\t<HelpOutlineIcon className={style.icon} />\r\n\t\t\t\t\tTips\r\n\t\t\t\t</Fab>\r\n\t\t\t</div>\r\n\t\t\t<Drawer\r\n\t\t\t\tanchor=\"left\"\r\n\t\t\t\topen={drawerOpen}\r\n\t\t\t\tonClose={toggleDrawer(false)}\r\n\t\t\t\tclasses={{\r\n\t\t\t\t\tpaper: style.drawer,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Box className={style.closeBox}>\r\n\t\t\t\t\t<Typography variant=\"h6\">Tips</Typography>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={toggleDrawer(false)}\r\n\t\t\t\t\t\tstartIcon={<HighlightOffIcon />}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Box>\r\n\r\n\t\t\t\t<AsyncTip tip={tip} />\r\n\t\t\t</Drawer>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default PageTip\r\n","import { makeStyles } from \"@material-ui/core\"\r\n\r\n// Section title styles\r\nconst useSTStyles = makeStyles((theme) => ({\r\n\ttitle: {\r\n\t\tfontWeight: 500,\r\n\t\tmarginBottom: theme.spacing(2),\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tfontSize: theme.typography.h5.fontSize,\r\n\t\t},\r\n\t},\r\n}))\r\n\r\nexport default useSTStyles\r\n","import React, { ReactElement } from \"react\"\r\nimport { Typography } from \"@material-ui/core\"\r\nimport { SectionTitleProps } from \"./_config/shape\"\r\nimport useSTStyles from \"./_config/styles\"\r\n\r\n/**\r\n * Abstraction for the Typography for a consistent heading for sections\r\n *\r\n * @param {SectionTitleProps} props Mimics the props for `<Typography>`\r\n * @returns ReactElement\r\n */\r\nconst SectionTitle = ({\r\n\tchildren,\r\n\tclassName,\r\n\t...props\r\n}: SectionTitleProps): ReactElement => {\r\n\tconst styles = useSTStyles()\r\n\treturn (\r\n\t\t<Typography\r\n\t\t\tvariant=\"h4\"\r\n\t\t\tcolor=\"textPrimary\"\r\n\t\t\tclassName={`${styles.title} ${className}`}\r\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</Typography>\r\n\t)\r\n}\r\n\r\nexport default SectionTitle\r\n","import ILogicLayer from \"../_config/logicLayer\"\r\nimport HealthCheckDB from \"./HealthCheckDatabase\"\r\nimport {\r\n\tHealthCheckDataStruct,\r\n\tBaseHealthCheckStruct,\r\n\tHealthCheckId,\r\n\tClientId,\r\n} from \"../_config/shape\"\r\n\r\n/**\r\n * Logic implementation for the Health check database\r\n *\r\n * @class HealthCheckLogic\r\n * @extends {ILogicLayer<HealthCheckDataStruct, BaseHealthCheckStruct>}\r\n */\r\nclass HealthCheckLogic extends ILogicLayer<\r\n\tHealthCheckDataStruct,\r\n\tBaseHealthCheckStruct\r\n> {\r\n\t/**\r\n\t * Creates an instance of HealthCheckLogic.\r\n\t *\r\n\t * @memberof HealthCheckLogic\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper(HealthCheckDB, HealthCheckDB.healthChecks)\r\n\t}\r\n\r\n\t/**\r\n\t * Finds a health check by the id and clientId\r\n\t *\r\n\t * @param {HealthCheckId} id\r\n\t * @param {ClientId} clientId\r\n\t * @returns {Promise<HealthCheckDataStruct>}\r\n\t * @memberof HealthCheckLogic\r\n\t */\r\n\tpublic findByClientId(\r\n\t\tid: HealthCheckId,\r\n\t\tclientId: ClientId\r\n\t): Promise<HealthCheckDataStruct | undefined> {\r\n\t\treturn this.database.transaction(\"r\", this.table.name, () => {\r\n\t\t\treturn this.table.where({ id, clientId }).first()\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Finds all the health checks for a given client\r\n\t *\r\n\t * @param {ClientId} clientId\r\n\t * @returns {Promise<HealthCheckDataStruct[]>}\r\n\t * @memberof HealthCheckLogic\r\n\t */\r\n\tpublic findClientHealthChecks(\r\n\t\tclientId: ClientId\r\n\t): Promise<HealthCheckDataStruct[]> {\r\n\t\treturn this.database.transaction(\"r\", this.table.name, () => {\r\n\t\t\treturn this.table.where(\"clientId\").equals(clientId).toArray()\r\n\t\t})\r\n\t}\r\n}\r\n\r\n// Creates a instance of the logic class and exports the instance\r\nconst HealthCheckUseCase = new HealthCheckLogic()\r\n\r\nexport default HealthCheckUseCase\r\n","import React, { ReactElement, MouseEvent, useState } from \"react\"\r\nimport { ButtonProps } from \"./IconDeleteButton\"\r\nimport IconDeleteButton from \".\"\r\nimport ConfirmDialogue from \"../ConfirmDialogue\"\r\n\r\n/**\r\n * Icon delete button with a confirm dialog component\r\n *\r\n * @export\r\n * @param {ButtonProps} {\r\n * \tonClick,\r\n * }\r\n * @returns {ReactElement}\r\n */\r\nexport default function IconDeleteButtonwDialog({\r\n\tonClick,\r\n}: ButtonProps): ReactElement {\r\n\tconst [dialogOpen, setDialogOpen] = useState<boolean>(false)\r\n\r\n\t/**\r\n\t * Closes the dialog\r\n\t *\r\n\t */\r\n\tfunction onDialogClose(): void {\r\n\t\tsetDialogOpen(false)\r\n\t}\r\n\r\n\t/**\r\n\t * Performs onClick prop function\r\n\t *\r\n\t * @param {MouseEvent<HTMLButtonElement>} e\r\n\t */\r\n\tfunction onDialogConfirm(e: MouseEvent<HTMLButtonElement>): void {\r\n\t\tonClick(e)\r\n\t\tonDialogClose()\r\n\t}\r\n\r\n\t/**\r\n\t * Opens the dialog\r\n\t *\r\n\t * @param {MouseEvent<HTMLButtonElement>} e\r\n\t */\r\n\tfunction triggerDialog(e: MouseEvent<HTMLButtonElement>): void {\r\n\t\te.preventDefault()\r\n\t\tsetDialogOpen(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<IconDeleteButton onClick={triggerDialog} />\r\n\t\t\t<ConfirmDialogue\r\n\t\t\t\topen={dialogOpen}\r\n\t\t\t\tonClose={onDialogClose}\r\n\t\t\t\tonCancel={onDialogClose}\r\n\t\t\t\tonConfirm={onDialogConfirm}\r\n\t\t\t>\r\n\t\t\t\tAre you sure you want to remove this item?\r\n\t\t\t</ConfirmDialogue>\r\n\t\t</>\r\n\t)\r\n}\r\n"],"sourceRoot":""}